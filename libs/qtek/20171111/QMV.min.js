!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.QMV={})}(this,function(e){"use strict";function t(e,t,i){"object"==typeof t&&(i=t,t=null);var a,o=this;if(!(e instanceof Function)){a=[];for(var s in e)e.hasOwnProperty(s)&&a.push(s)}var u=function(t){if(o.apply(this,arguments),e instanceof Function?r(this,e.call(this,t)):n(this,e,a),this.constructor===u)for(var i=u.__initializers__,s=0;s<i.length;s++)i[s].apply(this,arguments)};u.__super__=o,o.__initializers__?u.__initializers__=o.__initializers__.slice():u.__initializers__=[],t&&u.__initializers__.push(t);var l=function(){};return l.prototype=o.prototype,u.prototype=new l,u.prototype.constructor=u,r(u.prototype,i),u.extend=o.extend,u.derive=o.extend,u}function r(e,t){if(t)for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])}function n(e,t,r){for(var n=0;n<r.length;n++){var i=r[n];e[i]=t[i]}}function i(e,t){this.action=e,this.context=t}function a(e){function t(t){var n=e.getExtension(t);n||(n=e.getExtension("MOZ_"+t)),n||(n=e.getExtension("WEBKIT_"+t)),r[t]=n}for(var r={},n={},i=0;i<et.length;i++){t(et[i])}for(var i=0;i<tt.length;i++){var a=tt[i];n[a]=e.getParameter(e[a])}this.getExtension=function(e){return void 0===r[e]&&t(e),r[e]},this.getParameter=function(e){return n[e]}}function o(e,t,r){return e<t?t:e>r?r:e}function s(){return{locations:{},attriblocations:{}}}function u(e,t,r){if(!e.getShaderParameter(t,e.COMPILE_STATUS))return[e.getShaderInfoLog(t),l(r)].join("\n")}function l(e){for(var t=e.split("\n"),r=0,n=t.length;r<n;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function c(){this._pool={}}function h(e,t,r){Gt[e]={vertex:t,fragment:r}}function f(e){var t=new XMLHttpRequest;t.open("get",e.url),t.responseType=e.responseType||"text",e.onprogress&&(t.onprogress=function(t){if(t.lengthComputable){var r=t.loaded/t.total;e.onprogress(r,t.loaded,t.total)}else e.onprogress(null)}),t.onload=function(r){t.status>=400?e.onerror&&e.onerror():e.onload&&e.onload(t.response)},e.onerror&&(t.onerror=e.onerror),t.send(null)}function d(e,t){if(t.castShadow&&!e.castShadow)return!0}function _(e,t,r){var n=t;n+=256*r.roughnessChannel,n+=1024*r.metalnessChannel;for(var i=0;i<e.length;i++)n+=br[e[i]];for(var i=0;i<Tr.length;i++){var a=Tr[i];r[a]&&(n+=br[a])}return n}function p(e,t,r,n){var i=_(t,r,n),a=mr[i];return a||(a=new Ut({vertex:Ut.source("qtek.standard.vertex"),fragment:Ut.source("qtek.standard.fragment")}),a.enableTexture(t),a.define("fragment","USE_METALNESS"),a.define("fragment","USE_ROUGHNESS"),a.define("ROUGHNESS_CHANNEL",n.roughnessChannel),a.define("METALNESS_CHANNEL",n.metalnessChannel),r&&(a.define("vertex","SKINNING"),a.define("vertex","JOINT_COUNT",r)),n.environmentMapPrefiltered&&a.define("fragment","ENVIRONMENTMAP_PREFILTER"),n.linear&&a.define("fragment","SRGB_DECODE"),n.encodeRGBM&&a.define("fragment","RGBM_ENCODE"),n.decodeRGBM&&a.define("fragment","RGBM_DECODE"),n.parallaxCorrected&&a.define("fragment","PARALLAX_CORRECTED"),n.doubleSided&&a.define("fragment","DOUBLE_SIDED"),n.alphaTest&&a.define("fragment","ALPHA_TEST"),mr[i]=a,vr[e.__GUID__]=vr[e.__GUID__]||{},vr[e.__GUID__][i]=0),vr[e.__GUID__][i]++,a.__key__=i,a}function m(e,t){var r=e.__key__;mr[r]&&(--vr[t.__GUID__][r]||t&&e.dispose(t))}function v(e,t,r){this.availableAttributes=e,this.availableAttributeSymbols=t,this.indicesBuffer=r,this.vao=null}function g(){}function y(e,t){return e.time-t.time}function x(e,t,r,n,i,a){var o=t[i],s=t[i+1],u=t[i+2];return e[0]=o+n*(r[a]-o),e[1]=s+n*(r[a+1]-s),e[2]=u+n*(r[a+2]-u),e}function T(e,t,r,n,i,a){var o,s,u,l,c,h=t[0+i],f=t[1+i],d=t[2+i],_=t[3+i],p=r[0+a],m=r[1+a],v=r[2+a],g=r[3+a];return s=h*p+f*m+d*v+_*g,s<0&&(s=-s,p=-p,m=-m,v=-v,g=-g),1-s>1e-6?(o=Math.acos(s),u=Math.sin(o),l=Math.sin((1-n)*o)/u,c=Math.sin(n*o)/u):(l=1-n,c=n),e[0]=l*h+c*p,e[1]=l*f+c*m,e[2]=l*d+c*v,e[3]=l*_+c*g,e}function E(e){return{byte:at.Int8Array,ubyte:at.Uint8Array,short:at.Int16Array,ushort:at.Uint16Array}[e]||at.Float32Array}function b(e,t,r,n){this.name=e,this.type=t,this.size=r,n&&(this.semantic=n)}function S(e,t,r,n){switch(b.call(this,e,t,r,n),this.value=null,r){case 1:this.get=function(e){return this.value[e]},this.set=function(e,t){this.value[e]=t},this.copy=function(e,t){this.value[e]=this.value[e]};break;case 2:this.get=function(e,t){var r=this.value;return t[0]=r[2*e],t[1]=r[2*e+1],t},this.set=function(e,t){var r=this.value;r[2*e]=t[0],r[2*e+1]=t[1]},this.copy=function(e,t){var r=this.value;t*=2,e*=2,r[e]=r[t],r[e+1]=r[t+1]};break;case 3:this.get=function(e,t){var r=3*e,n=this.value;return t[0]=n[r],t[1]=n[r+1],t[2]=n[r+2],t},this.set=function(e,t){var r=3*e,n=this.value;n[r]=t[0],n[r+1]=t[1],n[r+2]=t[2]},this.copy=function(e,t){var r=this.value;t*=3,e*=3,r[e]=r[t],r[e+1]=r[t+1],r[e+2]=r[t+2]};break;case 4:this.get=function(e,t){var r=this.value,n=4*e;return t[0]=r[n],t[1]=r[n+1],t[2]=r[n+2],t[3]=r[n+3],t},this.set=function(e,t){var r=this.value,n=4*e;r[n]=t[0],r[n+1]=t[1],r[n+2]=t[2],r[n+3]=t[3]},this.copy=function(e,t){var r=this.value;t*=4,e*=4,r[e]=r[t],r[e+1]=r[t+1],r[e+2]=r[t+2],r[e+3]=r[t+3]}}}function A(e,t,r,n,i){this.name=e,this.type=t,this.buffer=r,this.size=n,this.semantic=i,this.symbol="",this.needsRemove=!1}function N(e){this.buffer=e,this.count=0}function w(){console.warn("Geometry doesn't implement this method, use StaticGeometry instead")}function M(e){return"attr_"+e}function R(e,t,r,n){var i=e.accessors[r],a=t.bufferViews[i.bufferView],o=i.byteOffset||0,s=On[i.componentType]||at.Float32Array,u=Fn[i.type];null==u&&n&&(u=1);var l=new s(a,o,u*i.count),c=i.extensions&&i.extensions.WEB3D_quantized_attributes;if(c){for(var h,f,d=new at.Float32Array(u*i.count),_=c.decodeMatrix,h=new Array(u),f=new Array(u),p=0;p<u;p++)h[p]=_[u*(u+1)+p],f[p]=_[p*(u+1)+p];for(var m=0;m<i.count;m++)for(var p=0;p<u;p++)d[m*u+p]=l[m*u+p]*f[p]+h[p];l=d}return l}function C(e,t){return e[t]}function L(e,t,r){e[t]=r}function D(e,t,r){return(t-e)*r+e}function P(e,t,r,n,i){var a=e.length;if(1==i)for(var o=0;o<a;o++)n[o]=D(e[o],t[o],r);else for(var s=e[0].length,o=0;o<a;o++)for(var u=0;u<s;u++)n[o][u]=D(e[o][u],t[o][u],r)}function I(e){return void 0!==e&&("string"!=typeof e&&"number"==typeof e.length)}function O(e){if(I(e)){var t=e.length;if(I(e[0])){for(var r=[],n=0;n<t;n++)r.push(Bn.call(e[n]));return r}return Bn.call(e)}return e}function F(e,t,r,n,i,a,o,s,u){var l=e.length;if(1==u)for(var c=0;c<l;c++)s[c]=k(e[c],t[c],r[c],n[c],i,a,o);else for(var h=e[0].length,c=0;c<l;c++)for(var f=0;f<h;f++)s[c][f]=k(e[c][f],t[c][f],r[c][f],n[c][f],i,a,o)}function k(e,t,r,n,i,a,o){var s=.5*(r-e),u=.5*(n-t);return(2*(t-r)+s+u)*o+(-3*(t-r)-2*s-u)*a+s*i+t}function B(e,t,r){var n=e.length,i=t.length;if(n!==i){if(n>i)e.length=i;else for(var a=n;a<i;a++)e.push(1===r?t[a]:Bn.call(t[a]))}for(var o=e[0]&&e[0].length,a=0;a<e.length;a++)if(1===r)isNaN(e[a])&&(e[a]=t[a]);else for(var s=0;s<o;s++)isNaN(e[a][s])&&(e[a][s]=t[a][s])}function U(e,t,r){if(e===t)return!0;var n=e.length;if(n!==t.length)return!1;if(1===r){for(var i=0;i<n;i++)if(e[i]!==t[i])return!1}else for(var a=e[0].length,i=0;i<n;i++)for(var o=0;o<a;o++)if(e[i][o]!==t[i][o])return!1;return!0}function H(e,t,r,n,i,a){var o=e._getter,s=e._setter,u="spline"===t,l=n.length;if(l){var c=n[0].value,h=I(c),f=h&&I(c[0])?2:1;n.sort(function(e,t){return e.time-t.time});for(var d=n[l-1].time,_=[],p=[],m=n[0].value,v=!0,g=0;g<l;g++){_.push(n[g].time/d);var y=n[g].value;h&&U(y,m,f)||!h&&y===m||(v=!1),m=y,p.push(y)}if(!v){for(var x=p[l-1],g=0;g<l-1;g++)h?B(p[g],x,f):isNaN(p[g])&&!isNaN(x)&&(p[g]=x);h&&B(o(e._target,i),x,f);var T,g,E,b,S,A,N,w=0,M=0,R=function(e,t){if(t<M){for(T=Math.min(w+1,l-1),g=T;g>=0&&!(_[g]<=t);g--);g=Math.min(g,l-2)}else{for(g=w;g<l&&!(_[g]>t);g++);g=Math.min(g-1,l-2)}w=g,M=t;var r=_[g+1]-_[g];0!==r&&(E=(t-_[g])/r,u?(S=p[g],b=p[0===g?g:g-1],A=p[g>l-2?l-1:g+1],N=p[g>l-3?l-1:g+2],a?s(e,i,a(o(e,i),b,S,A,N,E)):h?F(b,S,A,N,E,E*E,E*E*E,o(e,i),f):s(e,i,k(b,S,A,N,E,E*E,E*E*E))):a?s(e,i,a(o(e,i),p[g],p[g+1],E)):h?P(p[g],p[g+1],E,o(e,i),f):s(e,i,D(p[g],p[g+1],E)))},C=new on({target:e._target,life:d,loop:e._loop,delay:e._delay,onframe:R,onfinish:r});return t&&"spline"!==t&&C.setEasing(t),C}}}function z(e,t,r,n,i){this._tracks={},this._target=e,this._loop=t||!1,this._getter=r||C,this._setter=n||L,this._interpolater=i||null,this._delay=0,this._doneList=[],this._onframeList=[],this._clipList=[]}function G(e,t){var r=new Wn;return ar.get({url:e,responseType:t,onload:function(e){r.resolve(e)},onerror:function(e){r.reject(e)}}),r}function q(e){return"CANVAS"===e.nodeName||"VIDEO"===e.nodeName||e.complete}function W(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function V(e,t,r,n){if(e[3]>0){var i=Math.pow(2,e[3]-128-8+n);t[r+0]=e[0]*i,t[r+1]=e[1]*i,t[r+2]=e[2]*i}else t[r+0]=0,t[r+1]=0,t[r+2]=0;return t[r+3]=1,t}function j(e,t,r){for(var n="",i=t;i<r;i++)n+=fi(e[i]);return n}function X(e,t){t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3]}function K(e,t,r,n){for(var i=0,a=0,o=n;o>0;)if(e[a][0]=t[r++],e[a][1]=t[r++],e[a][2]=t[r++],e[a][3]=t[r++],1===e[a][0]&&1===e[a][1]&&1===e[a][2]){for(var s=e[a][3]<<i>>>0;s>0;s--)X(e[a-1],e[a]),a++,o--;i+=8}else a++,o--,i=0;return r}function Y(e,t,r,n){if(n<di|n>_i)return K(e,t,r,n);var i=t[r++];if(2!=i)return K(e,t,r-1,n);if(e[0][1]=t[r++],e[0][2]=t[r++],i=t[r++],(e[0][2]<<8>>>0|i)>>>0!==n)return null;for(var i=0;i<4;i++)for(var a=0;a<n;){var o=t[r++];if(o>128){o=(127&o)>>>0;for(var s=t[r++];o--;)e[a++][i]=s}else for(;o--;)e[a++][i]=t[r++]}return r}function Z(e){Je.defaultsWithPropList(e,Ai,Ni),Q(e);for(var t="",r=0;r<Ni.length;r++){t+=e[Ni[r]].toString()}return t}function Q(e){var t=J(e.width,e.height);e.format===rt.DEPTH_COMPONENT&&(e.useMipmap=!1),t&&e.useMipmap||(e.minFilter==rt.NEAREST_MIPMAP_NEAREST||e.minFilter==rt.NEAREST_MIPMAP_LINEAR?e.minFilter=rt.NEAREST:e.minFilter!=rt.LINEAR_MIPMAP_LINEAR&&e.minFilter!=rt.LINEAR_MIPMAP_NEAREST||(e.minFilter=rt.LINEAR)),t||(e.wrapS=rt.CLAMP_TO_EDGE,e.wrapT=rt.CLAMP_TO_EDGE)}function J(e,t){return 0==(e&e-1)&&0==(t&t-1)}function $(e,t){return function(r){var n=r.getDevicePixelRatio(),i=r.getWidth(),a=r.getHeight(),o=t(i,a,n);this.setParameter(e,o)}}function ee(e,t){return function(e){var r=e.getDevicePixelRatio(),n=e.getWidth(),i=e.getHeight();return t(n,i,r)}}function te(e){var t=/^expr\((.*)\)$/.exec(e);if(t)try{var r=new Function("width","height","dpr","return "+t[1]);return r(1,1),r}catch(e){throw new Error("Invalid expression.")}}function re(e,t){for(var r=0,n=1/t,i=e;i>0;)r+=n*(i%t),i=Math.floor(i/t),n/=t;return r}function ne(e){for(var t=new Uint8Array(e*e*4),r=0,n=new ut,i=0;i<e;i++)for(var a=0;a<e;a++)n.set(2*Math.random()-1,2*Math.random()-1,0).normalize(),t[r++]=255*(.5*n.x+.5),t[r++]=255*(.5*n.y+.5),t[r++]=0,t[r++]=255;return t}function ie(e){return new Pr({pixels:ne(e),wrapS:Vt.REPEAT,wrapT:Vt.REPEAT,width:e,height:e})}function ae(e,t,r){var n=new Float32Array(3*e);t=t||0;for(var i=0;i<e;i++){var a=re(i+t,2)*(r?1:2)*Math.PI,o=re(i+t,3)*Math.PI,s=Math.random(),u=Math.cos(a)*Math.sin(o)*s,l=Math.cos(o)*s,c=Math.sin(a)*Math.sin(o)*s;n[3*i]=u,n[3*i+1]=l,n[3*i+2]=c}return n}function oe(e){e=e||{},this._ssaoPass=new bi({fragment:Ut.source("ecgl.ssao.estimate")}),this._blurPass=new bi({fragment:Ut.source("ecgl.ssao.blur")}),this._framebuffer=new ni,this._ssaoTexture=new Pr,this._blurTexture=new Pr,this._depthTex=e.depthTexture,this._normalTex=e.normalTexture,this.setNoiseSize(4),this.setKernelSize(e.kernelSize||12),null!=e.radius&&this.setParameter("radius",e.radius),null!=e.power&&this.setParameter("power",e.power),this._normalTex||(this._ssaoPass.material.shader.disableTexture("normalTex"),this._blurPass.material.shader.disableTexture("normalTex")),this._blurPass.material.shader.disableTexture("depthTex"),this._blurPass.material.setUniform("normalTex",this._normalTex)}function se(e){e=e||{},this._ssrPass=new bi({fragment:Ut.source("ecgl.ssr.main"),clearColor:[0,0,0,0]}),this._blurPass1=new bi({fragment:Ut.source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._blurPass2=new bi({fragment:Ut.source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._ssrPass.setUniform("gBufferTexture1",e.normalTexture),this._ssrPass.setUniform("gBufferTexture2",e.depthTexture),this._blurPass1.setUniform("gBufferTexture1",e.normalTexture),this._blurPass2.setUniform("gBufferTexture1",e.normalTexture),this._blurPass2.material.shader.define("fragment","VERTICAL"),this._blurPass2.material.shader.define("fragment","BLEND"),this._texture1=new Pr({type:Vt.HALF_FLOAT}),this._texture2=new Pr({type:Vt.HALF_FLOAT}),this._frameBuffer=new ni}function ue(e){var t=document.createElement("canvas");t.width=t.height=1;var r=t.getContext("2d");return r.fillStyle=e||"#000",r.fillRect(0,0,1,1),t}function le(e,t,r,n,i){var a=e.gl;t.setUniform(a,"1i",r,i),a.activeTexture(a.TEXTURE0+i),n.isRenderable()?n.bind(e):n.unbind(e)}function ce(e,t,r){var n,i,a;return function(o,s,u){if(!a||a.__standardMat!==o.__standardMat){var l,c,h,f=o.__standardMat,d=o.material,_=f.shader.isDefined("fragment","USE_ROUGHNESS");_?(l=1-f.get("roughness"),c=f.get("roughnessMap"),h=f.shader.getDefine("fragment","ROUGHNESS_CHANNEL")):(l=f.get("glossiness"),c=f.get("glossinessMap"),h=f.shader.getDefine("fragment","GLOSSINESS_CHANNEL"));var p=!!c,m=f.get("normalMap")||t,v=f.get("uvRepeat"),g=f.get("uvOffset");c=c||r,s!==d?(d.set("glossiness",l),d.set("normalMap",m),d.set("roughGlossMap",c),d.set("useRoughGlossMap",+p),d.set("useRoughness",+_),d.set("roughGlossChannel",+h||0),d.set("uvRepeat",v),d.set("uvOffset",g)):(d.shader.setUniform(e,"1f","glossiness",l),n!==m&&le(this,d.shader,"normalMap",m,0),i!==c&&le(this,d.shader,"roughGlossMap",c,1),d.shader.setUniform(e,"1i","useRoughGlossMap",+p),d.shader.setUniform(e,"1i","useRoughness",+_),d.shader.setUniform(e,"1i","roughGlossChannel",+h||0),null!=v&&d.shader.setUniform(e,"2f","uvRepeat",v),null!=g&&d.shader.setUniform(e,"2f","uvOffset",g)),n=m,i=c,a=o}}}function he(e,t,r){var n,i,a;return function(o,s,u){if(!i||i.__standardMat!==o.__standardMat){var l=o.__standardMat,c=o.material,h=l.get("color"),f=l.get("metalness"),d=l.get("diffuseMap"),_=l.get("metalnessMap"),p=l.get("uvRepeat"),m=l.get("uvOffset"),v=!!_;d=d||t,_=_||r,s!==c?(c.set("color",h),c.set("metalness",f),c.set("diffuseMap",d),c.set("metalnessMap",_),c.set("useMetalnessMap",+v),c.set("uvRepeat",p),c.set("uvOffset",m),c.set("linear",+l.linear)):(c.shader.setUniform(e,"1f","metalness",f),c.shader.setUniform(e,"3f","color",h),n!==d&&le(this,c.shader,"diffuseMap",d,0),a!==_&&le(this,c.shader,"metalnessMap",_,1),c.shader.setUniform(e,"1i","useMetalnessMap",+v),c.shader.setUniform(e,"2f","uvRepeat",p),c.shader.setUniform(e,"2f","uvOffset",m),c.shader.setUniform(e,"1i","linear",+l.linear)),n=d,a=_,i=o}}}function fe(e,t,r){Xi.identity();var n=new Xn({widthSegments:t,heightSegments:r});switch(e){case"px":Et.translate(Xi,Xi,ut.POSITIVE_X),Et.rotateY(Xi,Xi,Math.PI/2);break;case"nx":Et.translate(Xi,Xi,ut.NEGATIVE_X),Et.rotateY(Xi,Xi,-Math.PI/2);break;case"py":Et.translate(Xi,Xi,ut.POSITIVE_Y),Et.rotateX(Xi,Xi,-Math.PI/2);break;case"ny":Et.translate(Xi,Xi,ut.NEGATIVE_Y),Et.rotateX(Xi,Xi,Math.PI/2);break;case"pz":Et.translate(Xi,Xi,ut.POSITIVE_Z);break;case"nz":Et.translate(Xi,Xi,ut.NEGATIVE_Z),Et.rotateY(Xi,Xi,Math.PI)}return n.applyTransform(Xi),n}function de(e,t){var r=e[0],n=e[1],i=e[2];return 0===t?1:1===t?r:2===t?n:3===t?i:4===t?r*i:5===t?n*i:6===t?r*n:7===t?3*i*i-1:r*r-n*n}function _e(e,t,r,n){for(var i=new at.Float32Array(27),a=ea.create(),o=ea.create(),s=ea.create(),u=0;u<9;u++){for(var l=ea.create(),c=0;c<ra.length;c++){for(var h=t[ra[c]],f=ea.create(),d=0,_=0,p=na[ra[c]],m=0;m<n;m++)for(var v=0;v<r;v++){a[0]=v/(r-1)*2-1,a[1]=m/(n-1)*2-1,a[2]=-1,ea.normalize(a,a),s[0]=a[p[0]]*p[3],s[1]=a[p[1]]*p[4],s[2]=a[p[2]]*p[5],o[0]=h[_++]/255,o[1]=h[_++]/255,o[2]=h[_++]/255;var g=h[_++]/255*51.5;o[0]*=g,o[1]*=g,o[2]*=g,ea.scaleAndAdd(f,f,o,de(s,u)*-a[2]),d+=-a[2]}ea.scaleAndAdd(l,l,f,1/d)}i[3*u]=l[0]/6,i[3*u+1]=l[1]/6,i[3*u+2]=l[2]/6}return i}function pe(e){return e=Math.round(e),e<0?0:e>255?255:e}function me(e){return e<0?0:e>1?1:e}function ve(e){return pe(e.length&&"%"===e.charAt(e.length-1)?parseFloat(e)/100*255:parseInt(e,10))}function ge(e){return me(e.length&&"%"===e.charAt(e.length-1)?parseFloat(e)/100:parseFloat(e))}function ye(e,t,r){return r<0?r+=1:r>1&&(r-=1),6*r<1?e+(t-e)*r*6:2*r<1?t:3*r<2?e+(t-e)*(2/3-r)*6:e}function xe(e,t,r,n,i){return e[0]=t,e[1]=r,e[2]=n,e[3]=i,e}function Te(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}function Ee(e,t){oa&&Te(oa,t),oa=aa.put(e,oa||t.slice())}function be(e,t){if(e){t=t||[];var r=aa.get(e);if(r)return Te(t,r);e+="";var n=e.replace(/ /g,"").toLowerCase();if(n in ia)return Te(t,ia[n]),Ee(e,t),t;if("#"!==n.charAt(0)){var i=n.indexOf("("),a=n.indexOf(")");if(-1!==i&&a+1===n.length){var o=n.substr(0,i),s=n.substr(i+1,a-(i+1)).split(","),u=1;switch(o){case"rgba":if(4!==s.length)return void xe(t,0,0,0,1);u=ge(s.pop());case"rgb":return 3!==s.length?void xe(t,0,0,0,1):(xe(t,ve(s[0]),ve(s[1]),ve(s[2]),u),Ee(e,t),t);case"hsla":return 4!==s.length?void xe(t,0,0,0,1):(s[3]=ge(s[3]),Se(s,t),Ee(e,t),t);case"hsl":return 3!==s.length?void xe(t,0,0,0,1):(Se(s,t),Ee(e,t),t);default:return}}xe(t,0,0,0,1)}else{if(4===n.length){var l=parseInt(n.substr(1),16);return l>=0&&l<=4095?(xe(t,(3840&l)>>4|(3840&l)>>8,240&l|(240&l)>>4,15&l|(15&l)<<4,1),Ee(e,t),t):void xe(t,0,0,0,1)}if(7===n.length){var l=parseInt(n.substr(1),16);return l>=0&&l<=16777215?(xe(t,(16711680&l)>>16,(65280&l)>>8,255&l,1),Ee(e,t),t):void xe(t,0,0,0,1)}}}}function Se(e,t){var r=(parseFloat(e[0])%360+360)%360/360,n=ge(e[1]),i=ge(e[2]),a=i<=.5?i*(n+1):i+n-i*n,o=2*i-a;return t=t||[],xe(t,pe(255*ye(o,a,r+1/3)),pe(255*ye(o,a,r)),pe(255*ye(o,a,r-1/3)),1),4===e.length&&(t[3]=e[3]),t}function Ae(e,t){if(e&&e.length){var r=e[0]+","+e[1]+","+e[2];return"rgba"!==t&&"hsva"!==t&&"hsla"!==t||(r+=","+e[3]),t+"("+r+")"}}function Ne(e){return!e||"none"===e}function we(e){return e instanceof HTMLCanvasElement||e instanceof HTMLImageElement||e instanceof Image}function Me(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function Re(e){if((e.wrapS===Vt.REPEAT||e.wrapT===Vt.REPEAT)&&e.image){var t=Me(e.width),r=Me(e.height);if(t!==e.width||r!==e.height){var n=document.createElement("canvas");n.width=t,n.height=r;n.getContext("2d").drawImage(e.image,0,0,t,r),n.srcImage=e.image,e.image=n,e.dirty()}}}function Ce(){this._sourceTexture=new Pr({type:Vt.HALF_FLOAT}),this._depthTexture=new Pr({format:Vt.DEPTH_COMPONENT,type:Vt.UNSIGNED_INT}),this._framebuffer=new ni,this._framebuffer.attach(this._sourceTexture),this._framebuffer.attach(this._depthTexture,ni.DEPTH_ATTACHMENT),this._gBufferPass=new zi({enableTargetTexture3:!1});var e=new Bi;this._compositor=e.parse(la);var t=this._compositor.getNodeByName("source");t.texture=this._sourceTexture;var r=this._compositor.getNodeByName("coc");this._sourceNode=t,this._cocNode=r,this._compositeNode=this._compositor.getNodeByName("composite"),this._fxaaNode=this._compositor.getNodeByName("FXAA"),this._dofBlurNodes=["dof_far_blur","dof_near_blur","dof_coc_blur"].map(function(e){return this._compositor.getNodeByName(e)},this),this._dofBlurKernel=null,this._dofBlurKernelSize=new Float32Array(0),this._finalNodesChain=ha.map(function(e){return this._compositor.getNodeByName(e)},this);var n={normalTexture:this._gBufferPass.getTargetTexture1(),depthTexture:this._gBufferPass.getTargetTexture2()};this._ssaoPass=new oe(n),this._ssrPass=new se(n)}function Le(){for(var e=[],t=0;t<30;t++)e.push([re(t,2),re(t,3)]);this._haltonSequence=e,this._frame=0,this._sourceTex=new Pr,this._sourceFb=new ni,this._sourceFb.attach(this._sourceTex),this._prevFrameTex=new Pr,this._outputTex=new Pr;var r=this._blendPass=new bi({fragment:Ut.source("qtek.compositor.blend")});r.material.shader.disableTexturesAll(),r.material.shader.enableTexture(["texture1","texture2"]),this._blendFb=new ni({depthBuffer:!1}),this._outputPass=new bi({fragment:Ut.source("qtek.compositor.output"),blendWithPrevious:!0}),this._outputPass.material.shader.define("fragment","OUTPUT_ALPHA"),this._outputPass.material.blend=function(e){e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)}}function De(e,t,r){this.renderer=e,r=r||"perspective",this.scene=new _r,this.rootNode=this.scene,this.viewport={x:0,y:0,width:0,height:0},this.preZ=!1,this.setProjection(r),this._compositor=new Ce,this._temporalSS=new Le,t&&(this._shadowMapPass=new Ri({lightFrustumBias:20}));for(var n=[],i=0,a=0;a<30;a++){for(var o=[],s=0;s<6;s++)o.push(4*re(i,2)-2),o.push(4*re(i,3)-2),i++;n.push(o)}this._pcfKernels=n,this._enableTemporalSS="auto",this.scene.on("beforerender",function(e,t,r){this.needsTemporalSS()&&this._temporalSS.jitterProjection(e,r)},this)}function Pe(e){this.setScene(e)}function Ie(e){if(null==e||"object"!=typeof e)return e;var t=e,r=va.call(e);if("[object Array]"===r){t=[];for(var n=0,i=e.length;n<i;n++)t[n]=Ie(e[n])}else if(ma[r]){var a=e.constructor;if(e.constructor.from)t=a.from(e);else{t=new a(e.length);for(var n=0,i=e.length;n<i;n++)t[n]=Ie(e[n])}}else if(!pa[r]&&!He(e)&&!Ue(e)){t={};for(var o in e)e.hasOwnProperty(o)&&(t[o]=Ie(e[o]))}return t}function Oe(e,t,r){if(!ke(t)||!ke(e))return r?Ie(t):e;for(var n in t)if(t.hasOwnProperty(n)){var i=e[n],a=t[n];!ke(a)||!ke(i)||Fe(a)||Fe(i)||Ue(a)||Ue(i)||Be(a)||Be(i)||He(a)||He(i)?!r&&n in e||(e[n]=Ie(t[n],!0)):Oe(i,a,r)}return e}function Fe(e){return"[object Array]"===va.call(e)}function ke(e){var t=typeof e;return"function"===t||!!e&&"object"==t}function Be(e){return!!pa[va.call(e)]}function Ue(e){return"object"==typeof e&&"number"==typeof e.nodeType&&"object"==typeof e.ownerDocument}function He(e){return e[ga]}function ze(e,t){for(var r=[],n=[],i=[],a=[],o=[],s=[],u=e.geometry,l=e.skeleton.getSubSkinMatrices(e.__GUID__,e.joints),c=0;c<e.joints.length;c++){a[c]=a[c]||[];for(var h=0;h<16;h++)a[c][h]=l[16*c+h]}for(var f=u.attributes.position,d=u.attributes.weight,_=u.attributes.joint,p=[1/0,1/0,1/0],m=[-1/0,-1/0,-1/0],c=0;c<u.vertexCount;c++){f.get(c,r),d.get(c,i),_.get(c,n),i[3]=1-i[0]-i[1]-i[2],ya.set(o,0,0,0);for(var h=0;h<4;h++)n[h]>=0&&i[h]>1e-6&&(ya.transformMat4(s,r,a[n[h]]),ya.scaleAndAdd(o,o,s,i[h]));ya.min(p,p,o),ya.max(m,m,o)}t.min.setArray(p),t.max.setArray(m)}function Ge(e,t){t=t||new vt;var r=new vt;return e.traverse(function(e){e.geometry&&(e.isSkinnedMesh()?(ze(e,r),e.geometry.boundingBox.copy(r)):(r.copy(e.geometry.boundingBox),r.applyTransform(e.worldTransform)),t.union(r))}),t}function qe(e){var t=e[1][0]-e[0][0],r=e[1][1]-e[0][1];return Math.sqrt(t*t+r*r)}function We(e){return[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2]}function Ve(e){return Array.isArray(e)||(e=[e,e]),e}function je(e,t){t=Ie(t),Oe(t,_a),this.init(e,t)}var Xe={extend:t,derive:t},Ke={trigger:function(e){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(e)){var t=this.__handlers__[e],r=t.length,n=-1,i=arguments;switch(i.length){case 1:for(;++n<r;)t[n].action.call(t[n].context);return;case 2:for(;++n<r;)t[n].action.call(t[n].context,i[1]);return;case 3:for(;++n<r;)t[n].action.call(t[n].context,i[1],i[2]);return;case 4:for(;++n<r;)t[n].action.call(t[n].context,i[1],i[2],i[3]);return;case 5:for(;++n<r;)t[n].action.call(t[n].context,i[1],i[2],i[3],i[4]);return;default:for(;++n<r;)t[n].action.apply(t[n].context,Array.prototype.slice.call(i,1));return}}},on:function(e,t,r){if(e&&t){var n=this.__handlers__||(this.__handlers__={});if(n[e]){if(this.has(e,t))return}else n[e]=[];var a=new i(t,r||this);return n[e].push(a),this}},once:function(e,t,r){function n(){i.off(e,n),t.apply(this,arguments)}if(e&&t){var i=this;return this.on(e,n,r)}},before:function(e,t,r){if(e&&t)return e="before"+e,this.on(e,t,r)},after:function(e,t,r){if(e&&t)return e="after"+e,this.on(e,t,r)},success:function(e,t){return this.once("success",e,t)},error:function(e,t){return this.once("error",e,t)},off:function(e,t){var r=this.__handlers__||(this.__handlers__={});if(!t)return void(r[e]=[]);if(r[e]){for(var n=r[e],i=[],a=0;a<n.length;a++)t&&n[a].action!==t&&i.push(n[a]);r[e]=i}return this},has:function(e,t){var r=this.__handlers__;if(!r||!r[e])return!1;for(var n=r[e],i=0;i<n.length;i++)if(n[i].action===t)return!0}},Ye=0,Ze=Array.prototype,Qe=Ze.forEach,Je={genGUID:function(){return++Ye},relative2absolute:function(e,t){if(!t||e.match(/^\//))return e;for(var r=e.split("/"),n=t.split("/"),i=r[0];"."===i||".."===i;)".."===i&&n.pop(),r.shift(),i=r[0];return n.join("/")+"/"+r.join("/")},extend:function(e,t){if(t)for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return e},defaults:function(e,t){if(t)for(var r in t)void 0===e[r]&&(e[r]=t[r]);return e},extendWithPropList:function(e,t,r){if(t)for(var n=0;n<r.length;n++){var i=r[n];e[i]=t[i]}return e},defaultsWithPropList:function(e,t,r){if(t)for(var n=0;n<r.length;n++){var i=r[n];null==e[i]&&(e[i]=t[i])}return e},each:function(e,t,r){if(e&&t)if(e.forEach&&e.forEach===Qe)e.forEach(t,r);else if(e.length===+e.length)for(var n=0,i=e.length;n<i;n++)t.call(r,e[n],n,e);else for(var a in e)e.hasOwnProperty(a)&&t.call(r,e[a],a,e)},isObject:function(e){return e===Object(e)},isArray:function(e){return Array.isArray(e)},isArrayLike:function(e){return!!e&&e.length===+e.length},clone:function(e){if(Je.isObject(e)){if(Je.isArray(e))return e.slice();if(Je.isArrayLike(e)){for(var t=new e.constructor(e.length),r=0;r<e.length;r++)t[r]=e[r];return t}return Je.extend({},e)}return e}},$e=function(){this.__GUID__=Je.genGUID()};$e.__initializers__=[function(e){Je.extend(this,e)}],Je.extend($e,Xe),Je.extend($e.prototype,Ke);var et=["OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","EXT_shader_texture_lod","WEBGL_draw_buffers","EXT_frag_depth","EXT_sRGB"],tt=["MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE"],rt={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,
RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444},nt=!0;try{var it=document.createElement("canvas");if(!(it.getContext("webgl")||it.getContext("experimental-webgl")))throw new Error}catch(e){nt=!1}var at={};at.supportWebGL=function(){return nt},at.Int8Array="undefined"==typeof Int8Array?Array:Int8Array,at.Uint8Array="undefined"==typeof Uint8Array?Array:Uint8Array,at.Uint16Array="undefined"==typeof Uint16Array?Array:Uint16Array,at.Uint32Array="undefined"==typeof Uint32Array?Array:Uint32Array,at.Int16Array="undefined"==typeof Int16Array?Array:Int16Array,at.Float32Array="undefined"==typeof Float32Array?Array:Float32Array,at.Float64Array="undefined"==typeof Float64Array?Array:Float64Array;var ot=("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self,function(e,t){return t={exports:{}},e(t,t.exports),t.exports}(function(e,t){!function(e){var r={};r.exports=t,function(e){if(!t)var t=1e-6;if(!r)var r="undefined"!=typeof Float32Array?Float32Array:Array;if(!n)var n=Math.random;var i={};i.setMatrixArrayType=function(e){r=e},void 0!==e&&(e.glMatrix=i);var a=Math.PI/180;i.toRadian=function(e){return e*a};var o={};o.create=function(){var e=new r(2);return e[0]=0,e[1]=0,e},o.clone=function(e){var t=new r(2);return t[0]=e[0],t[1]=e[1],t},o.fromValues=function(e,t){var n=new r(2);return n[0]=e,n[1]=t,n},o.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e},o.set=function(e,t,r){return e[0]=t,e[1]=r,e},o.add=function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e},o.subtract=function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e},o.sub=o.subtract,o.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e},o.mul=o.multiply,o.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e},o.div=o.divide,o.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e},o.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e},o.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e},o.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e},o.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1];return Math.sqrt(r*r+n*n)},o.dist=o.distance,o.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1];return r*r+n*n},o.sqrDist=o.squaredDistance,o.length=function(e){var t=e[0],r=e[1];return Math.sqrt(t*t+r*r)},o.len=o.length,o.squaredLength=function(e){var t=e[0],r=e[1];return t*t+r*r},o.sqrLen=o.squaredLength,o.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e},o.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e},o.normalize=function(e,t){var r=t[0],n=t[1],i=r*r+n*n;return i>0&&(i=1/Math.sqrt(i),e[0]=t[0]*i,e[1]=t[1]*i),e},o.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]},o.cross=function(e,t,r){var n=t[0]*r[1]-t[1]*r[0];return e[0]=e[1]=0,e[2]=n,e},o.lerp=function(e,t,r,n){var i=t[0],a=t[1];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e},o.random=function(e,t){t=t||1;var r=2*n()*Math.PI;return e[0]=Math.cos(r)*t,e[1]=Math.sin(r)*t,e},o.transformMat2=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[2]*i,e[1]=r[1]*n+r[3]*i,e},o.transformMat2d=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[2]*i+r[4],e[1]=r[1]*n+r[3]*i+r[5],e},o.transformMat3=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[3]*i+r[6],e[1]=r[1]*n+r[4]*i+r[7],e},o.transformMat4=function(e,t,r){var n=t[0],i=t[1];return e[0]=r[0]*n+r[4]*i+r[12],e[1]=r[1]*n+r[5]*i+r[13],e},o.forEach=function(){var e=o.create();return function(t,r,n,i,a,o){var s,u;for(r||(r=2),n||(n=0),u=i?Math.min(i*r+n,t.length):t.length,s=n;s<u;s+=r)e[0]=t[s],e[1]=t[s+1],a(e,e,o),t[s]=e[0],t[s+1]=e[1];return t}}(),o.str=function(e){return"vec2("+e[0]+", "+e[1]+")"},void 0!==e&&(e.vec2=o);var s={};s.create=function(){var e=new r(3);return e[0]=0,e[1]=0,e[2]=0,e},s.clone=function(e){var t=new r(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},s.fromValues=function(e,t,n){var i=new r(3);return i[0]=e,i[1]=t,i[2]=n,i},s.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},s.set=function(e,t,r,n){return e[0]=t,e[1]=r,e[2]=n,e},s.add=function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e},s.subtract=function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e},s.sub=s.subtract,s.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e},s.mul=s.multiply,s.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e},s.div=s.divide,s.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e},s.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e},s.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e},s.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e},s.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2];return Math.sqrt(r*r+n*n+i*i)},s.dist=s.distance,s.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2];return r*r+n*n+i*i},s.sqrDist=s.squaredDistance,s.length=function(e){var t=e[0],r=e[1],n=e[2];return Math.sqrt(t*t+r*r+n*n)},s.len=s.length,s.squaredLength=function(e){var t=e[0],r=e[1],n=e[2];return t*t+r*r+n*n},s.sqrLen=s.squaredLength,s.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e},s.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e},s.normalize=function(e,t){var r=t[0],n=t[1],i=t[2],a=r*r+n*n+i*i;return a>0&&(a=1/Math.sqrt(a),e[0]=t[0]*a,e[1]=t[1]*a,e[2]=t[2]*a),e},s.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]},s.cross=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],u=r[2];return e[0]=i*u-a*s,e[1]=a*o-n*u,e[2]=n*s-i*o,e},s.lerp=function(e,t,r,n){var i=t[0],a=t[1],o=t[2];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e[2]=o+n*(r[2]-o),e},s.random=function(e,t){t=t||1;var r=2*n()*Math.PI,i=2*n()-1,a=Math.sqrt(1-i*i)*t;return e[0]=Math.cos(r)*a,e[1]=Math.sin(r)*a,e[2]=i*t,e},s.transformMat4=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[3]*n+r[7]*i+r[11]*a+r[15];return o=o||1,e[0]=(r[0]*n+r[4]*i+r[8]*a+r[12])/o,e[1]=(r[1]*n+r[5]*i+r[9]*a+r[13])/o,e[2]=(r[2]*n+r[6]*i+r[10]*a+r[14])/o,e},s.transformMat3=function(e,t,r){var n=t[0],i=t[1],a=t[2];return e[0]=n*r[0]+i*r[3]+a*r[6],e[1]=n*r[1]+i*r[4]+a*r[7],e[2]=n*r[2]+i*r[5]+a*r[8],e},s.transformQuat=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],u=r[2],l=r[3],c=l*n+s*a-u*i,h=l*i+u*n-o*a,f=l*a+o*i-s*n,d=-o*n-s*i-u*a;return e[0]=c*l+d*-o+h*-u-f*-s,e[1]=h*l+d*-s+f*-o-c*-u,e[2]=f*l+d*-u+c*-s-h*-o,e},s.rotateX=function(e,t,r,n){var i=[],a=[];return i[0]=t[0]-r[0],i[1]=t[1]-r[1],i[2]=t[2]-r[2],a[0]=i[0],a[1]=i[1]*Math.cos(n)-i[2]*Math.sin(n),a[2]=i[1]*Math.sin(n)+i[2]*Math.cos(n),e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},s.rotateY=function(e,t,r,n){var i=[],a=[];return i[0]=t[0]-r[0],i[1]=t[1]-r[1],i[2]=t[2]-r[2],a[0]=i[2]*Math.sin(n)+i[0]*Math.cos(n),a[1]=i[1],a[2]=i[2]*Math.cos(n)-i[0]*Math.sin(n),e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},s.rotateZ=function(e,t,r,n){var i=[],a=[];return i[0]=t[0]-r[0],i[1]=t[1]-r[1],i[2]=t[2]-r[2],a[0]=i[0]*Math.cos(n)-i[1]*Math.sin(n),a[1]=i[0]*Math.sin(n)+i[1]*Math.cos(n),a[2]=i[2],e[0]=a[0]+r[0],e[1]=a[1]+r[1],e[2]=a[2]+r[2],e},s.forEach=function(){var e=s.create();return function(t,r,n,i,a,o){var s,u;for(r||(r=3),n||(n=0),u=i?Math.min(i*r+n,t.length):t.length,s=n;s<u;s+=r)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2];return t}}(),s.angle=function(e,t){var r=s.fromValues(e[0],e[1],e[2]),n=s.fromValues(t[0],t[1],t[2]);s.normalize(r,r),s.normalize(n,n);var i=s.dot(r,n);return i>1?0:Math.acos(i)},s.str=function(e){return"vec3("+e[0]+", "+e[1]+", "+e[2]+")"},void 0!==e&&(e.vec3=s);var u={};u.create=function(){var e=new r(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e},u.clone=function(e){var t=new r(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},u.fromValues=function(e,t,n,i){var a=new r(4);return a[0]=e,a[1]=t,a[2]=n,a[3]=i,a},u.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},u.set=function(e,t,r,n,i){return e[0]=t,e[1]=r,e[2]=n,e[3]=i,e},u.add=function(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e},u.subtract=function(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e[3]=t[3]-r[3],e},u.sub=u.subtract,u.multiply=function(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e[3]=t[3]*r[3],e},u.mul=u.multiply,u.divide=function(e,t,r){return e[0]=t[0]/r[0],e[1]=t[1]/r[1],e[2]=t[2]/r[2],e[3]=t[3]/r[3],e},u.div=u.divide,u.min=function(e,t,r){return e[0]=Math.min(t[0],r[0]),e[1]=Math.min(t[1],r[1]),e[2]=Math.min(t[2],r[2]),e[3]=Math.min(t[3],r[3]),e},u.max=function(e,t,r){return e[0]=Math.max(t[0],r[0]),e[1]=Math.max(t[1],r[1]),e[2]=Math.max(t[2],r[2]),e[3]=Math.max(t[3],r[3]),e},u.scale=function(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e},u.scaleAndAdd=function(e,t,r,n){return e[0]=t[0]+r[0]*n,e[1]=t[1]+r[1]*n,e[2]=t[2]+r[2]*n,e[3]=t[3]+r[3]*n,e},u.distance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return Math.sqrt(r*r+n*n+i*i+a*a)},u.dist=u.distance,u.squaredDistance=function(e,t){var r=t[0]-e[0],n=t[1]-e[1],i=t[2]-e[2],a=t[3]-e[3];return r*r+n*n+i*i+a*a},u.sqrDist=u.squaredDistance,u.length=function(e){var t=e[0],r=e[1],n=e[2],i=e[3];return Math.sqrt(t*t+r*r+n*n+i*i)},u.len=u.length,u.squaredLength=function(e){var t=e[0],r=e[1],n=e[2],i=e[3];return t*t+r*r+n*n+i*i},u.sqrLen=u.squaredLength,u.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e},u.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e[3]=1/t[3],e},u.normalize=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*r+n*n+i*i+a*a;return o>0&&(o=1/Math.sqrt(o),e[0]=t[0]*o,e[1]=t[1]*o,e[2]=t[2]*o,e[3]=t[3]*o),e},u.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},u.lerp=function(e,t,r,n){var i=t[0],a=t[1],o=t[2],s=t[3];return e[0]=i+n*(r[0]-i),e[1]=a+n*(r[1]-a),e[2]=o+n*(r[2]-o),e[3]=s+n*(r[3]-s),e},u.random=function(e,t){return t=t||1,e[0]=n(),e[1]=n(),e[2]=n(),e[3]=n(),u.normalize(e,e),u.scale(e,e,t),e},u.transformMat4=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3];return e[0]=r[0]*n+r[4]*i+r[8]*a+r[12]*o,e[1]=r[1]*n+r[5]*i+r[9]*a+r[13]*o,e[2]=r[2]*n+r[6]*i+r[10]*a+r[14]*o,e[3]=r[3]*n+r[7]*i+r[11]*a+r[15]*o,e},u.transformQuat=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=r[0],s=r[1],u=r[2],l=r[3],c=l*n+s*a-u*i,h=l*i+u*n-o*a,f=l*a+o*i-s*n,d=-o*n-s*i-u*a;return e[0]=c*l+d*-o+h*-u-f*-s,e[1]=h*l+d*-s+f*-o-c*-u,e[2]=f*l+d*-u+c*-s-h*-o,e},u.forEach=function(){var e=u.create();return function(t,r,n,i,a,o){var s,u;for(r||(r=4),n||(n=0),u=i?Math.min(i*r+n,t.length):t.length,s=n;s<u;s+=r)e[0]=t[s],e[1]=t[s+1],e[2]=t[s+2],e[3]=t[s+3],a(e,e,o),t[s]=e[0],t[s+1]=e[1],t[s+2]=e[2],t[s+3]=e[3];return t}}(),u.str=function(e){return"vec4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},void 0!==e&&(e.vec4=u);var l={};l.create=function(){var e=new r(4);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},l.clone=function(e){var t=new r(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},l.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},l.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e},l.transpose=function(e,t){if(e===t){var r=t[1];e[1]=t[2],e[2]=r}else e[0]=t[0],e[1]=t[2],e[2]=t[1],e[3]=t[3];return e},l.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*a-i*n;return o?(o=1/o,e[0]=a*o,e[1]=-n*o,e[2]=-i*o,e[3]=r*o,e):null},l.adjoint=function(e,t){var r=t[0];return e[0]=t[3],e[1]=-t[1],e[2]=-t[2],e[3]=r,e},l.determinant=function(e){return e[0]*e[3]-e[2]*e[1]},l.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],u=r[1],l=r[2],c=r[3];return e[0]=n*s+a*u,e[1]=i*s+o*u,e[2]=n*l+a*c,e[3]=i*l+o*c,e},l.mul=l.multiply,l.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u+a*s,e[1]=i*u+o*s,e[2]=n*-s+a*u,e[3]=i*-s+o*u,e},l.scale=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],u=r[1];return e[0]=n*s,e[1]=i*s,e[2]=a*u,e[3]=o*u,e},l.str=function(e){return"mat2("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},l.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2))},l.LDU=function(e,t,r,n){return e[2]=n[2]/n[0],r[0]=n[0],r[1]=n[1],r[3]=n[3]-e[2]*r[1],[e,t,r]},void 0!==e&&(e.mat2=l);var c={};c.create=function(){var e=new r(6);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},c.clone=function(e){var t=new r(6);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t},c.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e},c.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e},c.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=r*a-n*i;return u?(u=1/u,e[0]=a*u,e[1]=-n*u,e[2]=-i*u,e[3]=r*u,e[4]=(i*s-a*o)*u,e[5]=(n*o-r*s)*u,e):null},c.determinant=function(e){return e[0]*e[3]-e[1]*e[2]},c.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=r[0],c=r[1],h=r[2],f=r[3],d=r[4],_=r[5];return e[0]=n*l+a*c,e[1]=i*l+o*c,e[2]=n*h+a*f,e[3]=i*h+o*f,e[4]=n*d+a*_+s,e[5]=i*d+o*_+u,e},c.mul=c.multiply,c.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=Math.sin(r),c=Math.cos(r);return e[0]=n*c+a*l,e[1]=i*c+o*l,e[2]=n*-l+a*c,e[3]=i*-l+o*c,e[4]=s,e[5]=u,e},c.scale=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=r[0],c=r[1];return e[0]=n*l,e[1]=i*l,e[2]=a*c,e[3]=o*c,e[4]=s,e[5]=u,e},c.translate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=r[0],c=r[1];return e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=n*l+a*c+s,e[5]=i*l+o*c+u,e},c.str=function(e){return"mat2d("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+")"},c.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+1)},void 0!==e&&(e.mat2d=c);var h={};h.create=function(){var e=new r(9);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},h.fromMat4=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e},h.clone=function(e){var t=new r(9);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},h.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},h.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},h.transpose=function(e,t){if(e===t){var r=t[1],n=t[2],i=t[5];e[1]=t[3],e[2]=t[6],e[3]=r,e[5]=t[7],e[6]=n,e[7]=i}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e},h.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],h=c*o-s*l,f=-c*a+s*u,d=l*a-o*u,_=r*h+n*f+i*d;return _?(_=1/_,e[0]=h*_,e[1]=(-c*n+i*l)*_,e[2]=(s*n-i*o)*_,e[3]=f*_,e[4]=(c*r-i*u)*_,e[5]=(-s*r+i*a)*_,e[6]=d*_,e[7]=(-l*r+n*u)*_,e[8]=(o*r-n*a)*_,e):null},h.adjoint=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8];return e[0]=o*c-s*l,e[1]=i*l-n*c,e[2]=n*s-i*o,e[3]=s*u-a*c,e[4]=r*c-i*u,e[5]=i*a-r*s,e[6]=a*l-o*u,e[7]=n*u-r*l,e[8]=r*o-n*a,e},h.determinant=function(e){var t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],u=e[7],l=e[8];return t*(l*a-o*u)+r*(-l*i+o*s)+n*(u*i-a*s)},h.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],h=t[8],f=r[0],d=r[1],_=r[2],p=r[3],m=r[4],v=r[5],g=r[6],y=r[7],x=r[8];return e[0]=f*n+d*o+_*l,e[1]=f*i+d*s+_*c,e[2]=f*a+d*u+_*h,e[3]=p*n+m*o+v*l,e[4]=p*i+m*s+v*c,e[5]=p*a+m*u+v*h,e[6]=g*n+y*o+x*l,e[7]=g*i+y*s+x*c,e[8]=g*a+y*u+x*h,e},h.mul=h.multiply,h.translate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],h=t[8],f=r[0],d=r[1];return e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=u,e[6]=f*n+d*o+l,e[7]=f*i+d*s+c,e[8]=f*a+d*u+h,e},h.rotate=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],h=t[8],f=Math.sin(r),d=Math.cos(r);return e[0]=d*n+f*o,e[1]=d*i+f*s,e[2]=d*a+f*u,e[3]=d*o-f*n,e[4]=d*s-f*i,e[5]=d*u-f*a,e[6]=l,e[7]=c,e[8]=h,e},h.scale=function(e,t,r){var n=r[0],i=r[1];return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=i*t[3],e[4]=i*t[4],e[5]=i*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},h.fromMat2d=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=0,e[3]=t[2],e[4]=t[3],e[5]=0,e[6]=t[4],e[7]=t[5],e[8]=1,e},h.fromQuat=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r+r,s=n+n,u=i+i,l=r*o,c=n*o,h=n*s,f=i*o,d=i*s,_=i*u,p=a*o,m=a*s,v=a*u;return e[0]=1-h-_,e[3]=c-v,e[6]=f+m,e[1]=c+v,e[4]=1-l-_,e[7]=d-p,e[2]=f-m,e[5]=d+p,e[8]=1-l-h,e},h.normalFromMat4=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],h=t[9],f=t[10],d=t[11],_=t[12],p=t[13],m=t[14],v=t[15],g=r*s-n*o,y=r*u-i*o,x=r*l-a*o,T=n*u-i*s,E=n*l-a*s,b=i*l-a*u,S=c*p-h*_,A=c*m-f*_,N=c*v-d*_,w=h*m-f*p,M=h*v-d*p,R=f*v-d*m,C=g*R-y*M+x*w+T*N-E*A+b*S;return C?(C=1/C,e[0]=(s*R-u*M+l*w)*C,e[1]=(u*N-o*R-l*A)*C,e[2]=(o*M-s*N+l*S)*C,e[3]=(i*M-n*R-a*w)*C,e[4]=(r*R-i*N+a*A)*C,e[5]=(n*N-r*M-a*S)*C,e[6]=(p*b-m*E+v*T)*C,e[7]=(m*x-_*b-v*y)*C,e[8]=(_*E-p*x+v*g)*C,e):null},h.str=function(e){return"mat3("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+")"},h.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2))},void 0!==e&&(e.mat3=h);var f={};f.create=function(){var e=new r(16);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},f.clone=function(e){var t=new r(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},f.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},f.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},f.transpose=function(e,t){if(e===t){var r=t[1],n=t[2],i=t[3],a=t[6],o=t[7],s=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=n,e[9]=a,e[11]=t[14],e[12]=i,e[13]=o,e[14]=s}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e},f.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],h=t[9],f=t[10],d=t[11],_=t[12],p=t[13],m=t[14],v=t[15],g=r*s-n*o,y=r*u-i*o,x=r*l-a*o,T=n*u-i*s,E=n*l-a*s,b=i*l-a*u,S=c*p-h*_,A=c*m-f*_,N=c*v-d*_,w=h*m-f*p,M=h*v-d*p,R=f*v-d*m,C=g*R-y*M+x*w+T*N-E*A+b*S;return C?(C=1/C,e[0]=(s*R-u*M+l*w)*C,e[1]=(i*M-n*R-a*w)*C,e[2]=(p*b-m*E+v*T)*C,e[3]=(f*E-h*b-d*T)*C,e[4]=(u*N-o*R-l*A)*C,e[5]=(r*R-i*N+a*A)*C,e[6]=(m*x-_*b-v*y)*C,e[7]=(c*b-f*x+d*y)*C,e[8]=(o*M-s*N+l*S)*C,e[9]=(n*N-r*M-a*S)*C,e[10]=(_*E-p*x+v*g)*C,e[11]=(h*x-c*E-d*g)*C,e[12]=(s*A-o*w-u*S)*C,e[13]=(r*w-n*A+i*S)*C,e[14]=(p*y-_*T-m*g)*C,e[15]=(c*T-h*y+f*g)*C,e):null},f.adjoint=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=t[4],s=t[5],u=t[6],l=t[7],c=t[8],h=t[9],f=t[10],d=t[11],_=t[12],p=t[13],m=t[14],v=t[15];return e[0]=s*(f*v-d*m)-h*(u*v-l*m)+p*(u*d-l*f),e[1]=-(n*(f*v-d*m)-h*(i*v-a*m)+p*(i*d-a*f)),e[2]=n*(u*v-l*m)-s*(i*v-a*m)+p*(i*l-a*u),e[3]=-(n*(u*d-l*f)-s*(i*d-a*f)+h*(i*l-a*u)),e[4]=-(o*(f*v-d*m)-c*(u*v-l*m)+_*(u*d-l*f)),e[5]=r*(f*v-d*m)-c*(i*v-a*m)+_*(i*d-a*f),e[6]=-(r*(u*v-l*m)-o*(i*v-a*m)+_*(i*l-a*u)),e[7]=r*(u*d-l*f)-o*(i*d-a*f)+c*(i*l-a*u),e[8]=o*(h*v-d*p)-c*(s*v-l*p)+_*(s*d-l*h),e[9]=-(r*(h*v-d*p)-c*(n*v-a*p)+_*(n*d-a*h)),e[10]=r*(s*v-l*p)-o*(n*v-a*p)+_*(n*l-a*s),e[11]=-(r*(s*d-l*h)-o*(n*d-a*h)+c*(n*l-a*s)),e[12]=-(o*(h*m-f*p)-c*(s*m-u*p)+_*(s*f-u*h)),e[13]=r*(h*m-f*p)-c*(n*m-i*p)+_*(n*f-i*h),e[14]=-(r*(s*m-u*p)-o*(n*m-i*p)+_*(n*u-i*s)),e[15]=r*(s*f-u*h)-o*(n*f-i*h)+c*(n*u-i*s),e},f.determinant=function(e){var t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],o=e[5],s=e[6],u=e[7],l=e[8],c=e[9],h=e[10],f=e[11],d=e[12],_=e[13],p=e[14],m=e[15];return(t*o-r*a)*(h*m-f*p)-(t*s-n*a)*(c*m-f*_)+(t*u-i*a)*(c*p-h*_)+(r*s-n*o)*(l*m-f*d)-(r*u-i*o)*(l*p-h*d)+(n*u-i*s)*(l*_-c*d)},f.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],h=t[8],f=t[9],d=t[10],_=t[11],p=t[12],m=t[13],v=t[14],g=t[15],y=r[0],x=r[1],T=r[2],E=r[3];return e[0]=y*n+x*s+T*h+E*p,e[1]=y*i+x*u+T*f+E*m,e[2]=y*a+x*l+T*d+E*v,e[3]=y*o+x*c+T*_+E*g,y=r[4],x=r[5],T=r[6],E=r[7],e[4]=y*n+x*s+T*h+E*p,e[5]=y*i+x*u+T*f+E*m,e[6]=y*a+x*l+T*d+E*v,e[7]=y*o+x*c+T*_+E*g,y=r[8],x=r[9],T=r[10],E=r[11],e[8]=y*n+x*s+T*h+E*p,e[9]=y*i+x*u+T*f+E*m,e[10]=y*a+x*l+T*d+E*v,e[11]=y*o+x*c+T*_+E*g,y=r[12],x=r[13],T=r[14],E=r[15],e[12]=y*n+x*s+T*h+E*p,e[13]=y*i+x*u+T*f+E*m,e[14]=y*a+x*l+T*d+E*v,e[15]=y*o+x*c+T*_+E*g,e},f.multiplyAffine=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[4],s=t[5],u=t[6],l=t[8],c=t[9],h=t[10],f=t[12],d=t[13],_=t[14],p=r[0],m=r[1],v=r[2];return e[0]=p*n+m*o+v*l,e[1]=p*i+m*s+v*c,e[2]=p*a+m*u+v*h,p=r[4],m=r[5],v=r[6],e[4]=p*n+m*o+v*l,e[5]=p*i+m*s+v*c,e[6]=p*a+m*u+v*h,p=r[8],m=r[9],v=r[10],e[8]=p*n+m*o+v*l,e[9]=p*i+m*s+v*c,e[10]=p*a+m*u+v*h,p=r[12],m=r[13],v=r[14],e[12]=p*n+m*o+v*l+f,e[13]=p*i+m*s+v*c+d,e[14]=p*a+m*u+v*h+_,e},f.mul=f.multiply,f.mulAffine=f.multiplyAffine,f.translate=function(e,t,r){var n,i,a,o,s,u,l,c,h,f,d,_,p=r[0],m=r[1],v=r[2];return t===e?(e[12]=t[0]*p+t[4]*m+t[8]*v+t[12],e[13]=t[1]*p+t[5]*m+t[9]*v+t[13],e[14]=t[2]*p+t[6]*m+t[10]*v+t[14],e[15]=t[3]*p+t[7]*m+t[11]*v+t[15]):(n=t[0],i=t[1],a=t[2],o=t[3],s=t[4],u=t[5],l=t[6],c=t[7],h=t[8],f=t[9],d=t[10],_=t[11],e[0]=n,e[1]=i,e[2]=a,e[3]=o,e[4]=s,e[5]=u,e[6]=l,e[7]=c,e[8]=h,e[9]=f,e[10]=d,e[11]=_,e[12]=n*p+s*m+h*v+t[12],e[13]=i*p+u*m+f*v+t[13],e[14]=a*p+l*m+d*v+t[14],e[15]=o*p+c*m+_*v+t[15]),e},f.scale=function(e,t,r){var n=r[0],i=r[1],a=r[2];return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*a,e[9]=t[9]*a,e[10]=t[10]*a,e[11]=t[11]*a,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},f.rotate=function(e,r,n,i){var a,o,s,u,l,c,h,f,d,_,p,m,v,g,y,x,T,E,b,S,A,N,w,M,R=i[0],C=i[1],L=i[2],D=Math.sqrt(R*R+C*C+L*L);return Math.abs(D)<t?null:(D=1/D,R*=D,C*=D,L*=D,a=Math.sin(n),o=Math.cos(n),s=1-o,u=r[0],l=r[1],c=r[2],h=r[3],f=r[4],d=r[5],_=r[6],p=r[7],m=r[8],v=r[9],g=r[10],y=r[11],x=R*R*s+o,T=C*R*s+L*a,E=L*R*s-C*a,b=R*C*s-L*a,S=C*C*s+o,A=L*C*s+R*a,N=R*L*s+C*a,w=C*L*s-R*a,M=L*L*s+o,e[0]=u*x+f*T+m*E,e[1]=l*x+d*T+v*E,e[2]=c*x+_*T+g*E,e[3]=h*x+p*T+y*E,e[4]=u*b+f*S+m*A,e[5]=l*b+d*S+v*A,e[6]=c*b+_*S+g*A,e[7]=h*b+p*S+y*A,e[8]=u*N+f*w+m*M,e[9]=l*N+d*w+v*M,e[10]=c*N+_*w+g*M,e[11]=h*N+p*w+y*M,r!==e&&(e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15]),e)},f.rotateX=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[4],o=t[5],s=t[6],u=t[7],l=t[8],c=t[9],h=t[10],f=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=a*i+l*n,e[5]=o*i+c*n,e[6]=s*i+h*n,e[7]=u*i+f*n,e[8]=l*i-a*n,e[9]=c*i-o*n,e[10]=h*i-s*n,e[11]=f*i-u*n,e},f.rotateY=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[0],o=t[1],s=t[2],u=t[3],l=t[8],c=t[9],h=t[10],f=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i-l*n,e[1]=o*i-c*n,e[2]=s*i-h*n,e[3]=u*i-f*n,e[8]=a*n+l*i,e[9]=o*n+c*i,e[10]=s*n+h*i,e[11]=u*n+f*i,e},f.rotateZ=function(e,t,r){var n=Math.sin(r),i=Math.cos(r),a=t[0],o=t[1],s=t[2],u=t[3],l=t[4],c=t[5],h=t[6],f=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*i+l*n,e[1]=o*i+c*n,e[2]=s*i+h*n,e[3]=u*i+f*n,e[4]=l*i-a*n,e[5]=c*i-o*n,e[6]=h*i-s*n,e[7]=f*i-u*n,e},f.fromRotationTranslation=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=n+n,u=i+i,l=a+a,c=n*s,h=n*u,f=n*l,d=i*u,_=i*l,p=a*l,m=o*s,v=o*u,g=o*l;return e[0]=1-(d+p),e[1]=h+g,e[2]=f-v,e[3]=0,e[4]=h-g,e[5]=1-(c+p),e[6]=_+m,e[7]=0,e[8]=f+v,e[9]=_-m,e[10]=1-(c+d),e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e},f.fromQuat=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r+r,s=n+n,u=i+i,l=r*o,c=n*o,h=n*s,f=i*o,d=i*s,_=i*u,p=a*o,m=a*s,v=a*u;return e[0]=1-h-_,e[1]=c+v,e[2]=f-m,e[3]=0,e[4]=c-v,e[5]=1-l-_,e[6]=d+p,e[7]=0,e[8]=f+m,e[9]=d-p,e[10]=1-l-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},f.frustum=function(e,t,r,n,i,a,o){var s=1/(r-t),u=1/(i-n),l=1/(a-o);return e[0]=2*a*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=2*a*u,e[6]=0,e[7]=0,e[8]=(r+t)*s,e[9]=(i+n)*u,e[10]=(o+a)*l,e[11]=-1,e[12]=0,e[13]=0,e[14]=o*a*2*l,e[15]=0,e},f.perspective=function(e,t,r,n,i){var a=1/Math.tan(t/2),o=1/(n-i);return e[0]=a/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(i+n)*o,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*i*n*o,e[15]=0,e},f.ortho=function(e,t,r,n,i,a,o){var s=1/(t-r),u=1/(n-i),l=1/(a-o);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*u,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*l,e[11]=0,e[12]=(t+r)*s,e[13]=(i+n)*u,e[14]=(o+a)*l,e[15]=1,e},f.lookAt=function(e,r,n,i){var a,o,s,u,l,c,h,d,_,p,m=r[0],v=r[1],g=r[2],y=i[0],x=i[1],T=i[2],E=n[0],b=n[1],S=n[2];return Math.abs(m-E)<t&&Math.abs(v-b)<t&&Math.abs(g-S)<t?f.identity(e):(h=m-E,d=v-b,_=g-S,p=1/Math.sqrt(h*h+d*d+_*_),h*=p,d*=p,_*=p,a=x*_-T*d,o=T*h-y*_,s=y*d-x*h,p=Math.sqrt(a*a+o*o+s*s),p?(p=1/p,a*=p,o*=p,s*=p):(a=0,o=0,s=0),u=d*s-_*o,l=_*a-h*s,c=h*o-d*a,p=Math.sqrt(u*u+l*l+c*c),p?(p=1/p,u*=p,l*=p,c*=p):(u=0,l=0,c=0),e[0]=a,e[1]=u,e[2]=h,e[3]=0,e[4]=o,e[5]=l,e[6]=d,e[7]=0,e[8]=s,e[9]=c,e[10]=_,e[11]=0,e[12]=-(a*m+o*v+s*g),e[13]=-(u*m+l*v+c*g),e[14]=-(h*m+d*v+_*g),e[15]=1,e)},f.str=function(e){return"mat4("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+", "+e[4]+", "+e[5]+", "+e[6]+", "+e[7]+", "+e[8]+", "+e[9]+", "+e[10]+", "+e[11]+", "+e[12]+", "+e[13]+", "+e[14]+", "+e[15]+")"},f.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2)+Math.pow(e[9],2)+Math.pow(e[10],2)+Math.pow(e[11],2)+Math.pow(e[12],2)+Math.pow(e[13],2)+Math.pow(e[14],2)+Math.pow(e[15],2))},void 0!==e&&(e.mat4=f);var d={};d.create=function(){var e=new r(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},d.rotationTo=function(){var e=s.create(),t=s.fromValues(1,0,0),r=s.fromValues(0,1,0);return function(n,i,a){var o=s.dot(i,a);return o<-.999999?(s.cross(e,t,i),s.length(e)<1e-6&&s.cross(e,r,i),s.normalize(e,e),d.setAxisAngle(n,e,Math.PI),n):o>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(s.cross(e,i,a),n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=1+o,d.normalize(n,n))}}(),d.setAxes=function(){var e=h.create();return function(t,r,n,i){return e[0]=n[0],e[3]=n[1],e[6]=n[2],e[1]=i[0],e[4]=i[1],e[7]=i[2],e[2]=-r[0],e[5]=-r[1],e[8]=-r[2],d.normalize(t,d.fromMat3(t,e))}}(),d.clone=u.clone,d.fromValues=u.fromValues,d.copy=u.copy,d.set=u.set,d.identity=function(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},d.setAxisAngle=function(e,t,r){r*=.5;var n=Math.sin(r);return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=Math.cos(r),e},d.add=u.add,d.multiply=function(e,t,r){var n=t[0],i=t[1],a=t[2],o=t[3],s=r[0],u=r[1],l=r[2],c=r[3];return e[0]=n*c+o*s+i*l-a*u,e[1]=i*c+o*u+a*s-n*l,e[2]=a*c+o*l+n*u-i*s,e[3]=o*c-n*s-i*u-a*l,e},d.mul=d.multiply,d.scale=u.scale,d.rotateX=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u+o*s,e[1]=i*u+a*s,e[2]=a*u-i*s,e[3]=o*u-n*s,e},d.rotateY=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u-a*s,e[1]=i*u+o*s,e[2]=a*u+n*s,e[3]=o*u-i*s,e},d.rotateZ=function(e,t,r){r*=.5;var n=t[0],i=t[1],a=t[2],o=t[3],s=Math.sin(r),u=Math.cos(r);return e[0]=n*u+i*s,e[1]=i*u-n*s,e[2]=a*u+o*s,e[3]=o*u-a*s,e},d.calculateW=function(e,t){var r=t[0],n=t[1],i=t[2];return e[0]=r,e[1]=n,e[2]=i,e[3]=Math.sqrt(Math.abs(1-r*r-n*n-i*i)),e},d.dot=u.dot,d.lerp=u.lerp,d.slerp=function(e,t,r,n){var i,a,o,s,u,l=t[0],c=t[1],h=t[2],f=t[3],d=r[0],_=r[1],p=r[2],m=r[3];return a=l*d+c*_+h*p+f*m,a<0&&(a=-a,d=-d,_=-_,p=-p,m=-m),1-a>1e-6?(i=Math.acos(a),o=Math.sin(i),s=Math.sin((1-n)*i)/o,u=Math.sin(n*i)/o):(s=1-n,u=n),e[0]=s*l+u*d,e[1]=s*c+u*_,e[2]=s*h+u*p,e[3]=s*f+u*m,e},d.invert=function(e,t){var r=t[0],n=t[1],i=t[2],a=t[3],o=r*r+n*n+i*i+a*a,s=o?1/o:0;return e[0]=-r*s,e[1]=-n*s,e[2]=-i*s,e[3]=a*s,e},d.conjugate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e},d.length=u.length,d.len=d.length,d.squaredLength=u.squaredLength,d.sqrLen=d.squaredLength,d.normalize=u.normalize,d.fromMat3=function(e,t){var r,n=t[0]+t[4]+t[8];if(n>0)r=Math.sqrt(n+1),e[3]=.5*r,r=.5/r,e[0]=(t[5]-t[7])*r,e[1]=(t[6]-t[2])*r,e[2]=(t[1]-t[3])*r;else{var i=0;t[4]>t[0]&&(i=1),t[8]>t[3*i+i]&&(i=2);var a=(i+1)%3,o=(i+2)%3;r=Math.sqrt(t[3*i+i]-t[3*a+a]-t[3*o+o]+1),e[i]=.5*r,r=.5/r,e[3]=(t[3*a+o]-t[3*o+a])*r,e[a]=(t[3*a+i]+t[3*i+a])*r,e[o]=(t[3*o+i]+t[3*i+o])*r}return e},d.str=function(e){return"quat("+e[0]+", "+e[1]+", "+e[2]+", "+e[3]+")"},void 0!==e&&(e.quat=d)}(r.exports)}()})),st=ot.vec3,ut=function(e,t,r){e=e||0,t=t||0,r=r||0,this._array=st.fromValues(e,t,r),this._dirty=!0};ut.prototype={constructor:ut,add:function(e){return st.add(this._array,this._array,e._array),this._dirty=!0,this},set:function(e,t,r){return this._array[0]=e,this._array[1]=t,this._array[2]=r,this._dirty=!0,this},setArray:function(e){return this._array[0]=e[0],this._array[1]=e[1],this._array[2]=e[2],this._dirty=!0,this},clone:function(){return new ut(this.x,this.y,this.z)},copy:function(e){return st.copy(this._array,e._array),this._dirty=!0,this},cross:function(e,t){return st.cross(this._array,e._array,t._array),this._dirty=!0,this},dist:function(e){return st.dist(this._array,e._array)},distance:function(e){return st.distance(this._array,e._array)},div:function(e){return st.div(this._array,this._array,e._array),this._dirty=!0,this},divide:function(e){return st.divide(this._array,this._array,e._array),this._dirty=!0,this},dot:function(e){return st.dot(this._array,e._array)},len:function(){return st.len(this._array)},length:function(){return st.length(this._array)},lerp:function(e,t,r){return st.lerp(this._array,e._array,t._array,r),this._dirty=!0,this},min:function(e){return st.min(this._array,this._array,e._array),this._dirty=!0,this},max:function(e){return st.max(this._array,this._array,e._array),this._dirty=!0,this},mul:function(e){return st.mul(this._array,this._array,e._array),this._dirty=!0,this},multiply:function(e){return st.multiply(this._array,this._array,e._array),this._dirty=!0,this},negate:function(){return st.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return st.normalize(this._array,this._array),this._dirty=!0,this},random:function(e){return st.random(this._array,e),this._dirty=!0,this},scale:function(e){return st.scale(this._array,this._array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return st.scaleAndAdd(this._array,this._array,e._array,t),this._dirty=!0,this},sqrDist:function(e){return st.sqrDist(this._array,e._array)},squaredDistance:function(e){return st.squaredDistance(this._array,e._array)},sqrLen:function(){return st.sqrLen(this._array)},squaredLength:function(){return st.squaredLength(this._array)},sub:function(e){return st.sub(this._array,this._array,e._array),this._dirty=!0,this},subtract:function(e){return st.subtract(this._array,this._array,e._array),this._dirty=!0,this},transformMat3:function(e){return st.transformMat3(this._array,this._array,e._array),this._dirty=!0,this},transformMat4:function(e){return st.transformMat4(this._array,this._array,e._array),this._dirty=!0,this},transformQuat:function(e){return st.transformQuat(this._array,this._array,e._array),this._dirty=!0,this},applyProjection:function(e){var t=this._array;if(e=e._array,0===e[15]){var r=-1/t[2];t[0]=e[0]*t[0]*r,
t[1]=e[5]*t[1]*r,t[2]=(e[10]*t[2]+e[14])*r}else t[0]=e[0]*t[0]+e[12],t[1]=e[5]*t[1]+e[13],t[2]=e[10]*t[2]+e[14];return this._dirty=!0,this},eulerFromQuat:function(e,t){ut.eulerFromQuat(this,e,t)},eulerFromMat3:function(e,t){ut.eulerFromMat3(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var lt=Object.defineProperty;if(lt){var ct=ut.prototype;lt(ct,"x",{get:function(){return this._array[0]},set:function(e){this._array[0]=e,this._dirty=!0}}),lt(ct,"y",{get:function(){return this._array[1]},set:function(e){this._array[1]=e,this._dirty=!0}}),lt(ct,"z",{get:function(){return this._array[2]},set:function(e){this._array[2]=e,this._dirty=!0}})}ut.add=function(e,t,r){return st.add(e._array,t._array,r._array),e._dirty=!0,e},ut.set=function(e,t,r,n){st.set(e._array,t,r,n),e._dirty=!0},ut.copy=function(e,t){return st.copy(e._array,t._array),e._dirty=!0,e},ut.cross=function(e,t,r){return st.cross(e._array,t._array,r._array),e._dirty=!0,e},ut.dist=function(e,t){return st.distance(e._array,t._array)},ut.distance=ut.dist,ut.div=function(e,t,r){return st.divide(e._array,t._array,r._array),e._dirty=!0,e},ut.divide=ut.div,ut.dot=function(e,t){return st.dot(e._array,t._array)},ut.len=function(e){return st.length(e._array)},ut.lerp=function(e,t,r,n){return st.lerp(e._array,t._array,r._array,n),e._dirty=!0,e},ut.min=function(e,t,r){return st.min(e._array,t._array,r._array),e._dirty=!0,e},ut.max=function(e,t,r){return st.max(e._array,t._array,r._array),e._dirty=!0,e},ut.mul=function(e,t,r){return st.multiply(e._array,t._array,r._array),e._dirty=!0,e},ut.multiply=ut.mul,ut.negate=function(e,t){return st.negate(e._array,t._array),e._dirty=!0,e},ut.normalize=function(e,t){return st.normalize(e._array,t._array),e._dirty=!0,e},ut.random=function(e,t){return st.random(e._array,t),e._dirty=!0,e},ut.scale=function(e,t,r){return st.scale(e._array,t._array,r),e._dirty=!0,e},ut.scaleAndAdd=function(e,t,r,n){return st.scaleAndAdd(e._array,t._array,r._array,n),e._dirty=!0,e},ut.sqrDist=function(e,t){return st.sqrDist(e._array,t._array)},ut.squaredDistance=ut.sqrDist,ut.sqrLen=function(e){return st.sqrLen(e._array)},ut.squaredLength=ut.sqrLen,ut.sub=function(e,t,r){return st.subtract(e._array,t._array,r._array),e._dirty=!0,e},ut.subtract=ut.sub,ut.transformMat3=function(e,t,r){return st.transformMat3(e._array,t._array,r._array),e._dirty=!0,e},ut.transformMat4=function(e,t,r){return st.transformMat4(e._array,t._array,r._array),e._dirty=!0,e},ut.transformQuat=function(e,t,r){return st.transformQuat(e._array,t._array,r._array),e._dirty=!0,e};var ht=Math.atan2,ft=Math.asin,dt=Math.abs;ut.eulerFromQuat=function(e,t,r){e._dirty=!0,t=t._array;var n=e._array,i=t[0],a=t[1],s=t[2],u=t[3],l=i*i,c=a*a,h=s*s,f=u*u,r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":n[0]=ht(2*(i*u-a*s),f-l-c+h),n[1]=ft(o(2*(i*s+a*u),-1,1)),n[2]=ht(2*(s*u-i*a),f+l-c-h);break;case"YXZ":n[0]=ft(o(2*(i*u-a*s),-1,1)),n[1]=ht(2*(i*s+a*u),f-l-c+h),n[2]=ht(2*(i*a+s*u),f-l+c-h);break;case"ZXY":n[0]=ft(o(2*(i*u+a*s),-1,1)),n[1]=ht(2*(a*u-s*i),f-l-c+h),n[2]=ht(2*(s*u-i*a),f-l+c-h);break;case"ZYX":n[0]=ht(2*(i*u+s*a),f-l-c+h),n[1]=ft(o(2*(a*u-i*s),-1,1)),n[2]=ht(2*(i*a+s*u),f+l-c-h);break;case"YZX":n[0]=ht(2*(i*u-s*a),f-l+c-h),n[1]=ht(2*(a*u-i*s),f+l-c-h),n[2]=ft(o(2*(i*a+s*u),-1,1));break;case"XZY":n[0]=ht(2*(i*u+a*s),f-l+c-h),n[1]=ht(2*(i*s+a*u),f+l-c-h),n[2]=ft(o(2*(s*u-i*a),-1,1));break;default:console.warn("Unkown order: "+r)}return e},ut.eulerFromMat3=function(e,t,r){var n=t._array,i=n[0],a=n[3],s=n[6],u=n[1],l=n[4],c=n[7],h=n[2],f=n[5],d=n[8],_=e._array,r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":_[1]=ft(o(s,-1,1)),dt(s)<.99999?(_[0]=ht(-c,d),_[2]=ht(-a,i)):(_[0]=ht(f,l),_[2]=0);break;case"YXZ":_[0]=ft(-o(c,-1,1)),dt(c)<.99999?(_[1]=ht(s,d),_[2]=ht(u,l)):(_[1]=ht(-h,i),_[2]=0);break;case"ZXY":_[0]=ft(o(f,-1,1)),dt(f)<.99999?(_[1]=ht(-h,d),_[2]=ht(-a,l)):(_[1]=0,_[2]=ht(u,i));break;case"ZYX":_[1]=ft(-o(h,-1,1)),dt(h)<.99999?(_[0]=ht(f,d),_[2]=ht(u,i)):(_[0]=0,_[2]=ht(-a,l));break;case"YZX":_[2]=ft(o(u,-1,1)),dt(u)<.99999?(_[0]=ht(-c,l),_[1]=ht(-h,i)):(_[0]=0,_[1]=ht(s,d));break;case"XZY":_[2]=ft(-o(a,-1,1)),dt(a)<.99999?(_[0]=ht(f,l),_[1]=ht(s,i)):(_[0]=ht(-c,d),_[1]=0);break;default:console.warn("Unkown order: "+r)}return e._dirty=!0,e},ut.POSITIVE_X=new ut(1,0,0),ut.NEGATIVE_X=new ut(-1,0,0),ut.POSITIVE_Y=new ut(0,1,0),ut.NEGATIVE_Y=new ut(0,-1,0),ut.POSITIVE_Z=new ut(0,0,1),ut.NEGATIVE_Z=new ut(0,0,-1),ut.UP=new ut(0,1,0),ut.ZERO=new ut(0,0,0);var _t=ot.vec3,pt=_t.copy,mt=_t.set,vt=function(e,t){this.min=e||new ut(1/0,1/0,1/0),this.max=t||new ut(-1/0,-1/0,-1/0)};vt.prototype={constructor:vt,updateFromVertices:function(e){if(e.length>0){var t=this.min,r=this.max,n=t._array,i=r._array;pt(n,e[0]),pt(i,e[0]);for(var a=1;a<e.length;a++){var o=e[a];o[0]<n[0]&&(n[0]=o[0]),o[1]<n[1]&&(n[1]=o[1]),o[2]<n[2]&&(n[2]=o[2]),o[0]>i[0]&&(i[0]=o[0]),o[1]>i[1]&&(i[1]=o[1]),o[2]>i[2]&&(i[2]=o[2])}t._dirty=!0,r._dirty=!0}},union:function(e){var t=this.min,r=this.max;return _t.min(t._array,t._array,e.min._array),_t.max(r._array,r._array,e.max._array),t._dirty=!0,r._dirty=!0,this},intersection:function(e){var t=this.min,r=this.max;return _t.max(t._array,t._array,e.min._array),_t.min(r._array,r._array,e.max._array),t._dirty=!0,r._dirty=!0,this},intersectBoundingBox:function(e){var t=this.min._array,r=this.max._array,n=e.min._array,i=e.max._array;return!(t[0]>i[0]||t[1]>i[1]||t[2]>i[2]||r[0]<n[0]||r[1]<n[1]||r[2]<n[2])},containBoundingBox:function(e){var t=this.min._array,r=this.max._array,n=e.min._array,i=e.max._array;return t[0]<=n[0]&&t[1]<=n[1]&&t[2]<=n[2]&&r[0]>=i[0]&&r[1]>=i[1]&&r[2]>=i[2]},containPoint:function(e){var t=this.min._array,r=this.max._array,n=e._array;return t[0]<=n[0]&&t[1]<=n[1]&&t[2]<=n[2]&&r[0]>=n[0]&&r[1]>=n[1]&&r[2]>=n[2]},isFinite:function(){var e=this.min._array,t=this.max._array;return isFinite(e[0])&&isFinite(e[1])&&isFinite(e[2])&&isFinite(t[0])&&isFinite(t[1])&&isFinite(t[2])},applyTransform:function(){var e=_t.create(),t=_t.create(),r=_t.create(),n=_t.create(),i=_t.create(),a=_t.create();return function(o){var s=this.min._array,u=this.max._array,l=o._array;return e[0]=l[0]*s[0],e[1]=l[1]*s[0],e[2]=l[2]*s[0],t[0]=l[0]*u[0],t[1]=l[1]*u[0],t[2]=l[2]*u[0],r[0]=l[4]*s[1],r[1]=l[5]*s[1],r[2]=l[6]*s[1],n[0]=l[4]*u[1],n[1]=l[5]*u[1],n[2]=l[6]*u[1],i[0]=l[8]*s[2],i[1]=l[9]*s[2],i[2]=l[10]*s[2],a[0]=l[8]*u[2],a[1]=l[9]*u[2],a[2]=l[10]*u[2],s[0]=Math.min(e[0],t[0])+Math.min(r[0],n[0])+Math.min(i[0],a[0])+l[12],s[1]=Math.min(e[1],t[1])+Math.min(r[1],n[1])+Math.min(i[1],a[1])+l[13],s[2]=Math.min(e[2],t[2])+Math.min(r[2],n[2])+Math.min(i[2],a[2])+l[14],u[0]=Math.max(e[0],t[0])+Math.max(r[0],n[0])+Math.max(i[0],a[0])+l[12],u[1]=Math.max(e[1],t[1])+Math.max(r[1],n[1])+Math.max(i[1],a[1])+l[13],u[2]=Math.max(e[2],t[2])+Math.max(r[2],n[2])+Math.max(i[2],a[2])+l[14],this.min._dirty=!0,this.max._dirty=!0,this}}(),applyProjection:function(e){var t=this.min._array,r=this.max._array,n=e._array,i=t[0],a=t[1],o=t[2],s=r[0],u=r[1],l=t[2],c=r[0],h=r[1],f=r[2];if(1===n[15])t[0]=n[0]*i+n[12],t[1]=n[5]*a+n[13],r[2]=n[10]*o+n[14],r[0]=n[0]*c+n[12],r[1]=n[5]*h+n[13],t[2]=n[10]*f+n[14];else{var d=-1/o;t[0]=n[0]*i*d,t[1]=n[5]*a*d,r[2]=(n[10]*o+n[14])*d,d=-1/l,r[0]=n[0]*s*d,r[1]=n[5]*u*d,d=-1/f,t[2]=(n[10]*f+n[14])*d}return this.min._dirty=!0,this.max._dirty=!0,this},updateVertices:function(){var e=this.vertices;if(!e){for(var e=[],t=0;t<8;t++)e[t]=_t.fromValues(0,0,0);this.vertices=e}var r=this.min._array,n=this.max._array;return mt(e[0],r[0],r[1],r[2]),mt(e[1],r[0],n[1],r[2]),mt(e[2],n[0],r[1],r[2]),mt(e[3],n[0],n[1],r[2]),mt(e[4],r[0],r[1],n[2]),mt(e[5],r[0],n[1],n[2]),mt(e[6],n[0],r[1],n[2]),mt(e[7],n[0],n[1],n[2]),this},copy:function(e){var t=this.min,r=this.max;return pt(t._array,e.min._array),pt(r._array,e.max._array),t._dirty=!0,r._dirty=!0,this},clone:function(){var e=new vt;return e.copy(this),e}};var gt=ot.mat4,yt=ot.vec3,xt=ot.mat3,Tt=ot.quat,Et=function(){this._axisX=new ut,this._axisY=new ut,this._axisZ=new ut,this._array=gt.create(),this._dirty=!0};Et.prototype={constructor:Et,setArray:function(e){for(var t=0;t<this._array.length;t++)this._array[t]=e[t];return this._dirty=!0,this},adjoint:function(){return gt.adjoint(this._array,this._array),this._dirty=!0,this},clone:function(){return(new Et).copy(this)},copy:function(e){return gt.copy(this._array,e._array),this._dirty=!0,this},determinant:function(){return gt.determinant(this._array)},fromQuat:function(e){return gt.fromQuat(this._array,e._array),this._dirty=!0,this},fromRotationTranslation:function(e,t){return gt.fromRotationTranslation(this._array,e._array,t._array),this._dirty=!0,this},fromMat2d:function(e){return Et.fromMat2d(this,e),this},frustum:function(e,t,r,n,i,a){return gt.frustum(this._array,e,t,r,n,i,a),this._dirty=!0,this},identity:function(){return gt.identity(this._array),this._dirty=!0,this},invert:function(){return gt.invert(this._array,this._array),this._dirty=!0,this},lookAt:function(e,t,r){return gt.lookAt(this._array,e._array,t._array,r._array),this._dirty=!0,this},mul:function(e){return gt.mul(this._array,this._array,e._array),this._dirty=!0,this},mulLeft:function(e){return gt.mul(this._array,e._array,this._array),this._dirty=!0,this},multiply:function(e){return gt.multiply(this._array,this._array,e._array),this._dirty=!0,this},multiplyLeft:function(e){return gt.multiply(this._array,e._array,this._array),this._dirty=!0,this},ortho:function(e,t,r,n,i,a){return gt.ortho(this._array,e,t,r,n,i,a),this._dirty=!0,this},perspective:function(e,t,r,n){return gt.perspective(this._array,e,t,r,n),this._dirty=!0,this},rotate:function(e,t){return gt.rotate(this._array,this._array,e,t._array),this._dirty=!0,this},rotateX:function(e){return gt.rotateX(this._array,this._array,e),this._dirty=!0,this},rotateY:function(e){return gt.rotateY(this._array,this._array,e),this._dirty=!0,this},rotateZ:function(e){return gt.rotateZ(this._array,this._array,e),this._dirty=!0,this},scale:function(e){return gt.scale(this._array,this._array,e._array),this._dirty=!0,this},translate:function(e){return gt.translate(this._array,this._array,e._array),this._dirty=!0,this},transpose:function(){return gt.transpose(this._array,this._array),this._dirty=!0,this},decomposeMatrix:function(){var e=yt.create(),t=yt.create(),r=yt.create(),n=xt.create();return function(i,a,o){var s=this._array;yt.set(e,s[0],s[1],s[2]),yt.set(t,s[4],s[5],s[6]),yt.set(r,s[8],s[9],s[10]);var u=yt.length(e),l=yt.length(t),c=yt.length(r);this.determinant()<0&&(u=-u),i&&i.set(u,l,c),o.set(s[12],s[13],s[14]),xt.fromMat4(n,s),n[0]/=u,n[1]/=u,n[2]/=u,n[3]/=l,n[4]/=l,n[5]/=l,n[6]/=c,n[7]/=c,n[8]/=c,Tt.fromMat3(a._array,n),Tt.normalize(a._array,a._array),a._dirty=!0,o._dirty=!0}}(),toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var bt=Object.defineProperty;if(bt){var St=Et.prototype;bt(St,"z",{get:function(){var e=this._array;return this._axisZ.set(e[8],e[9],e[10]),this._axisZ},set:function(e){var t=this._array;e=e._array,t[8]=e[0],t[9]=e[1],t[10]=e[2],this._dirty=!0}}),bt(St,"y",{get:function(){var e=this._array;return this._axisY.set(e[4],e[5],e[6]),this._axisY},set:function(e){var t=this._array;e=e._array,t[4]=e[0],t[5]=e[1],t[6]=e[2],this._dirty=!0}}),bt(St,"x",{get:function(){var e=this._array;return this._axisX.set(e[0],e[1],e[2]),this._axisX},set:function(e){var t=this._array;e=e._array,t[0]=e[0],t[1]=e[1],t[2]=e[2],this._dirty=!0}})}Et.adjoint=function(e,t){return gt.adjoint(e._array,t._array),e._dirty=!0,e},Et.copy=function(e,t){return gt.copy(e._array,t._array),e._dirty=!0,e},Et.determinant=function(e){return gt.determinant(e._array)},Et.identity=function(e){return gt.identity(e._array),e._dirty=!0,e},Et.ortho=function(e,t,r,n,i,a,o){return gt.ortho(e._array,t,r,n,i,a,o),e._dirty=!0,e},Et.perspective=function(e,t,r,n,i){return gt.perspective(e._array,t,r,n,i),e._dirty=!0,e},Et.lookAt=function(e,t,r,n){return gt.lookAt(e._array,t._array,r._array,n._array),e._dirty=!0,e},Et.invert=function(e,t){return gt.invert(e._array,t._array),e._dirty=!0,e},Et.mul=function(e,t,r){return gt.mul(e._array,t._array,r._array),e._dirty=!0,e},Et.multiply=Et.mul,Et.fromQuat=function(e,t){return gt.fromQuat(e._array,t._array),e._dirty=!0,e},Et.fromRotationTranslation=function(e,t,r){return gt.fromRotationTranslation(e._array,t._array,r._array),e._dirty=!0,e},Et.fromMat2d=function(e,t){e._dirty=!0;var t=t._array,e=e._array;return e[0]=t[0],e[4]=t[2],e[12]=t[4],e[1]=t[1],e[5]=t[3],e[13]=t[5],e},Et.rotate=function(e,t,r,n){return gt.rotate(e._array,t._array,r,n._array),e._dirty=!0,e},Et.rotateX=function(e,t,r){return gt.rotateX(e._array,t._array,r),e._dirty=!0,e},Et.rotateY=function(e,t,r){return gt.rotateY(e._array,t._array,r),e._dirty=!0,e},Et.rotateZ=function(e,t,r){return gt.rotateZ(e._array,t._array,r),e._dirty=!0,e},Et.scale=function(e,t,r){return gt.scale(e._array,t._array,r._array),e._dirty=!0,e},Et.transpose=function(e,t){return gt.transpose(e._array,t._array),e._dirty=!0,e},Et.translate=function(e,t,r){return gt.translate(e._array,t._array,r._array),e._dirty=!0,e};var At=function(){this._contextId=0,this._caches=[],this._context={}};At.prototype={use:function(e,t){var r=this._caches;r[e]||(r[e]={},t&&(r[e]=t())),this._contextId=e,this._context=r[e]},put:function(e,t){this._context[e]=t},get:function(e){return this._context[e]},dirty:function(e){e=e||"";var t="__dt__"+e;this.put(t,!0)},dirtyAll:function(e){e=e||"";for(var t="__dt__"+e,r=this._caches,n=0;n<r.length;n++)r[n]&&(r[n][t]=!0)},fresh:function(e){e=e||"";var t="__dt__"+e;this.put(t,!1)},freshAll:function(e){e=e||"";for(var t="__dt__"+e,r=this._caches,n=0;n<r.length;n++)r[n]&&(r[n][t]=!1)},isDirty:function(e){e=e||"";var t="__dt__"+e,r=this._context;return!r.hasOwnProperty(t)||!0===r[t]},deleteContext:function(e){delete this._caches[e],this._context={}},delete:function(e){delete this._context[e]},clearAll:function(){this._caches={}},getContext:function(){return this._context},eachContext:function(e,t){Object.keys(this._caches).forEach(function(r){e&&e.call(t,r)})},miss:function(e){return!this._context.hasOwnProperty(e)}},At.prototype.constructor=At;var Nt=ot.mat2,wt=ot.mat3,Mt=ot.mat4,Rt=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+([\w\,]+)?(\[.*?\])?\s*(:\s*([\S\s]+?))?;/g,Ct=/attribute\s+(float|int|vec2|vec3|vec4)\s+(\w*)\s*(:\s*(\w+))?;/g,Lt=/#define\s+(\w+)?(\s+[\w-.]+)?\s*;?\s*\n/g,Dt=/for\s*?\(int\s*?_idx_\s*\=\s*([\w-]+)\;\s*_idx_\s*<\s*([\w-]+);\s*_idx_\s*\+\+\s*\)\s*\{\{([\s\S]+?)(?=\}\})\}\}/g,Pt={bool:"1i",int:"1i",sampler2D:"t",samplerCube:"t",float:"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"},It={bool:function(){return!0},int:function(){return 0},float:function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return[0,0]},vec3:function(){return[0,0,0]},vec4:function(){return[0,0,0,0]},ivec2:function(){return[0,0]},ivec3:function(){return[0,0,0]},ivec4:function(){return[0,0,0,0]},mat2:function(){return Nt.create()},mat3:function(){return wt.create()},mat4:function(){return Mt.create()},array:function(){return[]}},Ot=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","JOINT","WEIGHT"],Ft=["SKIN_MATRIX","VIEWPORT_SIZE","VIEWPORT","DEVICEPIXELRATIO","WINDOW_SIZE","NEAR","FAR","TIME"],kt=["WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],Bt={},Ut=$e.extend(function(){return{vertex:"",fragment:"",precision:"highp",attribSemantics:{},matrixSemantics:{},uniformSemantics:{},matrixSemanticKeys:[],uniformTemplates:{},attributeTemplates:{},vertexDefines:{},fragmentDefines:{},extensions:["OES_standard_derivatives","EXT_shader_texture_lod"],lightGroup:0,lightNumber:{},_textureSlot:0,_attacheMaterialNumber:0,_uniformList:[],_textureStatus:{},_vertexProcessed:"",_fragmentProcessed:"",_currentLocationsMap:{}}},function(){this._cache=new At,this._codeDirty=!0,this._updateShaderString()},{isEqual:function(e){return!!e&&(this===e?!this._codeDirty:(e._codeDirty&&e._updateShaderString(),this._codeDirty&&this._updateShaderString(),!(e._vertexProcessed!==this._vertexProcessed||e._fragmentProcessed!==this._fragmentProcessed)))},setVertex:function(e){this.vertex=e,this._updateShaderString(),this.dirty()},setFragment:function(e){this.fragment=e,this._updateShaderString(),this.dirty()},bind:function(e){var t=this._cache,r=e.gl;if(t.use(e.__GUID__,s),this._currentLocationsMap=t.get("locations"),this._textureSlot=0,this._codeDirty&&this._updateShaderString(),t.isDirty("program")){var n=this._buildProgram(r,this._vertexProcessed,this._fragmentProcessed);if(t.fresh("program"),n)return n}r.useProgram(t.get("program"))},dirty:function(){var e=this._cache;this._codeDirty=!0,e.dirtyAll("program");for(var t=0;t<e._caches.length;t++)if(e._caches[t]){var r=e._caches[t];r.locations={},r.attriblocations={}}},_updateShaderString:function(e){this.vertex===this._vertexPrev&&this.fragment===this._fragmentPrev||(this._parseImport(),this.attribSemantics={},this.matrixSemantics={},this._textureStatus={},this._parseUniforms(),this._parseAttributes(),this._parseDefines(),this._vertexPrev=this.vertex,this._fragmentPrev=this.fragment),this._addDefineExtensionAndPrecision(e),this._vertexProcessed=this._unrollLoop(this._vertexProcessed,this.vertexDefines),this._fragmentProcessed=this._unrollLoop(this._fragmentProcessed,this.fragmentDefines),this._codeDirty=!1},define:function(e,t,r){var n=this.vertexDefines,i=this.fragmentDefines;"vertex"!==e&&"fragment"!==e&&"both"!==e&&arguments.length<3&&(r=t,t=e,e="both"),r=null!=r?r:null,"vertex"!==e&&"both"!==e||n[t]!==r&&(n[t]=r,this.dirty()),"fragment"!==e&&"both"!==e||i[t]!==r&&(i[t]=r,"both"!==e&&this.dirty())},undefine:function(e,t){"vertex"!==e&&"fragment"!==e&&"both"!==e&&arguments.length<2&&(t=e,e="both"),"vertex"!==e&&"both"!==e||this.isDefined("vertex",t)&&(delete this.vertexDefines[t],this.dirty()),"fragment"!==e&&"both"!==e||this.isDefined("fragment",t)&&(delete this.fragmentDefines[t],"both"!==e&&this.dirty())},isDefined:function(e,t){switch(e){case"vertex":return void 0!==this.vertexDefines[t];case"fragment":return void 0!==this.fragmentDefines[t]}},getDefine:function(e,t){switch(e){case"vertex":return this.vertexDefines[t];case"fragment":return this.fragmentDefines[t]}},enableTexture:function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++)this.enableTexture(e[t]);else{var r=this._textureStatus[e];if(r){r.enabled||(r.enabled=!0,this.dirty())}}},enableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!0;this.dirty()},disableTexture:function(e){if(Array.isArray(e))for(var t=0;t<e.length;t++)this.disableTexture(e[t]);else{var r=this._textureStatus[e];if(r){!r.enabled||(r.enabled=!1,this.dirty())}}},disableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!1;this.dirty()},isTextureEnabled:function(e){var t=this._textureStatus;return!!t[e]&&t[e].enabled},getEnabledTextures:function(){var e=[],t=this._textureStatus;for(var r in t)t[r].enabled&&e.push(r);return e},hasUniform:function(e){var t=this._currentLocationsMap[e];return null!==t&&void 0!==t},currentTextureSlot:function(){return this._textureSlot},resetTextureSlot:function(e){this._textureSlot=e||0},takeCurrentTextureSlot:function(e,t){var r=this._textureSlot;return this.useTextureSlot(e,t,r),this._textureSlot++,r},useTextureSlot:function(e,t,r){t&&(e.gl.activeTexture(e.gl.TEXTURE0+r),t.isRenderable()?t.bind(e):t.unbind(e))},setUniform:function(e,t,r,n){var i=this._currentLocationsMap,a=i[r];if(null===a||void 0===a)return!1;switch(t){case"m4":e.uniformMatrix4fv(a,!1,n);break;case"2i":e.uniform2i(a,n[0],n[1]);break;case"2f":e.uniform2f(a,n[0],n[1]);break;case"3i":e.uniform3i(a,n[0],n[1],n[2]);break;case"3f":e.uniform3f(a,n[0],n[1],n[2]);break;case"4i":e.uniform4i(a,n[0],n[1],n[2],n[3]);break;case"4f":e.uniform4f(a,n[0],n[1],n[2],n[3]);break;case"1i":e.uniform1i(a,n);break;case"1f":e.uniform1f(a,n);break;case"1fv":e.uniform1fv(a,n);break;case"1iv":e.uniform1iv(a,n);break;case"2iv":e.uniform2iv(a,n);break;case"2fv":e.uniform2fv(a,n);break;case"3iv":e.uniform3iv(a,n);break;case"3fv":e.uniform3fv(a,n);break;case"4iv":e.uniform4iv(a,n);break;case"4fv":e.uniform4fv(a,n);break;case"m2":case"m2v":e.uniformMatrix2fv(a,!1,n);break;case"m3":case"m3v":e.uniformMatrix3fv(a,!1,n);break;case"m4v":if(Array.isArray(n)){for(var o=new at.Float32Array(16*n.length),s=0,u=0;u<n.length;u++)for(var l=n[u],c=0;c<16;c++)o[s++]=l[c];e.uniformMatrix4fv(a,!1,o)}else n instanceof at.Float32Array&&e.uniformMatrix4fv(a,!1,n)}return!0},setUniformOfSemantic:function(e,t,r){var n=this.uniformSemantics[t];return!!n&&this.setUniform(e,n.type,n.symbol,r)},enableAttributes:function(e,t,r){var n,i=e.gl,a=this._cache.get("program"),o=this._cache.get("attriblocations");(n=r?r.__enabledAttributeList:Bt[e.__GUID__])||(n=r?r.__enabledAttributeList=[]:Bt[e.__GUID__]=[]);for(var s=[],u=0;u<t.length;u++){var l=t[u];if(this.attributeTemplates[l]){var c=o[l];if(void 0===c){if(-1===(c=i.getAttribLocation(a,l))){s[u]=-1;continue}o[l]=c}s[u]=c,n[c]?n[c]=2:n[c]=1}else s[u]=-1}for(var u=0;u<n.length;u++)switch(n[u]){case 1:i.enableVertexAttribArray(u),n[u]=3;break;case 2:n[u]=3;break;case 3:i.disableVertexAttribArray(u),n[u]=0}return s},_parseImport:function(){this._vertexProcessedWithoutDefine=Ut.parseImport(this.vertex),this._fragmentProcessedWithoutDefine=Ut.parseImport(this.fragment)},_addDefineExtensionAndPrecision:function(e){e=e||this.extensions;for(var t=[],r=0;r<e.length;r++)t.push("#extension GL_"+e[r]+" : enable");var n=this._getDefineStr(this.vertexDefines);this._vertexProcessed=n+"\n"+this._vertexProcessedWithoutDefine,n=this._getDefineStr(this.fragmentDefines);var i=n+"\n"+this._fragmentProcessedWithoutDefine;this._fragmentProcessed=t.join("\n")+"\n"+["precision",this.precision,"float"].join(" ")+";\n"+["precision",this.precision,"int"].join(" ")+";\n"+["precision",this.precision,"sampler2D"].join(" ")+";\n"+i},_getDefineStr:function(e){var t=this.lightNumber,r=this._textureStatus,n=[];for(var i in t){var a=t[i];a>0&&n.push("#define "+i.toUpperCase()+"_COUNT "+a)}for(var o in r){r[o].enabled&&n.push("#define "+o.toUpperCase()+"_ENABLED")}for(var o in e){var s=e[o];null===s?n.push("#define "+o):n.push("#define "+o+" "+s.toString())}return n.join("\n")},_unrollLoop:function(e,t){function r(e,r,i,a){var o="";isNaN(r)&&(r=r in t?t[r]:n[r]),isNaN(i)&&(i=i in t?t[i]:n[i]);for(var s=parseInt(r);s<parseInt(i);s++)o+="{"+a.replace(/float\s*\(\s*_idx_\s*\)/g,s.toFixed(1)).replace(/_idx_/g,s)+"}";return o}var n={};for(var i in this.lightNumber)n[i+"_COUNT"]=this.lightNumber[i];return e.replace(Dt,r)},_parseUniforms:function(){function e(e,i,a,o,s,u){if(i&&a){var l,c=Pt[i],h=!0;if(c){if(r._uniformList.push(a),"sampler2D"!==i&&"samplerCube"!==i||(r._textureStatus[a]={enabled:!1,shaderType:n}),o&&(c+="v"),u)if(Ot.indexOf(u)>=0)r.attribSemantics[u]={symbol:a,type:c},h=!1;else if(kt.indexOf(u)>=0){var f=!1,d=u;u.match(/TRANSPOSE$/)&&(f=!0,d=u.slice(0,-9)),r.matrixSemantics[u]={symbol:a,type:c,isTranspose:f,semanticNoTranspose:d},h=!1}else if(Ft.indexOf(u)>=0)r.uniformSemantics[u]={symbol:a,type:c},h=!1;else if("unconfigurable"===u)h=!1;else{if(!(l=r._parseDefaultValue(i,u)))throw new Error('Unkown semantic "'+u+'"');u=""}h&&(t[a]={type:c,value:o?It.array:l||It[i],semantic:u||null})}return["uniform",i,a,o].join(" ")+";\n"}}var t={},r=this,n="vertex";this._uniformList=[],this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(Rt,e),n="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(Rt,e),r.matrixSemanticKeys=Object.keys(this.matrixSemantics),this.uniformTemplates=t},_parseDefaultValue:function(e,t){var r=/\[\s*(.*)\s*\]/;{if("vec2"!==e&&"vec3"!==e&&"vec4"!==e)return"bool"===e?function(){return"true"===t.toLowerCase()}:"float"===e?function(){return parseFloat(t)}:"int"===e?function(){return parseInt(t)}:void 0;var n=r.exec(t)[1];if(n){var i=n.split(/\s*,\s*/);return function(){return new at.Float32Array(i)}}}},createUniforms:function(){var e={};for(var t in this.uniformTemplates){var r=this.uniformTemplates[t];e[t]={type:r.type,value:r.value()}}return e},attached:function(){this._attacheMaterialNumber++},detached:function(){this._attacheMaterialNumber--},isAttachedToAny:function(){return 0!==this._attacheMaterialNumber},_parseAttributes:function(){function e(e,n,i,a,o){if(n&&i){var s=1;switch(n){case"vec4":s=4;break;case"vec3":s=3;break;case"vec2":s=2;break;case"float":s=1}if(t[i]={type:"float",size:s,semantic:o||null},o){if(Ot.indexOf(o)<0)throw new Error('Unkown semantic "'+o+'"');r.attribSemantics[o]={symbol:i,type:n}}}return["attribute",n,i].join(" ")+";\n"}var t={},r=this;this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(Ct,e),this.attributeTemplates=t},_parseDefines:function(){function e(e,n,i){var a="vertex"===r?t.vertexDefines:t.fragmentDefines;return a[n]||(a[n]="false"!=i&&("true"==i||(i?isNaN(parseFloat(i))?i:parseFloat(i):null))),""}var t=this,r="vertex";this._vertexProcessedWithoutDefine=this._vertexProcessedWithoutDefine.replace(Lt,e),r="fragment",this._fragmentProcessedWithoutDefine=this._fragmentProcessedWithoutDefine.replace(Lt,e)},_buildProgram:function(e,t,r){var n=this._cache;n.get("program")&&e.deleteProgram(n.get("program"));var i=e.createProgram(),a=e.createShader(e.VERTEX_SHADER);e.shaderSource(a,t),e.compileShader(a);var o=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(o,r),e.compileShader(o);var s=u(e,a,t);if(s)return s;if(s=u(e,o,r))return s;if(e.attachShader(i,a),e.attachShader(i,o),this.attribSemantics.POSITION)e.bindAttribLocation(i,0,this.attribSemantics.POSITION.symbol);else{var l=Object.keys(this.attributeTemplates);e.bindAttribLocation(i,0,l[0])}if(e.linkProgram(i),!e.getProgramParameter(i,e.LINK_STATUS))return"Could not link program\nVALIDATE_STATUS: "+e.getProgramParameter(i,e.VALIDATE_STATUS)+", gl error ["+e.getError()+"]";for(var c=0;c<this._uniformList.length;c++){var h=this._uniformList[c];n.get("locations")[h]=e.getUniformLocation(i,h)}e.deleteShader(a),e.deleteShader(o),n.put("program",i)},clone:function(){var e=new Ut({vertex:this.vertex,fragment:this.fragment,vertexDefines:Je.clone(this.vertexDefines),fragmentDefines:Je.clone(this.fragmentDefines)});for(var t in this._textureStatus)e._textureStatus[t]=Je.clone(this._textureStatus[t]);return e},dispose:function(e){var t=this._cache;t.use(e.__GUID__);var r=t.get("program");r&&e.gl.deleteProgram(r),t.deleteContext(e.__GUID__),this._locations={}}}),Ht=/(@import)\s*([0-9a-zA-Z_\-\.]*)/g;Ut.parseImport=function(e){return e=e.replace(Ht,function(e,t,r){var e=Ut.source(r);return e?Ut.parseImport(e):(console.error('Shader chunk "'+r+'" not existed in library'),"")})};var zt=/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g;Ut.import=function(e){e.replace(zt,function(e,t,r,n){var n=n.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+\x24)/g,"");if(n){for(var i,a=r.split("."),o=Ut.codes,s=0;s<a.length-1;)i=a[s++],o[i]||(o[i]={}),o=o[i];i=a[s],o[i]=n}return n})},Ut.codes={},Ut.source=function(e){for(var t=e.split("."),r=Ut.codes,n=0;r&&n<t.length;){r=r[t[n++]]}return"string"!=typeof r?(console.error('Shader "'+e+'" not existed in library'),""):r};var Gt={};c.prototype.get=function(e,t){var r,n=[],i={},a={};"string"==typeof t?n=Array.prototype.slice.call(arguments,1):"[object Object]"==Object.prototype.toString.call(t)?(n=t.textures||[],i=t.vertexDefines||{},a=t.fragmentDefines||{},r=t.precision):Array.isArray(t)&&(n=t);var o=Object.keys(i),s=Object.keys(a);n.sort(),o.sort(),s.sort();var u=[e];u=u.concat(n);for(var l=0;l<o.length;l++)u.push(o[l],i[o[l]]);for(var l=0;l<s.length;l++)u.push(s[l],a[s[l]]);r&&u.push(r);var c=u.join("_");if(this._pool[c])return this._pool[c];var h=Gt[e];if(!h)return void console.error('Shader "'+e+'" is not in the library');var f=new Ut({vertex:h.vertex,fragment:h.fragment});r&&(f.precision=r);for(var l=0;l<n.length;l++)f.enableTexture(n[l]);for(var e in i)f.define("vertex",e,i[e]);for(var e in a)f.define("fragment",e,a[e]);return this._pool[c]=f,f},c.prototype.clear=function(){this._pool={}};var qt=new c,Wt={createLibrary:function(){return new c},get:function(){return qt.get.apply(qt,arguments)},template:h,clear:function(){return qt.clear()}},Vt=$e.extend({width:512,height:512,type:rt.UNSIGNED_BYTE,format:rt.RGBA,wrapS:rt.REPEAT,wrapT:rt.REPEAT,minFilter:rt.LINEAR_MIPMAP_LINEAR,magFilter:rt.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1,dynamic:!1,NPOT:!1},function(){this._cache=new At},{getWebGLTexture:function(e){var t=e.gl,r=this._cache;return r.use(e.__GUID__),r.miss("webgl_texture")&&r.put("webgl_texture",t.createTexture()),this.dynamic?this.update(e):r.isDirty()&&(this.update(e),r.fresh()),r.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){this._cache&&this._cache.dirtyAll()},update:function(e){},updateCommon:function(e){var t=e.gl;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,this.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,this.unpackAlignment),this.format===rt.DEPTH_COMPONENT&&(this.useMipmap=!1);var r=e.getGLExtension("EXT_sRGB");this.format!==Vt.SRGB||r||(this.format=Vt.RGB),this.format!==Vt.SRGB_ALPHA||r||(this.format=Vt.RGBA),this.NPOT=!this.isPowerOfTwo()},getAvailableWrapS:function(){return this.NPOT?rt.CLAMP_TO_EDGE:this.wrapS},getAvailableWrapT:function(){return this.NPOT?rt.CLAMP_TO_EDGE:this.wrapT},getAvailableMinFilter:function(){var e=this.minFilter;return this.NPOT||!this.useMipmap?e==rt.NEAREST_MIPMAP_NEAREST||e==rt.NEAREST_MIPMAP_LINEAR?rt.NEAREST:e==rt.LINEAR_MIPMAP_LINEAR||e==rt.LINEAR_MIPMAP_NEAREST?rt.LINEAR:e:e},getAvailableMagFilter:function(){return this.magFilter},nextHighestPowerOfTwo:function(e){--e;for(var t=1;t<32;t<<=1)e|=e>>t;return e+1},dispose:function(e){var t=this._cache;t.use(e.__GUID__);var r=t.get("webgl_texture");r&&e.gl.deleteTexture(r),t.deleteContext(e.__GUID__)},isRenderable:function(){},isPowerOfTwo:function(){}});Object.defineProperty(Vt.prototype,"width",{get:function(){return this._width},set:function(e){this._width=e}}),Object.defineProperty(Vt.prototype,"height",{get:function(){return this._height},set:function(e){this._height=e}}),Vt.BYTE=rt.BYTE,Vt.UNSIGNED_BYTE=rt.UNSIGNED_BYTE,Vt.SHORT=rt.SHORT,Vt.UNSIGNED_SHORT=rt.UNSIGNED_SHORT,Vt.INT=rt.INT,Vt.UNSIGNED_INT=rt.UNSIGNED_INT,Vt.FLOAT=rt.FLOAT,Vt.HALF_FLOAT=36193,Vt.UNSIGNED_INT_24_8_WEBGL=34042,Vt.DEPTH_COMPONENT=rt.DEPTH_COMPONENT,Vt.DEPTH_STENCIL=rt.DEPTH_STENCIL,Vt.ALPHA=rt.ALPHA,Vt.RGB=rt.RGB,Vt.RGBA=rt.RGBA,Vt.LUMINANCE=rt.LUMINANCE,Vt.LUMINANCE_ALPHA=rt.LUMINANCE_ALPHA,Vt.SRGB=35904,Vt.SRGB_ALPHA=35906,Vt.COMPRESSED_RGB_S3TC_DXT1_EXT=33776,Vt.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777,Vt.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778,Vt.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779,Vt.NEAREST=rt.NEAREST,Vt.LINEAR=rt.LINEAR,Vt.NEAREST_MIPMAP_NEAREST=rt.NEAREST_MIPMAP_NEAREST,Vt.LINEAR_MIPMAP_NEAREST=rt.LINEAR_MIPMAP_NEAREST,Vt.NEAREST_MIPMAP_LINEAR=rt.NEAREST_MIPMAP_LINEAR,Vt.LINEAR_MIPMAP_LINEAR=rt.LINEAR_MIPMAP_LINEAR,Vt.REPEAT=rt.REPEAT,Vt.CLAMP_TO_EDGE=rt.CLAMP_TO_EDGE,Vt.MIRRORED_REPEAT=rt.MIRRORED_REPEAT;var jt=$e.extend({name:"",depthTest:!0,depthMask:!0,transparent:!1,blend:null,
_enabledUniforms:null},function(){this.name||(this.name="MATERIAL_"+this.__GUID__),this.shader&&this.attachShader(this.shader),this.uniforms||(this.uniforms={})},{bind:function(e,t,r,n){for(var i=e.gl,t=t||this.shader,a=t.currentTextureSlot(),o=0;o<this._enabledUniforms.length;o++){var s=this._enabledUniforms[o],u=this.uniforms[s].value;if(u instanceof Vt)u.__slot=-1;else if(Array.isArray(u))for(var l=0;l<u.length;l++)u[l]instanceof Vt&&(u[l].__slot=-1)}for(var o=0;o<this._enabledUniforms.length;o++){var s=this._enabledUniforms[o],c=this.uniforms[s],u=c.value;if(null!==u)if(u instanceof Vt)if(u.__slot<0){var h=t.currentTextureSlot(),f=t.setUniform(i,"1i",s,h);if(!f)continue;t.takeCurrentTextureSlot(e,u),u.__slot=h}else t.setUniform(i,"1i",s,u.__slot);else if(Array.isArray(u)){if(0===u.length)continue;var d=u[0];if(d instanceof Vt){if(!t.hasUniform(s))continue;for(var _=[],l=0;l<u.length;l++){var p=u[l];if(p.__slot<0){var h=t.currentTextureSlot();_.push(h),t.takeCurrentTextureSlot(e,p),p.__slot=h}else _.push(p.__slot)}t.setUniform(i,"1iv",s,_)}else t.setUniform(i,c.type,s,u)}else t.setUniform(i,c.type,s,u);else if("t"===c.type){var h=t.currentTextureSlot(),f=t.setUniform(i,"1i",s,h);f&&t.takeCurrentTextureSlot(e,null)}}t.resetTextureSlot(a)},setUniform:function(e,t){void 0===t&&console.warn('Uniform value "'+e+'" is undefined');var r=this.uniforms[e];r&&(r.value=t)},setUniforms:function(e){for(var t in e){var r=e[t];this.setUniform(t,r)}},isUniformEnabled:function(e){return this._enabledUniforms.indexOf(e)>=0},set:function(e,t){if("object"==typeof e)for(var r in e){var n=e[r];this.set(r,n)}else{var i=this.uniforms[e];i&&(void 0===t&&(console.warn('Uniform value "'+e+'" is undefined'),t=null),i.value=t)}},get:function(e){var t=this.uniforms[e];if(t)return t.value},attachShader:function(e,t){this.shader&&this.shader.detached();var r=this.uniforms;this.uniforms=e.createUniforms(),this.shader=e;var n=this.uniforms;if(this._enabledUniforms=Object.keys(n),this._enabledUniforms.sort(),t)for(var i in r)n[i]&&(n[i].value=r[i].value);e.attached()},detachShader:function(){this.shader.detached(),this.shader=null,this.uniforms={}},clone:function(){var e=new this.constructor({name:this.name,shader:this.shader});for(var t in this.uniforms)e.uniforms[t].value=this.uniforms[t].value;return e.depthTest=this.depthTest,e.depthMask=this.depthMask,e.transparent=this.transparent,e.blend=this.blend,e},dispose:function(e,t){if(t)for(var r in this.uniforms){var n=this.uniforms[r].value;if(n)if(n instanceof Vt)n.dispose(e);else if(Array.isArray(n))for(var i=0;i<n.length;i++)n[i]instanceof Vt&&n[i].dispose(e)}var a=this.shader;a&&(this.detachShader(),a.isAttachedToAny()||a.dispose(e))}}),Xt=ot.vec2,Kt=function(e,t){e=e||0,t=t||0,this._array=Xt.fromValues(e,t),this._dirty=!0};if(Kt.prototype={constructor:Kt,add:function(e){return Xt.add(this._array,this._array,e._array),this._dirty=!0,this},set:function(e,t){return this._array[0]=e,this._array[1]=t,this._dirty=!0,this},setArray:function(e){return this._array[0]=e[0],this._array[1]=e[1],this._dirty=!0,this},clone:function(){return new Kt(this.x,this.y)},copy:function(e){return Xt.copy(this._array,e._array),this._dirty=!0,this},cross:function(e,t){return Xt.cross(e._array,this._array,t._array),e._dirty=!0,this},dist:function(e){return Xt.dist(this._array,e._array)},distance:function(e){return Xt.distance(this._array,e._array)},div:function(e){return Xt.div(this._array,this._array,e._array),this._dirty=!0,this},divide:function(e){return Xt.divide(this._array,this._array,e._array),this._dirty=!0,this},dot:function(e){return Xt.dot(this._array,e._array)},len:function(){return Xt.len(this._array)},length:function(){return Xt.length(this._array)},lerp:function(e,t,r){return Xt.lerp(this._array,e._array,t._array,r),this._dirty=!0,this},min:function(e){return Xt.min(this._array,this._array,e._array),this._dirty=!0,this},max:function(e){return Xt.max(this._array,this._array,e._array),this._dirty=!0,this},mul:function(e){return Xt.mul(this._array,this._array,e._array),this._dirty=!0,this},multiply:function(e){return Xt.multiply(this._array,this._array,e._array),this._dirty=!0,this},negate:function(){return Xt.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return Xt.normalize(this._array,this._array),this._dirty=!0,this},random:function(e){return Xt.random(this._array,e),this._dirty=!0,this},scale:function(e){return Xt.scale(this._array,this._array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return Xt.scaleAndAdd(this._array,this._array,e._array,t),this._dirty=!0,this},sqrDist:function(e){return Xt.sqrDist(this._array,e._array)},squaredDistance:function(e){return Xt.squaredDistance(this._array,e._array)},sqrLen:function(){return Xt.sqrLen(this._array)},squaredLength:function(){return Xt.squaredLength(this._array)},sub:function(e){return Xt.sub(this._array,this._array,e._array),this._dirty=!0,this},subtract:function(e){return Xt.subtract(this._array,this._array,e._array),this._dirty=!0,this},transformMat2:function(e){return Xt.transformMat2(this._array,this._array,e._array),this._dirty=!0,this},transformMat2d:function(e){return Xt.transformMat2d(this._array,this._array,e._array),this._dirty=!0,this},transformMat3:function(e){return Xt.transformMat3(this._array,this._array,e._array),this._dirty=!0,this},transformMat4:function(e){return Xt.transformMat4(this._array,this._array,e._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}},Object.defineProperty){var Yt=Kt.prototype;Object.defineProperty(Yt,"x",{get:function(){return this._array[0]},set:function(e){this._array[0]=e,this._dirty=!0}}),Object.defineProperty(Yt,"y",{get:function(){return this._array[1]},set:function(e){this._array[1]=e,this._dirty=!0}})}Kt.add=function(e,t,r){return Xt.add(e._array,t._array,r._array),e._dirty=!0,e},Kt.set=function(e,t,r){return Xt.set(e._array,t,r),e._dirty=!0,e},Kt.copy=function(e,t){return Xt.copy(e._array,t._array),e._dirty=!0,e},Kt.cross=function(e,t,r){return Xt.cross(e._array,t._array,r._array),e._dirty=!0,e},Kt.dist=function(e,t){return Xt.distance(e._array,t._array)},Kt.distance=Kt.dist,Kt.div=function(e,t,r){return Xt.divide(e._array,t._array,r._array),e._dirty=!0,e},Kt.divide=Kt.div,Kt.dot=function(e,t){return Xt.dot(e._array,t._array)},Kt.len=function(e){return Xt.length(e._array)},Kt.lerp=function(e,t,r,n){return Xt.lerp(e._array,t._array,r._array,n),e._dirty=!0,e},Kt.min=function(e,t,r){return Xt.min(e._array,t._array,r._array),e._dirty=!0,e},Kt.max=function(e,t,r){return Xt.max(e._array,t._array,r._array),e._dirty=!0,e},Kt.mul=function(e,t,r){return Xt.multiply(e._array,t._array,r._array),e._dirty=!0,e},Kt.multiply=Kt.mul,Kt.negate=function(e,t){return Xt.negate(e._array,t._array),e._dirty=!0,e},Kt.normalize=function(e,t){return Xt.normalize(e._array,t._array),e._dirty=!0,e},Kt.random=function(e,t){return Xt.random(e._array,t),e._dirty=!0,e},Kt.scale=function(e,t,r){return Xt.scale(e._array,t._array,r),e._dirty=!0,e},Kt.scaleAndAdd=function(e,t,r,n){return Xt.scaleAndAdd(e._array,t._array,r._array,n),e._dirty=!0,e},Kt.sqrDist=function(e,t){return Xt.sqrDist(e._array,t._array)},Kt.squaredDistance=Kt.sqrDist,Kt.sqrLen=function(e){return Xt.sqrLen(e._array)},Kt.squaredLength=Kt.sqrLen,Kt.sub=function(e,t,r){return Xt.subtract(e._array,t._array,r._array),e._dirty=!0,e},Kt.subtract=Kt.sub,Kt.transformMat2=function(e,t,r){return Xt.transformMat2(e._array,t._array,r._array),e._dirty=!0,e},Kt.transformMat2d=function(e,t,r){return Xt.transformMat2d(e._array,t._array,r._array),e._dirty=!0,e},Kt.transformMat3=function(e,t,r){return Xt.transformMat3(e._array,t._array,r._array),e._dirty=!0,e},Kt.transformMat4=function(e,t,r){return Xt.transformMat4(e._array,t._array,r._array),e._dirty=!0,e};var Zt=":unconfigurable;",Qt=["@export qtek.header.directional_light","uniform vec3 directionalLightDirection[DIRECTIONAL_LIGHT_COUNT]"+Zt,"uniform vec3 directionalLightColor[DIRECTIONAL_LIGHT_COUNT]"+Zt,"@end","@export qtek.header.ambient_light","uniform vec3 ambientLightColor[AMBIENT_LIGHT_COUNT]"+Zt,"@end","@export qtek.header.ambient_sh_light","uniform vec3 ambientSHLightColor[AMBIENT_SH_LIGHT_COUNT]"+Zt,"uniform vec3 ambientSHLightCoefficients[AMBIENT_SH_LIGHT_COUNT * 9]"+Zt,"vec3 calcAmbientSHLight(int idx, vec3 N) {\n    int offset = 9 * idx;\n    return ambientSHLightCoefficients[0]\n        + ambientSHLightCoefficients[1] * N.x\n        + ambientSHLightCoefficients[2] * N.y\n        + ambientSHLightCoefficients[3] * N.z\n        + ambientSHLightCoefficients[4] * N.x * N.z\n        + ambientSHLightCoefficients[5] * N.z * N.y\n        + ambientSHLightCoefficients[6] * N.y * N.x\n        + ambientSHLightCoefficients[7] * (3.0 * N.z * N.z - 1.0)\n        + ambientSHLightCoefficients[8] * (N.x * N.x - N.y * N.y);\n}","@end","@export qtek.header.ambient_cubemap_light","uniform vec3 ambientCubemapLightColor[AMBIENT_CUBEMAP_LIGHT_COUNT]"+Zt,"uniform samplerCube ambientCubemapLightCubemap[AMBIENT_CUBEMAP_LIGHT_COUNT]"+Zt,"uniform sampler2D ambientCubemapLightBRDFLookup[AMBIENT_CUBEMAP_LIGHT_COUNT]"+Zt,"@end","@export qtek.header.point_light","uniform vec3 pointLightPosition[POINT_LIGHT_COUNT]"+Zt,"uniform float pointLightRange[POINT_LIGHT_COUNT]"+Zt,"uniform vec3 pointLightColor[POINT_LIGHT_COUNT]"+Zt,"@end","@export qtek.header.spot_light","uniform vec3 spotLightPosition[SPOT_LIGHT_COUNT]"+Zt,"uniform vec3 spotLightDirection[SPOT_LIGHT_COUNT]"+Zt,"uniform float spotLightRange[SPOT_LIGHT_COUNT]"+Zt,"uniform float spotLightUmbraAngleCosine[SPOT_LIGHT_COUNT]"+Zt,"uniform float spotLightPenumbraAngleCosine[SPOT_LIGHT_COUNT]"+Zt,"uniform float spotLightFalloffFactor[SPOT_LIGHT_COUNT]"+Zt,"uniform vec3 spotLightColor[SPOT_LIGHT_COUNT]"+Zt,"@end"].join("\n"),Jt="@export qtek.prez.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\n@import qtek.chunk.skinning_header\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n@end\n@export qtek.prez.fragment\nvoid main()\n{\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n@end";Ut.import(Qt),Ut.import(Jt);var $t=ot.mat4,er=ot.vec3,tr=$t.create,rr={},nr=$e.extend(function(){return{canvas:null,_width:100,_height:100,devicePixelRatio:window.devicePixelRatio||1,clearColor:[0,0,0,0],clearBit:17664,alpha:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,throwError:!0,gl:null,viewport:{},__currentFrameBuffer:null,_viewportStack:[],_clearStack:[],_sceneRendering:null}},function(){this.canvas||(this.canvas=document.createElement("canvas"));var e=this.canvas;try{var t={alpha:this.alpha,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer};if(this.gl=e.getContext("webgl",t)||e.getContext("experimental-webgl",t),!this.gl)throw new Error;this._glinfo=new a(this.gl),this.gl.targetRenderer&&console.error("Already created a renderer"),this.gl.targetRenderer=this,this.resize()}catch(e){throw"Error creating WebGL Context "+e}},{resize:function(e,t){var r=this.canvas,n=this.devicePixelRatio;null!=e?(r.style.width=e+"px",r.style.height=t+"px",r.width=e*n,r.height=t*n,this._width=e,this._height=t):(this._width=r.width/n,this._height=r.height/n),this.setViewport(0,0,this._width,this._height)},getWidth:function(){return this._width},getHeight:function(){return this._height},getViewportAspect:function(){var e=this.viewport;return e.width/e.height},setDevicePixelRatio:function(e){this.devicePixelRatio=e,this.resize(this._width,this._height)},getDevicePixelRatio:function(){return this.devicePixelRatio},getGLExtension:function(e){return this._glinfo.getExtension(e)},getGLParameter:function(e){return this._glinfo.getParameter(e)},setViewport:function(e,t,r,n,i){if("object"==typeof e){var a=e;e=a.x,t=a.y,r=a.width,n=a.height,i=a.devicePixelRatio}i=i||this.devicePixelRatio,this.gl.viewport(e*i,t*i,r*i,n*i),this.viewport={x:e,y:t,width:r,height:n,devicePixelRatio:i}},saveViewport:function(){this._viewportStack.push(this.viewport)},restoreViewport:function(){this._viewportStack.length>0&&this.setViewport(this._viewportStack.pop())},saveClear:function(){this._clearStack.push({clearBit:this.clearBit,clearColor:this.clearColor})},restoreClear:function(){if(this._clearStack.length>0){var e=this._clearStack.pop();this.clearColor=e.clearColor,this.clearBit=e.clearBit}},bindSceneRendering:function(e){this._sceneRendering=e},beforeRenderObject:function(){},afterRenderObject:function(){},render:function(e,t,r,n){var i=this.gl;this._sceneRendering=e;var a=this.clearColor;if(this.clearBit){i.colorMask(!0,!0,!0,!0),i.depthMask(!0);var o=this.viewport,s=!1,u=o.devicePixelRatio;(o.width!==this._width||o.height!==this._height||u&&u!==this.devicePixelRatio||o.x||o.y)&&(s=!0,i.enable(i.SCISSOR_TEST),i.scissor(o.x*u,o.y*u,o.width*u,o.height*u)),i.clearColor(a[0],a[1],a[2],a[3]),i.clear(this.clearBit),s&&i.disable(i.SCISSOR_TEST)}r||e.update(!1),t.getScene()||t.update(!0);for(var l=e.opaqueQueue,c=e.transparentQueue,h=e.material,f=0;f<l.length;f++){var d=l[f].material;d.updateShader&&d.updateShader(this)}for(var f=0;f<c.length;f++){var d=c[f].material;d.updateShader&&d.updateShader(this)}if(e.trigger("beforerender",this,e,t),c.length>0)for(var _=tr(),p=er.create(),f=0;f<c.length;f++){var m=c[f];$t.multiplyAffine(_,t.viewMatrix._array,m.worldTransform._array),er.transformMat4(p,m.position._array,_),m.__depth=p[2]}l.sort(this.opaqueSortFunc),c.sort(this.transparentSortFunc),e.trigger("beforerender:opaque",this,l),e.viewBoundingBoxLastFrame.min.set(1/0,1/0,1/0),e.viewBoundingBoxLastFrame.max.set(-1/0,-1/0,-1/0),i.disable(i.BLEND),i.enable(i.DEPTH_TEST);var v=this.renderQueue(l,t,h,n);e.trigger("afterrender:opaque",this,l,v),e.trigger("beforerender:transparent",this,c),i.enable(i.BLEND);var g=this.renderQueue(c,t,h);e.trigger("afterrender:transparent",this,c,g);var y={};for(var x in v)y[x]=v[x]+g[x];return e.trigger("afterrender",this,e,t,y),this._sceneRendering=null,y},resetRenderStatus:function(){this._currentShader=null},ifRenderObject:function(e){return!0},renderQueue:function(e,t,r,n){var i={triangleCount:0,vertexCount:0,drawCallCount:0,meshCount:e.length,renderedMeshCount:0},a=this.viewport,o=a.devicePixelRatio,s=[a.x*o,a.y*o,a.width*o,a.height*o],u=this.devicePixelRatio,l=this.__currentFrameBuffer?[this.__currentFrameBuffer.getTextureWidth(),this.__currentFrameBuffer.getTextureHeight()]:[this._width*u,this._height*u],c=[s[2],s[3]],h=Date.now();$t.copy(ir.VIEW,t.viewMatrix._array),$t.copy(ir.PROJECTION,t.projectionMatrix._array),$t.multiply(ir.VIEWPROJECTION,t.projectionMatrix._array,ir.VIEW),$t.copy(ir.VIEWINVERSE,t.worldTransform._array),$t.invert(ir.PROJECTIONINVERSE,ir.PROJECTION),$t.invert(ir.VIEWPROJECTIONINVERSE,ir.VIEWPROJECTION);var f,d,_,p=this.gl,m=this._sceneRendering;n?_=this._renderPreZ(e,m,t):(_=e,p.depthFunc(p.LESS));for(var v,g,y,x,T,E=0;E<_.length;E++){var b=_[E];if(this.ifRenderObject(b)){var S=b.geometry,A=b.isSkinnedMesh()?ir.IDENTITY:b.worldTransform._array;if($t.multiplyAffine(ir.WORLDVIEW,ir.VIEW,A),!S.boundingBox||n||!this.isFrustumCulled(b,m,t,ir.WORLDVIEW,ir.PROJECTION)){var N=r||b.material,w=N.shader;$t.copy(ir.WORLD,A),$t.multiply(ir.WORLDVIEWPROJECTION,ir.VIEWPROJECTION,A),(w.matrixSemantics.WORLDINVERSE||w.matrixSemantics.WORLDINVERSETRANSPOSE)&&$t.invert(ir.WORLDINVERSE,A),(w.matrixSemantics.WORLDVIEWINVERSE||w.matrixSemantics.WORLDVIEWINVERSETRANSPOSE)&&$t.invert(ir.WORLDVIEWINVERSE,ir.WORLDVIEW),(w.matrixSemantics.WORLDVIEWPROJECTIONINVERSE||w.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE)&&$t.invert(ir.WORLDVIEWPROJECTIONINVERSE,ir.WORLDVIEWPROJECTION),b.beforeRender(this),this.beforeRenderObject(b,f,d);if(!w.isEqual(d)){m&&m.isShaderLightNumberChanged(w)&&m.setShaderLightNumber(w);var M=w.bind(this);if(M){if(rr[w.__GUID__])continue;if(rr[w.__GUID__]=!0,this.throwError)throw new Error(M);this.trigger("error",M)}w.setUniformOfSemantic(p,"VIEWPORT",s),w.setUniformOfSemantic(p,"WINDOW_SIZE",l),w.setUniformOfSemantic(p,"NEAR",t.near),w.setUniformOfSemantic(p,"FAR",t.far),w.setUniformOfSemantic(p,"DEVICEPIXELRATIO",o),w.setUniformOfSemantic(p,"TIME",h),w.setUniformOfSemantic(p,"VIEWPORT_SIZE",c),m&&m.setLightUniforms(w,this)}else w=d;f!==N&&(n||(N.depthTest!==v&&(N.depthTest?p.enable(p.DEPTH_TEST):p.disable(p.DEPTH_TEST),v=N.depthTest),N.depthMask!==g&&(p.depthMask(N.depthMask),g=N.depthMask)),N.bind(this,w,f,d),f=N,N.transparent&&(N.blend?N.blend(p):(p.blendEquationSeparate(p.FUNC_ADD,p.FUNC_ADD),p.blendFuncSeparate(p.SRC_ALPHA,p.ONE_MINUS_SRC_ALPHA,p.ONE,p.ONE_MINUS_SRC_ALPHA))));for(var R=w.matrixSemanticKeys,C=0;C<R.length;C++){var L=R[C],D=w.matrixSemantics[L],P=ir[L];if(D.isTranspose){var I=ir[D.semanticNoTranspose];$t.transpose(P,I)}w.setUniform(p,D.type,D.symbol,P)}b.cullFace!==x&&(x=b.cullFace,p.cullFace(x)),b.frontFace!==T&&(T=b.frontFace,p.frontFace(T)),b.culling!==y&&(y=b.culling,y?p.enable(p.CULL_FACE):p.disable(p.CULL_FACE));var O=b.render(this,w);O&&(i.triangleCount+=O.triangleCount,i.vertexCount+=O.vertexCount,i.drawCallCount+=O.drawCallCount,i.renderedMeshCount++),this.afterRenderObject(b,O),b.afterRender(this,O),d=w}}}return i},_renderPreZ:function(e,t,r){var n=this.gl,i=this._prezMaterial||new jt({shader:new Ut({vertex:Ut.source("qtek.prez.vertex"),fragment:Ut.source("qtek.prez.fragment")})});this._prezMaterial=i;var a,o,s,u=i.shader,l=[];u.bind(this),n.colorMask(!1,!1,!1,!1),n.depthMask(!0),n.enable(n.DEPTH_TEST);for(var c=0;c<e.length;c++){var h=e[c];if(this.ifRenderObject(h)){var f=h.isSkinnedMesh()?ir.IDENTITY:h.worldTransform._array,d=h.geometry;if($t.multiplyAffine(ir.WORLDVIEW,ir.VIEW,f),!(d.boundingBox&&this.isFrustumCulled(h,t,r,ir.WORLDVIEW,ir.PROJECTION)||(l.push(h),h.skeleton||h.ignorePreZ))){$t.multiply(ir.WORLDVIEWPROJECTION,ir.VIEWPROJECTION,f),h.cullFace!==o&&(o=h.cullFace,n.cullFace(o)),h.frontFace!==s&&(s=h.frontFace,n.frontFace(s)),h.culling!==a&&(a=h.culling,a?n.enable(n.CULL_FACE):n.disable(n.CULL_FACE));var _=u.matrixSemantics.WORLDVIEWPROJECTION;u.setUniform(n,_.type,_.symbol,ir.WORLDVIEWPROJECTION),h.render(this,i.shader)}}}return n.depthFunc(n.LEQUAL),n.colorMask(!0,!0,!0,!0),n.depthMask(!0),l},isFrustumCulled:function(){var e=new vt,t=new Et;return function(r,n,i,a,o){var s=r.boundingBox||r.geometry.boundingBox;if(t._array=a,e.copy(s),e.applyTransform(t),n&&r.isRenderable()&&r.castShadow&&n.viewBoundingBoxLastFrame.union(e),r.frustumCulling&&!r.isSkinnedMesh()){if(!e.intersectBoundingBox(i.frustum.boundingBox))return!0;t._array=o,e.max._array[2]>0&&e.min._array[2]<0&&(e.max._array[2]=-1e-20),e.applyProjection(t);var u=e.min._array,l=e.max._array;if(l[0]<-1||u[0]>1||l[1]<-1||u[1]>1||l[2]<-1||u[2]>1)return!0}return!1}}(),disposeScene:function(e){this.disposeNode(e,!0,!0),e.dispose()},disposeNode:function(e,t,r){var n={};e.getParent()&&e.getParent().remove(e),e.traverse(function(e){e.geometry&&t&&e.geometry.dispose(this),e.material&&(n[e.material.__GUID__]=e.material),e.dispose&&e.dispose(this)},this);for(var i in n){n[i].dispose(this,r)}},disposeShader:function(e){e.dispose(this)},disposeGeometry:function(e){e.dispose(this)},disposeTexture:function(e){e.dispose(this)},disposeFrameBuffer:function(e){e.dispose(this)},dispose:function(){},screenToNDC:function(e,t,r){r||(r=new Kt),t=this._height-t;var n=this.viewport,i=r._array;return i[0]=(e-n.x)/n.width,i[0]=2*i[0]-1,i[1]=(t-n.y)/n.height,i[1]=2*i[1]-1,r}});nr.opaqueSortFunc=nr.prototype.opaqueSortFunc=function(e,t){return e.renderOrder===t.renderOrder?e.material.shader===t.material.shader?e.material===t.material?e.geometry.__GUID__-t.geometry.__GUID__:e.material.__GUID__-t.material.__GUID__:e.material.shader.__GUID__-t.material.shader.__GUID__:e.renderOrder-t.renderOrder},nr.transparentSortFunc=nr.prototype.transparentSortFunc=function(e,t){return e.renderOrder===t.renderOrder?e.__depth===t.__depth?e.material.shader===t.material.shader?e.material===t.material?e.geometry.__GUID__-t.geometry.__GUID__:e.material.__GUID__-t.material.__GUID__:e.material.shader.__GUID__-t.material.shader.__GUID__:e.__depth-t.__depth:e.renderOrder-t.renderOrder};var ir={IDENTITY:tr(),WORLD:tr(),VIEW:tr(),PROJECTION:tr(),WORLDVIEW:tr(),VIEWPROJECTION:tr(),WORLDVIEWPROJECTION:tr(),WORLDINVERSE:tr(),VIEWINVERSE:tr(),PROJECTIONINVERSE:tr(),WORLDVIEWINVERSE:tr(),VIEWPROJECTIONINVERSE:tr(),WORLDVIEWPROJECTIONINVERSE:tr(),WORLDTRANSPOSE:tr(),VIEWTRANSPOSE:tr(),PROJECTIONTRANSPOSE:tr(),WORLDVIEWTRANSPOSE:tr(),VIEWPROJECTIONTRANSPOSE:tr(),WORLDVIEWPROJECTIONTRANSPOSE:tr(),WORLDINVERSETRANSPOSE:tr(),VIEWINVERSETRANSPOSE:tr(),PROJECTIONINVERSETRANSPOSE:tr(),WORLDVIEWINVERSETRANSPOSE:tr(),VIEWPROJECTIONINVERSETRANSPOSE:tr(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:tr()};nr.COLOR_BUFFER_BIT=rt.COLOR_BUFFER_BIT,nr.DEPTH_BUFFER_BIT=rt.DEPTH_BUFFER_BIT,nr.STENCIL_BUFFER_BIT=rt.STENCIL_BUFFER_BIT;var ar={get:f},or=ot.quat,sr=function(e,t,r,n){e=e||0,t=t||0,r=r||0,n=void 0===n?1:n,this._array=or.fromValues(e,t,r,n),this._dirty=!0};sr.prototype={constructor:sr,add:function(e){return or.add(this._array,this._array,e._array),this._dirty=!0,this},calculateW:function(){return or.calculateW(this._array,this._array),this._dirty=!0,this},set:function(e,t,r,n){return this._array[0]=e,this._array[1]=t,this._array[2]=r,this._array[3]=n,this._dirty=!0,this},setArray:function(e){return this._array[0]=e[0],this._array[1]=e[1],this._array[2]=e[2],this._array[3]=e[3],this._dirty=!0,this},clone:function(){return new sr(this.x,this.y,this.z,this.w)},conjugate:function(){return or.conjugate(this._array,this._array),this._dirty=!0,this},copy:function(e){return or.copy(this._array,e._array),this._dirty=!0,this},dot:function(e){return or.dot(this._array,e._array)},fromMat3:function(e){return or.fromMat3(this._array,e._array),this._dirty=!0,this},fromMat4:function(){var e=ot.mat3,t=e.create();return function(r){return e.fromMat4(t,r._array),e.transpose(t,t),or.fromMat3(this._array,t),this._dirty=!0,this}}(),identity:function(){return or.identity(this._array),this._dirty=!0,this},invert:function(){return or.invert(this._array,this._array),this._dirty=!0,this},len:function(){return or.len(this._array)},length:function(){return or.length(this._array)},lerp:function(e,t,r){return or.lerp(this._array,e._array,t._array,r),this._dirty=!0,this},mul:function(e){return or.mul(this._array,this._array,e._array),this._dirty=!0,this},mulLeft:function(e){return or.multiply(this._array,e._array,this._array),this._dirty=!0,this},multiply:function(e){return or.multiply(this._array,this._array,e._array),this._dirty=!0,this},multiplyLeft:function(e){return or.multiply(this._array,e._array,this._array),this._dirty=!0,this},normalize:function(){return or.normalize(this._array,this._array),this._dirty=!0,this},rotateX:function(e){return or.rotateX(this._array,this._array,e),this._dirty=!0,this},rotateY:function(e){return or.rotateY(this._array,this._array,e),this._dirty=!0,this},rotateZ:function(e){return or.rotateZ(this._array,this._array,e),this._dirty=!0,this},rotationTo:function(e,t){return or.rotationTo(this._array,e._array,t._array),this._dirty=!0,this},setAxes:function(e,t,r){return or.setAxes(this._array,e._array,t._array,r._array),this._dirty=!0,this},setAxisAngle:function(e,t){return or.setAxisAngle(this._array,e._array,t),this._dirty=!0,this},slerp:function(e,t,r){return or.slerp(this._array,e._array,t._array,r),this._dirty=!0,this},sqrLen:function(){return or.sqrLen(this._array)},squaredLength:function(){return or.squaredLength(this._array)},fromEuler:function(e,t){return sr.fromEuler(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var ur=Object.defineProperty;if(ur){var lr=sr.prototype;ur(lr,"x",{get:function(){return this._array[0]},set:function(e){this._array[0]=e,this._dirty=!0}}),ur(lr,"y",{get:function(){return this._array[1]},set:function(e){this._array[1]=e,this._dirty=!0}}),ur(lr,"z",{get:function(){return this._array[2]},set:function(e){this._array[2]=e,this._dirty=!0}}),ur(lr,"w",{get:function(){return this._array[3]},set:function(e){this._array[3]=e,this._dirty=!0}})}sr.add=function(e,t,r){return or.add(e._array,t._array,r._array),e._dirty=!0,e},sr.set=function(e,t,r,n,i){or.set(e._array,t,r,n,i),e._dirty=!0},sr.copy=function(e,t){return or.copy(e._array,t._array),e._dirty=!0,e},sr.calculateW=function(e,t){return or.calculateW(e._array,t._array),e._dirty=!0,e},sr.conjugate=function(e,t){return or.conjugate(e._array,t._array),e._dirty=!0,e},sr.identity=function(e){return or.identity(e._array),e._dirty=!0,e},sr.invert=function(e,t){return or.invert(e._array,t._array),e._dirty=!0,e},sr.dot=function(e,t){return or.dot(e._array,t._array)},sr.len=function(e){return or.length(e._array)},sr.lerp=function(e,t,r,n){return or.lerp(e._array,t._array,r._array,n),e._dirty=!0,e},sr.slerp=function(e,t,r,n){return or.slerp(e._array,t._array,r._array,n),e._dirty=!0,e},sr.mul=function(e,t,r){return or.multiply(e._array,t._array,r._array),e._dirty=!0,e},sr.multiply=sr.mul,sr.rotateX=function(e,t,r){return or.rotateX(e._array,t._array,r),e._dirty=!0,e},sr.rotateY=function(e,t,r){return or.rotateY(e._array,t._array,r),e._dirty=!0,e},sr.rotateZ=function(e,t,r){return or.rotateZ(e._array,t._array,r),e._dirty=!0,e},sr.setAxisAngle=function(e,t,r){return or.setAxisAngle(e._array,t._array,r),e._dirty=!0,e},sr.normalize=function(e,t){return or.normalize(e._array,t._array),e._dirty=!0,e},sr.sqrLen=function(e){return or.sqrLen(e._array)},sr.squaredLength=sr.sqrLen,sr.fromMat3=function(e,t){return or.fromMat3(e._array,t._array),e._dirty=!0,e},sr.setAxes=function(e,t,r,n){return or.setAxes(e._array,t._array,r._array,n._array),e._dirty=!0,e},sr.rotationTo=function(e,t,r){return or.rotationTo(e._array,t._array,r._array),e._dirty=!0,e},sr.fromEuler=function(e,t,r){e._dirty=!0,t=t._array;var n=e._array,i=Math.cos(t[0]/2),a=Math.cos(t[1]/2),o=Math.cos(t[2]/2),s=Math.sin(t[0]/2),u=Math.sin(t[1]/2),l=Math.sin(t[2]/2),r=(r||"XYZ").toUpperCase();switch(r){case"XYZ":n[0]=s*a*o+i*u*l,n[1]=i*u*o-s*a*l,n[2]=i*a*l+s*u*o,n[3]=i*a*o-s*u*l;break;case"YXZ":n[0]=s*a*o+i*u*l,n[1]=i*u*o-s*a*l,n[2]=i*a*l-s*u*o,n[3]=i*a*o+s*u*l;break;case"ZXY":n[0]=s*a*o-i*u*l,n[1]=i*u*o+s*a*l,n[2]=i*a*l+s*u*o,n[3]=i*a*o-s*u*l;break;case"ZYX":n[0]=s*a*o-i*u*l,n[1]=i*u*o+s*a*l,n[2]=i*a*l-s*u*o,n[3]=i*a*o+s*u*l;break;case"YZX":n[0]=s*a*o+i*u*l,n[1]=i*u*o+s*a*l,n[2]=i*a*l-s*u*o,n[3]=i*a*o-s*u*l;break;case"XZY":n[0]=s*a*o-i*u*l,n[1]=i*u*o-s*a*l,n[2]=i*a*l+s*u*o,n[3]=i*a*o+s*u*l}};var cr=ot.mat4,hr=0,fr=$e.extend({name:"",position:null,rotation:null,scale:null,worldTransform:null,localTransform:null,autoUpdateLocalTransform:!0,_parent:null,_scene:null,_needsUpdateWorldTransform:!0,_inIterating:!1,__depth:0},function(){this.name||(this.name=(this.type||"NODE")+"_"+hr++),this.position||(this.position=new ut),this.rotation||(this.rotation=new sr),this.scale||(this.scale=new ut(1,1,1)),this.worldTransform=new Et,this.localTransform=new Et,this._children=[]},{target:null,invisible:!1,isSkinnedMesh:function(){return!1},isRenderable:function(){return!1},setName:function(e){var t=this._scene;if(t){var r=t._nodeRepository;delete r[this.name],r[e]=this}this.name=e},add:function(e){this._inIterating&&console.warn("Add operation can cause unpredictable error when in iterating");var t=e._parent;if(t!==this){t&&t.remove(e),e._parent=this,this._children.push(e);var r=this._scene;r&&r!==e.scene&&e.traverse(this._addSelfToScene,this),e._needsUpdateWorldTransform=!0}},remove:function(e){this._inIterating&&console.warn("Remove operation can cause unpredictable error when in iterating");var t=this._children,r=t.indexOf(e);r<0||(t.splice(r,1),e._parent=null,this._scene&&e.traverse(this._removeSelfFromScene,this))},removeAll:function(){for(var e=this._children,t=0;t<e.length;t++)e[t]._parent=null,this._scene&&e[t].traverse(this._removeSelfFromScene,this);this._children=[]},getScene:function(){return this._scene},getParent:function(){return this._parent},_removeSelfFromScene:function(e){e._scene.removeFromScene(e),e._scene=null},_addSelfToScene:function(e){this._scene.addToScene(e),e._scene=this._scene},isAncestor:function(e){for(var t=e._parent;t;){if(t===this)return!0;t=t._parent}return!1},children:function(){return this._children.slice()},childAt:function(e){return this._children[e]},getChildByName:function(e){for(var t=this._children,r=0;r<t.length;r++)if(t[r].name===e)return t[r]},getDescendantByName:function(e){for(var t=this._children,r=0;r<t.length;r++){var n=t[r];if(n.name===e)return n;var i=n.getDescendantByName(e);if(i)return i}},queryNode:function(e){if(e){for(var t=e.split("/"),r=this,n=0;n<t.length;n++){var i=t[n];if(i){for(var a=!1,o=r._children,s=0;s<o.length;s++){var u=o[s];if(u.name===i){r=u,a=!0;break}}if(!a)return}}return r}},getPath:function(e){if(!this._parent)return"/";for(var t=this._parent,r=this.name;t._parent&&(r=t.name+"/"+r,t._parent!=e);)t=t._parent;return!t._parent&&e?null:r},traverse:function(e,t,r){this._inIterating=!0,r&&!r.call(t,this)||e.call(t,this);for(var n=this._children,i=0,a=n.length;i<a;i++)n[i].traverse(e,t,r);this._inIterating=!1},eachChild:function(e,t,r){this._inIterating=!0;for(var n=this._children,i=null==r,a=0,o=n.length;a<o;a++){var s=n[a];(i||s.constructor===r)&&e.call(t,s,a)}this._inIterating=!1},setLocalTransform:function(e){cr.copy(this.localTransform._array,e._array),this.decomposeLocalTransform()},decomposeLocalTransform:function(e){var t=e?null:this.scale;this.localTransform.decomposeMatrix(t,this.rotation,this.position)},setWorldTransform:function(e){cr.copy(this.worldTransform._array,e._array),this.decomposeWorldTransform()},decomposeWorldTransform:function(){var e=cr.create();return function(t){var r=this.localTransform,n=this.worldTransform;this._parent?(cr.invert(e,this._parent.worldTransform._array),cr.multiply(r._array,e,n._array)):cr.copy(r._array,n._array);var i=t?null:this.scale;r.decomposeMatrix(i,this.rotation,this.position)}}(),transformNeedsUpdate:function(){return this.position._dirty||this.rotation._dirty||this.scale._dirty},updateLocalTransform:function(){var e=this.position,t=this.rotation,r=this.scale;if(this.transformNeedsUpdate()){var n=this.localTransform._array;cr.fromRotationTranslation(n,t._array,e._array),cr.scale(n,n,r._array),t._dirty=!1,r._dirty=!1,e._dirty=!1,this._needsUpdateWorldTransform=!0}},_updateWorldTransformTopDown:function(){var e=this.localTransform._array,t=this.worldTransform._array;this._parent?cr.multiplyAffine(t,this._parent.worldTransform._array,e):cr.copy(t,e)},updateWorldTransform:function(){for(var e=this;e&&e.getParent()&&e.getParent().transformNeedsUpdate();)e=e.getParent();e.update()},update:function(e){this.autoUpdateLocalTransform?this.updateLocalTransform():e=!0,(e||this._needsUpdateWorldTransform)&&(this._updateWorldTransformTopDown(),e=!0,this._needsUpdateWorldTransform=!1);for(var t=this._children,r=0,n=t.length;r<n;r++)t[r].update(e)},getBoundingBox:function(){function e(e){return!e.invisible&&e.geometry}var t=new vt;return function(r,n){return n=n||new vt,r=r||e,this.traverse(function(e){e.geometry&&e.geometry.boundingBox&&(t.copy(e.geometry.boundingBox),t.applyTransform(e.worldTransform),n.union(t))},this,e),n}}(),getWorldPosition:function(e){this.transformNeedsUpdate()&&this.updateWorldTransform();var t=this.worldTransform._array;if(e){var r=e._array;return r[0]=t[12],r[1]=t[13],r[2]=t[14],e}return new ut(t[12],t[13],t[14])},clone:function(){var e=new this.constructor,t=this._children;e.setName(this.name),e.position.copy(this.position),e.rotation.copy(this.rotation),e.scale.copy(this.scale)
;for(var r=0;r<t.length;r++)e.add(t[r].clone());return e},rotateAround:function(){var e=new ut,t=new Et;return function(r,n,i){e.copy(this.position).subtract(r);var a=this.localTransform;a.identity(),a.translate(r),a.rotate(i,n),t.fromRotationTranslation(this.rotation,e),a.multiply(t),a.scale(this.scale),this.decomposeLocalTransform(),this._needsUpdateWorldTransform=!0}}(),lookAt:function(){var e=new Et;return function(t,r){e.lookAt(this.position,t,r||this.localTransform.y).invert(),this.setLocalTransform(e),this.target=t}}()}),dr=fr.extend(function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512,group:0}},{type:"",clone:function(){var e=fr.prototype.clone.call(this);return e.color=Array.prototype.slice.call(this.color),e.intensity=this.intensity,e.castShadow=this.castShadow,e.shadowResolution=this.shadowResolution,e}}),_r=fr.extend(function(){return{material:null,autoUpdate:!0,opaqueQueue:[],transparentQueue:[],lights:[],viewBoundingBoxLastFrame:new vt,_lightUniforms:{},_lightNumber:{},_opaqueObjectCount:0,_transparentObjectCount:0,_nodeRepository:{}}},function(){this._scene=this},{addToScene:function(e){e.name&&(this._nodeRepository[e.name]=e)},removeFromScene:function(e){e.name&&delete this._nodeRepository[e.name]},getNode:function(e){return this._nodeRepository[e]},cloneNode:function(e){var t=e.clone(),r={},n=function(i,a){i.skeleton&&(a.skeleton=i.skeleton.clone(e,t),a.joints=i.joints.slice()),i.material&&(r[i.material.__GUID__]={oldMat:i.material});for(var o=0;o<i._children.length;o++)n(i._children[o],a._children[o])};n(e,t);for(var i in r)r[i].newMat=r[i].oldMat.clone();return t.traverse(function(e){e.material&&(e.material=r[e.material.__GUID__].newMat)}),t},update:function(e,t){if(this.autoUpdate||e){fr.prototype.update.call(this,e);var r=this.lights,n=this.material&&this.material.transparent;if(this._opaqueObjectCount=0,this._transparentObjectCount=0,r.length=0,this._updateRenderQueue(this,n),this.opaqueQueue.length=this._opaqueObjectCount,this.transparentQueue.length=this._transparentObjectCount,!t){var i=this._lightNumber;for(var a in i)for(var o in i[a])i[a][o]=0;for(var s=0;s<r.length;s++){var u=r[s],a=u.group;i[a]||(i[a]={}),i[a][u.type]=i[a][u.type]||0,i[a][u.type]++}this._updateLightUniforms()}}},_updateRenderQueue:function(e,t){if(!e.invisible)for(var r=0;r<e._children.length;r++){var n=e._children[r];n instanceof dr&&this.lights.push(n),n.isRenderable()&&(n.material.transparent||t?this.transparentQueue[this._transparentObjectCount++]=n:this.opaqueQueue[this._opaqueObjectCount++]=n),n._children.length>0&&this._updateRenderQueue(n)}},_updateLightUniforms:function(){var e=this.lights;e.sort(d);var t=this._lightUniforms;for(var r in t)for(var n in t[r])t[r][n].value.length=0;for(var i=0;i<e.length;i++){var a=e[i],r=a.group;for(var n in a.uniformTemplates){var o=a.uniformTemplates[n];t[r]||(t[r]={}),t[r][n]||(t[r][n]={type:"",value:[]});var s=o.value(a),u=t[r][n];switch(u.type=o.type+"v",o.type){case"1i":case"1f":case"t":u.value.push(s);break;case"2f":case"3f":case"4f":for(var l=0;l<s.length;l++)u.value.push(s[l]);break;default:console.error("Unkown light uniform type "+o.type)}}}},isShaderLightNumberChanged:function(e){var t=e.lightGroup;for(var r in this._lightNumber[t])if(this._lightNumber[t][r]!==e.lightNumber[r])return!0;for(var r in e.lightNumber)if(this._lightNumber[t][r]!==e.lightNumber[r])return!0;return!1},setShaderLightNumber:function(e){var t=e.lightGroup;for(var r in this._lightNumber[t])e.lightNumber[r]=this._lightNumber[t][r];e.dirty()},setLightUniforms:function(e,t){var r=e.lightGroup;for(var n in this._lightUniforms[r]){var i=this._lightUniforms[r][n];if("tv"===i.type)for(var a=0;a<i.value.length;a++){var o=i.value[a],s=e.currentTextureSlot(),u=e.setUniform(t.gl,"1i",n,s);u&&e.takeCurrentTextureSlot(t,o)}else e.setUniform(t.gl,i.type,n,i.value)}},dispose:function(){this.material=null,this.opaqueQueue=[],this.transparentQueue=[],this.lights=[],this._lightUniforms={},this._lightNumber={},this._nodeRepository={}}}),pr="\n@export qtek.standard.vertex\n#define SHADER_NAME standard\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n#if defined(AOMAP_ENABLED)\nattribute vec2 texcoord2 : TEXCOORD_1;\n#endif\nattribute vec3 normal : NORMAL;\nattribute vec4 tangent : TANGENT;\n#ifdef VERTEX_COLOR\nattribute vec4 color : COLOR;\n#endif\nattribute vec3 barycentric;\n@import qtek.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n#ifdef VERTEX_COLOR\nvarying vec4 v_Color;\n#endif\n#if defined(AOMAP_ENABLED)\nvarying vec2 v_Texcoord2;\n#endif\nvoid main()\n{\n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n    vec3 skinnedTangent = tangent.xyz;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n    skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n    v_Barycentric = barycentric;\n    v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\n    v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n    v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n#endif\n#ifdef VERTEX_COLOR\n    v_Color = color;\n#endif\n#if defined(AOMAP_ENABLED)\n    v_Texcoord2 = texcoord2;\n#endif\n}\n@end\n@export qtek.standard.fragment\n#define PI 3.14159265358979\n#define GLOSSINESS_CHANNEL 0\n#define ROUGHNESS_CHANNEL 0\n#define METALNESS_CHANNEL 1\nuniform mat4 viewInverse : VIEWINVERSE;\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\n#ifdef NORMALMAP_ENABLED\nuniform sampler2D normalMap;\n#endif\n#ifdef DIFFUSEMAP_ENABLED\nuniform sampler2D diffuseMap;\n#endif\n#ifdef SPECULARMAP_ENABLED\nuniform sampler2D specularMap;\n#endif\n#ifdef USE_ROUGHNESS\nuniform float roughness : 0.5;\n    #ifdef ROUGHNESSMAP_ENABLED\nuniform sampler2D roughnessMap;\n    #endif\n#else\nuniform float glossiness: 0.5;\n    #ifdef GLOSSINESSMAP_ENABLED\nuniform sampler2D glossinessMap;\n    #endif\n#endif\n#ifdef METALNESSMAP_ENABLED\nuniform sampler2D metalnessMap;\n#endif\n#ifdef ENVIRONMENTMAP_ENABLED\nuniform samplerCube environmentMap;\n    #ifdef PARALLAX_CORRECTED\nuniform vec3 environmentBoxMin;\nuniform vec3 environmentBoxMax;\n    #endif\n#endif\n#ifdef BRDFLOOKUP_ENABLED\nuniform sampler2D brdfLookup;\n#endif\n#ifdef EMISSIVEMAP_ENABLED\nuniform sampler2D emissiveMap;\n#endif\n#ifdef SSAOMAP_ENABLED\nuniform sampler2D ssaoMap;\nuniform vec4 viewport : VIEWPORT;\n#endif\n#ifdef AOMAP_ENABLED\nuniform sampler2D aoMap;\nuniform float aoIntensity;\nvarying vec2 v_Texcoord2;\n#endif\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\n#ifdef USE_METALNESS\nuniform float metalness : 0.0;\n#else\nuniform vec3 specularColor : [0.1, 0.1, 0.1];\n#endif\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float emissionIntensity: 1;\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\nvarying vec3 v_Barycentric;\n#ifdef ENVIRONMENTMAP_PREFILTER\nuniform float maxMipmapLevel: 5;\n#endif\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n@import qtek.header.ambient_cubemap_light\n#endif\n#ifdef POINT_LIGHT_COUNT\n@import qtek.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_COUNT\n@import qtek.header.spot_light\n#endif\n@import qtek.util.calculate_attenuation\n@import qtek.util.edge_factor\n@import qtek.util.rgbm\n@import qtek.util.srgb\n@import qtek.plugin.compute_shadow_map\n@import qtek.util.parallax_correct\nfloat G_Smith(float g, float ndv, float ndl)\n{\n    float roughness = 1.0 - g;\n    float k = roughness * roughness / 2.0;\n    float G1V = ndv / (ndv * (1.0 - k) + k);\n    float G1L = ndl / (ndl * (1.0 - k) + k);\n    return G1L * G1V;\n}\nvec3 F_Schlick(float ndv, vec3 spec) {\n    return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\nfloat D_Phong(float g, float ndh) {\n    float a = pow(8192.0, g);\n    return (a + 2.0) / 8.0 * pow(ndh, a);\n}\nfloat D_GGX(float g, float ndh) {\n    float r = 1.0 - g;\n    float a = r * r;\n    float tmp = ndh * ndh * (a - 1.0) + 1.0;\n    return a / (PI * tmp * tmp);\n}\n#ifdef PARALLAXOCCLUSIONMAP_ENABLED\nuniform float parallaxOcclusionScale : 0.02;\nuniform float parallaxMaxLayers : 20;\nuniform float parallaxMinLayers : 5;\nuniform sampler2D parallaxOcclusionMap;\nmat3 transpose(in mat3 inMat)\n{\n    vec3 i0 = inMat[0];\n    vec3 i1 = inMat[1];\n    vec3 i2 = inMat[2];\n    return mat3(\n        vec3(i0.x, i1.x, i2.x),\n        vec3(i0.y, i1.y, i2.y),\n        vec3(i0.z, i1.z, i2.z)\n    );\n}\nvec2 parallaxUv(vec2 uv, vec3 viewDir)\n{\n    float numLayers = mix(parallaxMaxLayers, parallaxMinLayers, abs(dot(vec3(0.0, 0.0, 1.0), viewDir)));\n    float layerHeight = 1.0 / numLayers;\n    float curLayerHeight = 0.0;\n    vec2 deltaUv = viewDir.xy * parallaxOcclusionScale / (viewDir.z * numLayers);\n    vec2 curUv = uv;\n    float height = 1.0 - texture2D(parallaxOcclusionMap, curUv).r;\n    for (int i = 0; i < 30; i++) {\n        curLayerHeight += layerHeight;\n        curUv -= deltaUv;\n        height = 1.0 - texture2D(parallaxOcclusionMap, curUv).r;\n        if (height < curLayerHeight) {\n            break;\n        }\n    }\n    vec2 prevUv = curUv + deltaUv;\n    float next = height - curLayerHeight;\n    float prev = 1.0 - texture2D(parallaxOcclusionMap, prevUv).r - curLayerHeight + layerHeight;\n    return mix(curUv, prevUv, next / (next - prev));\n}\n#endif\nvoid main()\n{\n    vec4 albedoColor = vec4(color, alpha);\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 V = normalize(eyePos - v_WorldPosition);\n    vec2 uv = v_Texcoord;\n#if defined(PARALLAXOCCLUSIONMAP_ENABLED) || defined(NORMALMAP_ENABLED)\n    mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n#endif\n#ifdef PARALLAXOCCLUSIONMAP_ENABLED\n    uv = parallaxUv(v_Texcoord, normalize(transpose(tbn) * -V));\n#endif\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 texel = texture2D(diffuseMap, uv);\n    #ifdef SRGB_DECODE\n    texel = sRGBToLinear(texel);\n    #endif\n    albedoColor.rgb *= texel.rgb;\n    #ifdef DIFFUSEMAP_ALPHA_ALPHA\n    albedoColor.a *= texel.a;\n    #endif\n#endif\n#ifdef USE_METALNESS\n    float m = metalness;\n    #ifdef METALNESSMAP_ENABLED\n    float m2 = texture2D(metalnessMap, uv)[METALNESS_CHANNEL];\n    m = clamp(m2 + (m - 0.5) * 2.0, 0.0, 1.0);\n    #endif\n    vec3 baseColor = albedoColor.rgb;\n    albedoColor.rgb = baseColor * (1.0 - m);\n    vec3 spec = mix(vec3(0.04), baseColor, m);\n#else\n    vec3 spec = specularColor;\n#endif\n#ifdef USE_ROUGHNESS\n    float g = 1.0 - roughness;\n    #ifdef ROUGHNESSMAP_ENABLED\n    float g2 = 1.0 - texture2D(roughnessMap, uv)[ROUGHNESS_CHANNEL];\n    g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n    #endif\n#else\n    float g = glossiness;\n    #ifdef GLOSSINESSMAP_ENABLED\n    float g2 = texture2D(glossinessMap, uv)[GLOSSINESS_CHANNEL];\n    g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n    #endif\n#endif\n#ifdef SPECULARMAP_ENABLED\n    spec *= sRGBToLinear(texture2D(specularMap, uv)).rgb;\n#endif\n    vec3 N = v_Normal;\n#ifdef DOUBLE_SIDED\n    if (dot(N, V) < 0.0) {\n        N = -N;\n    }\n#endif\n#ifdef NORMALMAP_ENABLED\n    if (dot(v_Tangent, v_Tangent) > 0.0) {\n        vec3 normalTexel = texture2D(normalMap, uv).xyz;\n        if (dot(normalTexel, normalTexel) > 0.0) {            N = normalTexel * 2.0 - 1.0;\n            tbn[1] = -tbn[1];\n            N = normalize(tbn * N);\n        }\n    }\n#endif\n    vec3 diffuseTerm = vec3(0.0, 0.0, 0.0);\n    vec3 specularTerm = vec3(0.0, 0.0, 0.0);\n    float ndv = clamp(dot(N, V), 0.0, 1.0);\n    vec3 fresnelTerm = F_Schlick(ndv, spec);\n#ifdef AMBIENT_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n    {{\n        diffuseTerm += ambientLightColor[_idx_];\n    }}\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n    {{\n        diffuseTerm += calcAmbientSHLight(_idx_, N) * ambientSHLightColor[_idx_];\n    }}\n#endif\n#ifdef POINT_LIGHT_COUNT\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsPoint[POINT_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n    }\n#endif\n    for(int _idx_ = 0; _idx_ < POINT_LIGHT_COUNT; _idx_++)\n    {{\n        vec3 lightPosition = pointLightPosition[_idx_];\n        vec3 lc = pointLightColor[_idx_];\n        float range = pointLightRange[_idx_];\n        vec3 L = lightPosition - v_WorldPosition;\n        float dist = length(L);\n        float attenuation = lightAttenuation(dist, range);\n        L /= dist;\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n        if(shadowEnabled)\n        {\n            shadowContrib = shadowContribsPoint[_idx_];\n        }\n#endif\n        vec3 li = lc * ndl * attenuation * shadowContrib;\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }}\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n    }\n#endif\n    for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)\n    {{\n        vec3 L = -normalize(directionalLightDirection[_idx_]);\n        vec3 lc = directionalLightColor[_idx_];\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n        if(shadowEnabled)\n        {\n            shadowContrib = shadowContribsDir[_idx_];\n        }\n#endif\n        vec3 li = lc * ndl * shadowContrib;\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }}\n#endif\n#ifdef SPOT_LIGHT_COUNT\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsSpot[SPOT_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n    }\n#endif\n    for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\n    {\n        vec3 lightPosition = spotLightPosition[i];\n        vec3 spotLightDirection = -normalize(spotLightDirection[i]);\n        vec3 lc = spotLightColor[i];\n        float range = spotLightRange[i];\n        float a = spotLightUmbraAngleCosine[i];\n        float b = spotLightPenumbraAngleCosine[i];\n        float falloffFactor = spotLightFalloffFactor[i];\n        vec3 L = lightPosition - v_WorldPosition;\n        float dist = length(L);\n        float attenuation = lightAttenuation(dist, range);\n        L /= dist;\n        float c = dot(spotLightDirection, L);\n        float falloff;\n        falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n        falloff = pow(falloff, falloffFactor);\n        vec3 H = normalize(L + V);\n        float ndl = clamp(dot(N, L), 0.0, 1.0);\n        float ndh = clamp(dot(N, H), 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n        if (shadowEnabled)\n        {\n            shadowContrib = shadowContribsSpot[i];\n        }\n#endif\n        vec3 li = lc * attenuation * (1.0 - falloff) * shadowContrib * ndl;\n        diffuseTerm += li;\n        specularTerm += li * fresnelTerm * D_Phong(g, ndh);\n    }\n#endif\n    vec4 outColor = albedoColor;\n    outColor.rgb *= diffuseTerm;\n    outColor.rgb += specularTerm;\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\n    vec3 L = reflect(-V, N);\n    float rough2 = clamp(1.0 - g, 0.0, 1.0);\n    float bias2 = rough2 * 5.0;\n    vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;\n    vec3 envWeight2 = spec * brdfParam2.x + brdfParam2.y;\n    vec3 envTexel2;\n    for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)\n    {{\n        envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 51.5);\n        outColor.rgb += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2;\n    }}\n#endif\n#ifdef ENVIRONMENTMAP_ENABLED\n    vec3 envWeight = g * fresnelTerm;\n    vec3 L = reflect(-V, N);\n    #ifdef PARALLAX_CORRECTED\n    L = parallaxCorrect(L, v_WorldPosition, environmentBoxMin, environmentBoxMax);\n    #endif\n    #ifdef ENVIRONMENTMAP_PREFILTER\n    float rough = clamp(1.0 - g, 0.0, 1.0);\n    float bias = rough * maxMipmapLevel;\n    vec3 envTexel = decodeHDR(textureCubeLodEXT(environmentMap, L, bias)).rgb;\n        #ifdef BRDFLOOKUP_ENABLED\n    vec2 brdfParam = texture2D(brdfLookup, vec2(rough, ndv)).xy;\n    envWeight = spec * brdfParam.x + brdfParam.y;\n        #endif\n    #else\n    vec3 envTexel = textureCube(environmentMap, L).xyz;\n    #endif\n    outColor.rgb += envTexel * envWeight;\n#endif\n    float aoFactor = 1.0;\n#ifdef SSAOMAP_ENABLED\n    aoFactor = min(texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r, aoFactor);\n#endif\n#ifdef AOMAP_ENABLED\n    aoFactor = min(1.0 - clamp((1.0 - texture2D(aoMap, v_Texcoord2).r) * aoIntensity, 0.0, 1.0), aoFactor);\n#endif\n    outColor.rgb *= aoFactor;\n    vec3 lEmission = emission;\n#ifdef EMISSIVEMAP_ENABLED\n    lEmission *= texture2D(emissiveMap, uv).rgb;\n#endif\n    outColor.rgb += lEmission * emissionIntensity;\n#ifdef GAMMA_ENCODE\n    outColor.rgb = pow(outColor.rgb, vec3(1 / 2.2));\n#endif\n    if(lineWidth > 0.)\n    {\n        outColor.rgb = mix(outColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n    }\n#ifdef ALPHA_TEST\n    if (outColor.a < alphaCutoff) {\n        discard;\n    }\n#endif\n    gl_FragColor = encodeHDR(outColor);\n}\n@end\n";Ut.import(pr);var mr={},vr={},gr=["diffuseMap","normalMap","roughnessMap","metalnessMap","emissiveMap","environmentMap","brdfLookup","ssaoMap","aoMap"],yr=["color","emission","emissionIntensity","alpha","roughness","metalness","uvRepeat","uvOffset","aoIntensity","alphaCutoff"],xr=["jointCount","linear","encodeRGBM","decodeRGBM","doubleSided","alphaTest","roughnessChannel","metalnessChannel"],Tr=["environmentMapPrefiltered","linear","encodeRGBM","decodeRGBM","doubleSided","alphaTest","parallaxCorrected"],Er=gr.concat(Tr),br=Er.reduce(function(e,t,r){return e[t]=4096<<r,e},{}),Sr=jt.extend(function(){return{color:[1,1,1],emission:[0,0,0],emissionIntensity:0,roughness:.5,metalness:0,alpha:1,alphaTest:!1,alphaCutoff:.9,doubleSided:!1,uvRepeat:[1,1],uvOffset:[0,0],aoIntensity:1,jointCount:0,environmentMapPrefiltered:!1,linear:!1,encodeRGBM:!1,decodeRGBM:!1,roughnessChannel:0,metalnessChannel:1}},{_doUpdateShader:function(e){var t=gr.filter(function(e){return!!this[e]},this);this._shader&&(m(this._shader,e),this._shader.detached());var r=p(e,t,this.jointCount||0,{environmentMapPrefiltered:this.environmentMapPrefiltered,linear:this.linear,encodeRGBM:this.encodeRGBM,decodeRGBM:this.decodeRGBM,parallaxCorrected:!!this._environmentBox,alphaTest:this.alphaTest,doubleSided:this.doubleSided,metalnessChannel:this.metalnessChannel,roughnessChannel:this.roughnessChannel}),n=this.uniforms;this.uniforms=r.createUniforms(),this._shader=r;var i=this.uniforms;this._enabledUniforms=Object.keys(i);for(var a in n)i[a]&&(i[a].value=n[a].value);r.attached(),this._shaderDirty=!1},updateShader:function(e){this._shaderDirty&&(this._doUpdateShader(e),this._shaderDirty=!1)},attachShader:function(){},dispose:function(e,t){this._shader&&m(this._shader),jt.prototype.dispose.call(e,t)},clone:function(){var e=new Sr({name:this.name});return gr.forEach(function(t){this[t]&&(e[t]=this[t])},this),yr.concat(xr).forEach(function(t){e[t]=this[t]},this),e}});yr.forEach(function(e){Object.defineProperty(Sr.prototype,e,{get:function(){return this.get(e)},set:function(t){var r=this.uniforms=this.uniforms||{};r[e]=r[e]||{value:null},this.setUniform(e,t)}})}),gr.forEach(function(e){Object.defineProperty(Sr.prototype,e,{get:function(){return this.get(e)},set:function(t){var r=this.uniforms=this.uniforms||{};r[e]=r[e]||{value:null};var n=this.get(e);this.setUniform(e,t),!n!=!t&&(this._shaderDirty=!0)}})}),xr.forEach(function(e){var t="_"+e;Object.defineProperty(Sr.prototype,e,{get:function(){return this[t]},set:function(e){var r=this[t];this[t]=e,r!==e&&(this._shaderDirty=!0)}})}),Object.defineProperty(Sr.prototype,"environmentBox",{get:function(){var e=this._environmentBox;return e&&(e.min.setArray(this.get("environmentBoxMin")),e.max.setArray(this.get("environmentBoxMax"))),e},set:function(e){var t=this._environmentBox;this._environmentBox=e;var r=this.uniforms=this.uniforms||{};r.environmentBoxMin=r.environmentBoxMin||{value:null},r.environmentBoxMax=r.environmentBoxMax||{value:null},e&&(this.setUniform("environmentBoxMin",e.min._array),this.setUniform("environmentBoxMax",e.max._array)),t!==e&&(this._shaderDirty=!0)}}),Object.defineProperty(Sr.prototype,"shader",{get:function(){return this._shader},set:function(){console.warn("StandardMaterial can't change shader")}});var Ar,Nr=0,wr=null,Mr=!0,Rr=function(){this.triangleCount=0,this.vertexCount=0,this.drawCallCount=0},Cr=fr.extend({material:null,geometry:null,mode:rt.TRIANGLES,_drawCache:null,_renderInfo:null},function(){this._drawCache={},this._renderInfo=new Rr},{renderOrder:0,lineWidth:1,culling:!0,cullFace:rt.BACK,frontFace:rt.CCW,frustumCulling:!0,receiveShadow:!0,castShadow:!0,ignorePicking:!1,ignorePreZ:!1,ignoreGBuffer:!1,isRenderable:function(){return this.geometry&&this.material&&!this.invisible&&this.geometry.vertexCount>0},beforeRender:function(e){},afterRender:function(e,t){},getBoundingBox:function(e,t){return t=fr.prototype.getBoundingBox.call(this,e,t),this.geometry&&this.geometry.boundingBox&&t.union(this.geometry.boundingBox),t},render:function(e,t){var r=e.gl,t=t||this.material.shader,n=this.geometry,i=this.mode,a=n.vertexCount,o=n.isUseIndices(),s=e.getGLExtension("OES_element_index_uint"),u=s&&a>65535,l=u?r.UNSIGNED_INT:r.UNSIGNED_SHORT,c=e.getGLExtension("OES_vertex_array_object"),h=!n.dynamic,f=this._renderInfo;f.vertexCount=a,f.triangleCount=0,f.drawCallCount=0;var d=!1;if(Ar=e.__GUID__+"-"+n.__GUID__+"-"+t.__GUID__,Ar!==Nr?d=!0:(a>65535&&!s&&o||c&&h||n._cache.isDirty())&&(d=!0),Nr=Ar,d){var _=this._drawCache[Ar];if(!_){var p=n.getBufferChunks(e);if(!p)return;_=[];for(var m=0;m<p.length;m++){for(var g=p[m],y=g.attributeBuffers,x=g.indicesBuffer,T=[],E=[],b=0;b<y.length;b++){var S,A=y[b],N=A.name,w=A.semantic;if(w){var M=t.attribSemantics[w];S=M&&M.symbol}else S=N;S&&t.attributeTemplates[S]&&(T.push(A),E.push(S))}var R=new v(T,E,x);_.push(R)}h&&(this._drawCache[Ar]=_)}for(var C=0;C<_.length;C++){var R=_[C],L=!0;c&&h&&(null==R.vao?R.vao=c.createVertexArrayOES():L=!1,c.bindVertexArrayOES(R.vao));var T=R.availableAttributes,x=R.indicesBuffer;if(L)for(var D=t.enableAttributes(e,R.availableAttributeSymbols,c&&h&&R.vao),b=0;b<T.length;b++){var P=D[b];if(-1!==P){var I,A=T[b],O=A.buffer,F=A.size;switch(A.type){case"float":I=r.FLOAT;break;case"byte":I=r.BYTE;break;case"ubyte":I=r.UNSIGNED_BYTE;break;case"short":I=r.SHORT;break;case"ushort":I=r.UNSIGNED_SHORT;break;default:I=r.FLOAT}r.bindBuffer(r.ARRAY_BUFFER,O),r.vertexAttribPointer(P,F,I,!1,0,0)}}i!=rt.LINES&&i!=rt.LINE_STRIP&&i!=rt.LINE_LOOP||r.lineWidth(this.lineWidth),wr=x,Mr=n.isUseIndices(),Mr?(L&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,x.buffer),r.drawElements(i,x.count,l,0),f.triangleCount+=x.count/3):r.drawArrays(i,0,a),c&&h&&c.bindVertexArrayOES(null),f.drawCallCount++}}else Mr?(r.drawElements(i,wr.count,l,0),f.triangleCount=wr.count/3):r.drawArrays(i,0,a),f.drawCallCount=1;return f},clone:function(){var e=["castShadow","receiveShadow","mode","culling","cullFace","frontFace","frustumCulling"];return function(){var t=fr.prototype.clone.call(this);t.geometry=this.geometry,t.material=this.material;for(var r=0;r<e.length;r++){var n=e[r];t[n]!==this[n]&&(t[n]=this[n])}return t}}()});Cr.beforeFrame=function(){Nr=0},Cr.POINTS=rt.POINTS,Cr.LINES=rt.LINES,Cr.LINE_LOOP=rt.LINE_LOOP,Cr.LINE_STRIP=rt.LINE_STRIP,Cr.TRIANGLES=rt.TRIANGLES,Cr.TRIANGLE_STRIP=rt.TRIANGLE_STRIP,Cr.TRIANGLE_FAN=rt.TRIANGLE_FAN,Cr.BACK=rt.BACK,Cr.FRONT=rt.FRONT,Cr.FRONT_AND_BACK=rt.FRONT_AND_BACK,Cr.CW=rt.CW,Cr.CCW=rt.CCW,Cr.RenderInfo=Rr;var Lr={};Lr.isPowerOfTwo=function(e){return 0==(e&e-1)},Lr.nextPowerOfTwo=function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e},Lr.nearestPowerOfTwo=function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))};var Dr=Lr.isPowerOfTwo,Pr=Vt.extend(function(){return{image:null,pixels:null,mipmaps:[]}},{update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),this.updateCommon(e);var r=this.format,n=this.type;t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,this.getAvailableWrapS()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,this.getAvailableWrapT()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,this.getAvailableMagFilter()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,this.getAvailableMinFilter());var i=e.getGLExtension("EXT_texture_filter_anisotropic");if(i&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_2D,i.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===n){e.getGLExtension("OES_texture_half_float")||(n=rt.FLOAT)}if(this.mipmaps.length)for(var a=this.width,o=this.height,s=0;s<this.mipmaps.length;s++){var u=this.mipmaps[s];this._updateTextureData(t,u,s,a,o,r,n),a/=2,o/=2}else this._updateTextureData(t,this,0,this.width,this.height,r,n),this.useMipmap&&!this.NPOT&&t.generateMipmap(t.TEXTURE_2D);t.bindTexture(t.TEXTURE_2D,null)},_updateTextureData:function(e,t,r,n,i,a,o){t.image?e.texImage2D(e.TEXTURE_2D,r,a,a,o,t.image):a<=Vt.COMPRESSED_RGBA_S3TC_DXT5_EXT&&a>=Vt.COMPRESSED_RGB_S3TC_DXT1_EXT?e.compressedTexImage2D(e.TEXTURE_2D,r,a,n,i,0,t.pixels):e.texImage2D(e.TEXTURE_2D,r,a,n,i,0,a,o,t.pixels)},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_2D))},isPowerOfTwo:function(){var e,t;return this.image?(e=this.image.width,t=this.image.height):(e=this.width,t=this.height),Dr(e)&&Dr(t)},isRenderable:function(){return this.image?"CANVAS"===this.image.nodeName||"VIDEO"===this.image.nodeName||this.image.complete:!(!this.width||!this.height)},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,null)},load:function(e,t){var r=new Image;t&&(r.crossOrigin=t);var n=this;return r.onload=function(){n.dirty(),n.trigger("success",n),r.onload=null},r.onerror=function(){n.trigger("error",n),r.onerror=null},r.src=e,this.image=r,this}});Object.defineProperty(Pr.prototype,"width",{get:function(){return this.image?this.image.width:this._width},set:function(e){this.image?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}}),Object.defineProperty(Pr.prototype,"height",{get:function(){return this.image?this.image.height:this._height},set:function(e){this.image?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}});var Ir=Cr.extend({skeleton:null,joints:null,useSkinMatricesTexture:!1},function(){this.joints||(this.joints=[])},{isSkinnedMesh:function(){return!(!this.skeleton||!this.material.shader.isDefined("vertex","SKINNING"))},render:function(e,t){var r=e.gl;if(t=t||this.material.shader,this.skeleton){this.skeleton.update();var n=this.skeleton.getSubSkinMatrices(this.__GUID__,this.joints);if(this.useSkinMatricesTexture){var i,a=this.joints.length;i=a>256?64:a>64?32:a>16?16:8;var o=this.getSkinMatricesTexture();o.width=i,o.height=i,o.pixels&&o.pixels.length===i*i*4||(o.pixels=new Float32Array(i*i*4)),o.pixels.set(n),o.dirty(),t.setUniform(r,"1f","skinMatricesTextureSize",i)}else t.setUniformOfSemantic(r,"SKIN_MATRIX",n)}return Cr.prototype.render.call(this,e,t)},getSkinMatricesTexture:function(){return this._skinMatricesTexture=this._skinMatricesTexture||new Pr({type:rt.FLOAT,minFilter:rt.NEAREST,magFilter:rt.NEAREST,useMipmap:!1,flipY:!1}),this._skinMatricesTexture}});Ir.POINTS=rt.POINTS,Ir.LINES=rt.LINES,Ir.LINE_LOOP=rt.LINE_LOOP,Ir.LINE_STRIP=rt.LINE_STRIP,Ir.TRIANGLES=rt.TRIANGLES,Ir.TRIANGLE_STRIP=rt.TRIANGLE_STRIP,Ir.TRIANGLE_FAN=rt.TRIANGLE_FAN,Ir.BACK=rt.BACK,Ir.FRONT=rt.FRONT,Ir.FRONT_AND_BACK=rt.FRONT_AND_BACK,Ir.CW=rt.CW,Ir.CCW=rt.CCW;var Or=$e.extend({name:"",index:-1,node:null,rootNode:null}),Fr=ot.quat,kr=ot.vec3,Br=ot.mat4,Ur=$e.extend(function(){return{relativeRootNode:null,name:"",joints:[],_clips:[],_invBindPoseMatricesArray:null,_jointMatricesSubArrays:[],_skinMatricesArray:null,_skinMatricesSubArrays:[],_subSkinMatricesArray:{}}},{addClip:function(e,t){for(var r=0;r<this._clips.length;r++)if(this._clips[r].clip===e)return;for(var n=[],r=0;r<this.joints.length;r++)n[r]=-1;for(var r=0;r<e.tracks.length;r++)for(var i=0;i<this.joints.length;i++){var a=this.joints[i],o=e.tracks[r],s=a.name;if(t&&(s=t[s]),o.name===s){n[i]=r;break}}return this._clips.push({maps:n,clip:e}),this._clips.length-1},removeClip:function(e){for(var t=-1,r=0;r<this._clips.length;r++)if(this._clips[r].clip===e){t=r;break}t>0&&this._clips.splice(t,1)},removeClipsAll:function(){this._clips=[]},getClip:function(e){if(this._clips[e])return this._clips[e].clip},getClipNumber:function(){return this._clips.length},updateJointMatrices:function(){var e=Br.create();return function(){this._invBindPoseMatricesArray=new Float32Array(16*this.joints.length),this._skinMatricesArray=new Float32Array(16*this.joints.length);for(var t=0;t<this.joints.length;t++){var r=this.joints[t];Br.copy(e,r.node.worldTransform._array),Br.invert(e,e);for(var n=16*t,i=0;i<16;i++)this._invBindPoseMatricesArray[n+i]=e[i]}this.updateMatricesSubArrays()}}(),setJointMatricesArray:function(e){this._invBindPoseMatricesArray=e,this._skinMatricesArray=new Float32Array(e.length),this.updateMatricesSubArrays()},updateMatricesSubArrays:function(){for(var e=0;e<this.joints.length;e++)this._jointMatricesSubArrays[e]=this._invBindPoseMatricesArray.subarray(16*e,16*(e+1)),this._skinMatricesSubArrays[e]=this._skinMatricesArray.subarray(16*e,16*(e+1))},update:function(){return function(){for(var e=0;e<this.joints.length;e++){var t=this.joints[e];Br.multiply(this._skinMatricesSubArrays[e],t.node.worldTransform._array,this._jointMatricesSubArrays[e])}}}(),getSubSkinMatrices:function(e,t){var r=this._subSkinMatricesArray[e];r||(r=this._subSkinMatricesArray[e]=new Float32Array(16*t.length));for(var n=0,i=0;i<t.length;i++)for(var a=t[i],o=0;o<16;o++)r[n++]=this._skinMatricesArray[16*a+o];return r},setPose:function(e){if(this._clips[e])for(var t=this._clips[e].clip,r=this._clips[e].maps,n=0;n<this.joints.length;n++){var i=this.joints[n];if(-1!==r[n]){
var a=t.tracks[r[n]];a.channels.position&&kr.copy(i.node.position._array,a.position),a.channels.rotation&&Fr.copy(i.node.rotation._array,a.rotation),a.channels.scale&&kr.copy(i.node.scale._array,a.scale),i.node.position._dirty=!0,i.node.rotation._dirty=!0,i.node.scale._dirty=!0}}this.update()},clone:function(e,t){var r=new Ur;r.name=this.name;for(var n=0;n<this.joints.length;n++){var i=new Or;i.name=this.joints[n].name,i.index=this.joints[n].index;var a=this.joints[n].node.getPath(e),o=this.joints[n].rootNode.getPath(e);null!=a&&null!=o?i.node=t.queryNode(a):console.warn("Something wrong in clone, may be the skeleton root nodes is not mounted on the cloned root node."),r.joints.push(i)}if(this._invBindPoseMatricesArray){var s=this._invBindPoseMatricesArray.length;r._invBindPoseMatricesArray=new Float32Array(s);for(var n=0;n<s;n++)r._invBindPoseMatricesArray[n]=this._invBindPoseMatricesArray[n];r._skinMatricesArray=new Float32Array(s),r.updateMatricesSubArrays()}return r.update(),r}}),Hr=ot.vec3,zr=ot.mat4,Gr=ot.vec4,qr=function(e,t){this.normal=e||new ut(0,1,0),this.distance=t||0};qr.prototype={constructor:qr,distanceToPoint:function(e){return Hr.dot(e._array,this.normal._array)-this.distance},projectPoint:function(e,t){t||(t=new ut);var r=this.distanceToPoint(e);return Hr.scaleAndAdd(t._array,e._array,this.normal._array,-r),t._dirty=!0,t},normalize:function(){var e=1/Hr.len(this.normal._array);Hr.scale(this.normal._array,e),this.distance*=e},intersectFrustum:function(e){for(var t=e.vertices,r=this.normal._array,n=Hr.dot(t[0]._array,r)>this.distance,i=1;i<8;i++)if(Hr.dot(t[i]._array,r)>this.distance!=n)return!0},intersectLine:function(){var e=Hr.create();return function(t,r,n){var i=this.distanceToPoint(t),a=this.distanceToPoint(r);if(i>0&&a>0||i<0&&a<0)return null;var o=this.normal._array,s=this.distance,u=t._array;Hr.sub(e,r._array,t._array),Hr.normalize(e,e);var l=Hr.dot(o,e);if(0===l)return null;n||(n=new ut);var c=(Hr.dot(o,u)-s)/l;return Hr.scaleAndAdd(n._array,u,e,-c),n._dirty=!0,n}}(),applyTransform:function(){var e=zr.create(),t=Gr.create(),r=Gr.create();return r[3]=1,function(n){n=n._array,Hr.scale(r,this.normal._array,this.distance),Gr.transformMat4(r,r,n),this.distance=Hr.dot(r,this.normal._array),zr.invert(e,n),zr.transpose(e,e),t[3]=0,Hr.copy(t,this.normal._array),Gr.transformMat4(t,t,e),Hr.copy(this.normal._array,t)}}(),copy:function(e){Hr.copy(this.normal._array,e.normal._array),this.normal._dirty=!0,this.distance=e.distance},clone:function(){var e=new qr;return e.copy(this),e}};var Wr=ot.vec3,Vr=Wr.set,jr=Wr.copy,Xr=Wr.transformMat4,Kr=Math.min,Yr=Math.max,Zr=function(){this.planes=[];for(var e=0;e<6;e++)this.planes.push(new qr);this.boundingBox=new vt,this.vertices=[];for(var e=0;e<8;e++)this.vertices[e]=Wr.fromValues(0,0,0)};Zr.prototype={setFromProjection:function(e){var t=this.planes,r=e._array,n=r[0],i=r[1],a=r[2],o=r[3],s=r[4],u=r[5],l=r[6],c=r[7],h=r[8],f=r[9],d=r[10],_=r[11],p=r[12],m=r[13],v=r[14],g=r[15];Vr(t[0].normal._array,o-n,c-s,_-h),t[0].distance=-(g-p),t[0].normalize(),Vr(t[1].normal._array,o+n,c+s,_+h),t[1].distance=-(g+p),t[1].normalize(),Vr(t[2].normal._array,o+i,c+u,_+f),t[2].distance=-(g+m),t[2].normalize(),Vr(t[3].normal._array,o-i,c-u,_-f),t[3].distance=-(g-m),t[3].normalize(),Vr(t[4].normal._array,o-a,c-l,_-d),t[4].distance=-(g-v),t[4].normalize(),Vr(t[5].normal._array,o+a,c+l,_+d),t[5].distance=-(g+v),t[5].normalize();var y=this.boundingBox;if(0===g){var x=u/n,T=-v/(d-1),E=-v/(d+1),b=-E/u,S=-T/u;y.min.set(-b*x,-b,E),y.max.set(b*x,b,T);var A=this.vertices;Vr(A[0],-b*x,-b,E),Vr(A[1],-b*x,b,E),Vr(A[2],b*x,-b,E),Vr(A[3],b*x,b,E),Vr(A[4],-S*x,-S,T),Vr(A[5],-S*x,S,T),Vr(A[6],S*x,-S,T),Vr(A[7],S*x,S,T)}else{var N=(-1-p)/n,w=(1-p)/n,M=(1-m)/u,R=(-1-m)/u,C=(-1-v)/d,L=(1-v)/d;y.min.set(Math.min(N,w),Math.min(R,M),Math.min(L,C)),y.max.set(Math.max(w,N),Math.max(M,R),Math.max(C,L));var D=y.min._array,P=y.max._array,A=this.vertices;Vr(A[0],D[0],D[1],D[2]),Vr(A[1],D[0],P[1],D[2]),Vr(A[2],P[0],D[1],D[2]),Vr(A[3],P[0],P[1],D[2]),Vr(A[4],D[0],D[1],P[2]),Vr(A[5],D[0],P[1],P[2]),Vr(A[6],P[0],D[1],P[2]),Vr(A[7],P[0],P[1],P[2])}},getTransformedBoundingBox:function(){var e=Wr.create();return function(t,r){var n=this.vertices,i=r._array,a=t.min,o=t.max,s=a._array,u=o._array,l=n[0];Xr(e,l,i),jr(s,e),jr(u,e);for(var c=1;c<8;c++)l=n[c],Xr(e,l,i),s[0]=Kr(e[0],s[0]),s[1]=Kr(e[1],s[1]),s[2]=Kr(e[2],s[2]),u[0]=Yr(e[0],u[0]),u[1]=Yr(e[1],u[1]),u[2]=Yr(e[2],u[2]);return a._dirty=!0,o._dirty=!0,t}}()};var Qr=ot.vec3,Jr=function(e,t){this.origin=e||new ut,this.direction=t||new ut};Jr.prototype={constructor:Jr,intersectPlane:function(e,t){var r=e.normal._array,n=e.distance,i=this.origin._array,a=this.direction._array,o=Qr.dot(r,a);if(0===o)return null;t||(t=new ut);var s=(Qr.dot(r,i)-n)/o;return Qr.scaleAndAdd(t._array,i,a,-s),t._dirty=!0,t},mirrorAgainstPlane:function(e){var t=Qr.dot(e.normal._array,this.direction._array);Qr.scaleAndAdd(this.direction._array,this.direction._array,e.normal._array,2*-t),this.direction._dirty=!0},distanceToPoint:function(){var e=Qr.create();return function(t){Qr.sub(e,t,this.origin._array);var r=Qr.dot(e,this.direction._array);if(r<0)return Qr.distance(this.origin._array,t);var n=Qr.lenSquared(e);return Math.sqrt(n-r*r)}}(),intersectSphere:function(){var e=Qr.create();return function(t,r,n){var i=this.origin._array,a=this.direction._array;t=t._array,Qr.sub(e,t,i);var o=Qr.dot(e,a),s=Qr.squaredLength(e),u=s-o*o,l=r*r;if(!(u>l)){var c=Math.sqrt(l-u),h=o-c,f=o+c;return n||(n=new ut),h<0?f<0?null:(Qr.scaleAndAdd(n._array,i,a,f),n):(Qr.scaleAndAdd(n._array,i,a,h),n)}}}(),intersectBoundingBox:function(e,t){var r,n,i,a,o,s,u=this.direction._array,l=this.origin._array,c=e.min._array,h=e.max._array,f=1/u[0],d=1/u[1],_=1/u[2];if(f>=0?(r=(c[0]-l[0])*f,n=(h[0]-l[0])*f):(n=(c[0]-l[0])*f,r=(h[0]-l[0])*f),d>=0?(i=(c[1]-l[1])*d,a=(h[1]-l[1])*d):(a=(c[1]-l[1])*d,i=(h[1]-l[1])*d),r>a||i>n)return null;if((i>r||r!==r)&&(r=i),(a<n||n!==n)&&(n=a),_>=0?(o=(c[2]-l[2])*_,s=(h[2]-l[2])*_):(s=(c[2]-l[2])*_,o=(h[2]-l[2])*_),r>s||o>n)return null;if((o>r||r!==r)&&(r=o),(s<n||n!==n)&&(n=s),n<0)return null;var p=r>=0?r:n;return t||(t=new ut),Qr.scaleAndAdd(t._array,l,u,p),t},intersectTriangle:function(){var e=Qr.create(),t=Qr.create(),r=Qr.create(),n=Qr.create();return function(i,a,o,s,u,l){var c=this.direction._array,h=this.origin._array;i=i._array,a=a._array,o=o._array,Qr.sub(e,a,i),Qr.sub(t,o,i),Qr.cross(n,t,c);var f=Qr.dot(e,n);if(s){if(f>-1e-5)return null}else if(f>-1e-5&&f<1e-5)return null;Qr.sub(r,h,i);var d=Qr.dot(n,r)/f;if(d<0||d>1)return null;Qr.cross(n,e,r);var _=Qr.dot(c,n)/f;if(_<0||_>1||d+_>1)return null;Qr.cross(n,e,t);var p=-Qr.dot(r,n)/f;return p<0?null:(u||(u=new ut),l&&ut.set(l,1-d-_,d,_),Qr.scaleAndAdd(u._array,h,c,p),u)}}(),applyTransform:function(e){ut.add(this.direction,this.direction,this.origin),ut.transformMat4(this.origin,this.origin,e),ut.transformMat4(this.direction,this.direction,e),ut.sub(this.direction,this.direction,this.origin),ut.normalize(this.direction,this.direction)},copy:function(e){ut.copy(this.origin,e.origin),ut.copy(this.direction,e.direction)},clone:function(){var e=new Jr;return e.copy(this),e}};var $r=ot.vec3,en=ot.vec4,tn=fr.extend(function(){return{projectionMatrix:new Et,invProjectionMatrix:new Et,viewMatrix:new Et,frustum:new Zr}},function(){this.update(!0)},{update:function(e){fr.prototype.update.call(this,e),Et.invert(this.viewMatrix,this.worldTransform),this.updateProjectionMatrix(),Et.invert(this.invProjectionMatrix,this.projectionMatrix),this.frustum.setFromProjection(this.projectionMatrix)},setViewMatrix:function(e){Et.copy(this.viewMatrix,e),Et.invert(this.worldTransform,e),this.decomposeWorldTransform()},decomposeProjectionMatrix:function(){},setProjectionMatrix:function(e){Et.copy(this.projectionMatrix,e),Et.invert(this.invProjectionMatrix,e),this.decomposeProjectionMatrix()},updateProjectionMatrix:function(){},castRay:function(){var e=en.create();return function(t,r){var n=void 0!==r?r:new Jr,i=t._array[0],a=t._array[1];return en.set(e,i,a,-1,1),en.transformMat4(e,e,this.invProjectionMatrix._array),en.transformMat4(e,e,this.worldTransform._array),$r.scale(n.origin._array,e,1/e[3]),en.set(e,i,a,1,1),en.transformMat4(e,e,this.invProjectionMatrix._array),en.transformMat4(e,e,this.worldTransform._array),$r.scale(e,e,1/e[3]),$r.sub(n.direction._array,e,n.origin._array),$r.normalize(n.direction._array,n.direction._array),n.direction._dirty=!0,n.origin._dirty=!0,n}}()}),rn=tn.extend({fov:50,aspect:1,near:.1,far:2e3},{updateProjectionMatrix:function(){var e=this.fov/180*Math.PI;this.projectionMatrix.perspective(e,this.aspect,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix._array,t=2*Math.atan(1/e[5]);this.fov=t/Math.PI*180,this.aspect=e[5]/e[0],this.near=e[14]/(e[10]-1),this.far=e[14]/(e[10]+1)},clone:function(){var e=tn.prototype.clone.call(this);return e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e}}),nn=tn.extend({left:-1,right:1,near:-1,far:1,top:1,bottom:-1},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix._array;this.left=(-1-e[12])/e[0],this.right=(1-e[12])/e[0],this.top=(1-e[13])/e[5],this.bottom=(-1-e[13])/e[5],this.near=-(-1-e[14])/e[10],this.far=-(1-e[14])/e[10]},clone:function(){var e=tn.prototype.clone.call(this);return e.left=this.left,e.right=this.right,e.near=this.near,e.far=this.far,e.top=this.top,e.bottom=this.bottom,e}}),an={linear:function(e){return e},quadraticIn:function(e){return e*e},quadraticOut:function(e){return e*(2-e)},quadraticInOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)},cubicIn:function(e){return e*e*e},cubicOut:function(e){return--e*e*e+1},cubicInOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)},quarticIn:function(e){return e*e*e*e},quarticOut:function(e){return 1- --e*e*e*e},quarticInOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)},quinticIn:function(e){return e*e*e*e*e},quinticOut:function(e){return--e*e*e*e*e+1},quinticInOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)},sinusoidalIn:function(e){return 1-Math.cos(e*Math.PI/2)},sinusoidalOut:function(e){return Math.sin(e*Math.PI/2)},sinusoidalInOut:function(e){return.5*(1-Math.cos(Math.PI*e))},exponentialIn:function(e){return 0===e?0:Math.pow(1024,e-1)},exponentialOut:function(e){return 1===e?1:1-Math.pow(2,-10*e)},exponentialInOut:function(e){return 0===e?0:1===e?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))},circularIn:function(e){return 1-Math.sqrt(1-e*e)},circularOut:function(e){return Math.sqrt(1- --e*e)},circularInOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)},elasticIn:function(e){var t,r=.1;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=.1):t=.4*Math.asin(1/r)/(2*Math.PI),-r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4))},elasticOut:function(e){var t,r=.1;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=.1):t=.4*Math.asin(1/r)/(2*Math.PI),r*Math.pow(2,-10*e)*Math.sin((e-t)*(2*Math.PI)/.4)+1)},elasticInOut:function(e){var t,r=.1;return 0===e?0:1===e?1:(!r||r<1?(r=1,t=.1):t=.4*Math.asin(1/r)/(2*Math.PI),(e*=2)<1?r*Math.pow(2,10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4)*-.5:r*Math.pow(2,-10*(e-=1))*Math.sin((e-t)*(2*Math.PI)/.4)*.5+1)},backIn:function(e){var t=1.70158;return e*e*((t+1)*e-t)},backOut:function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},backInOut:function(e){var t=2.5949095;return(e*=2)<1?e*e*((t+1)*e-t)*.5:.5*((e-=2)*e*((t+1)*e+t)+2)},bounceIn:function(e){return 1-an.bounceOut(1-e)},bounceOut:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},bounceInOut:function(e){return e<.5?.5*an.bounceIn(2*e):.5*an.bounceOut(2*e-1)+.5}},on=function(e){e=e||{},this.name=e.name||"",this.target=e.target,this.life=e.life||1e3,this.delay=e.delay||0,this.gap=e.gap||0,this.playbackRate=e.playbackRate||1,this._initialized=!1,this._elapsedTime=0,this._loop=null!=e.loop&&e.loop,this.setLoop(this._loop),null!=e.easing&&this.setEasing(e.easing),this.onframe=e.onframe||g,this.onfinish=e.onfinish||g,this.onrestart=e.onrestart||g,this._paused=!1};on.prototype={gap:0,life:0,delay:0,setLoop:function(e){this._loop=e,e&&(this._loopRemained="number"==typeof e?e:1e8)},setEasing:function(e){"string"==typeof e&&(e=an[e]),this.easing=e},step:function(e,t,r){if(this._initialized||(this._startTime=e+this.delay,this._initialized=!0),null!=this._currentTime&&(t=e-this._currentTime),this._currentTime=e,this._paused)return"paused";if(!(e<this._startTime)){this._elapse(e,t);var n=Math.min(this._elapsedTime/this.life,1);if(!(n<0)){var i;return i=this.easing?this.easing(n):n,r||this.fire("frame",i),1===n?this._loop&&this._loopRemained>0?(this._restartInLoop(e),this._loopRemained--,"restart"):(this._needsRemove=!0,"finish"):null}}},setTime:function(e){return this.step(e+this._startTime)},restart:function(e){var t=0;e&&(this._elapse(e),t=this._elapsedTime%this.life),e=e||Date.now(),this._startTime=e-t+this.delay,this._elapsedTime=0,this._needsRemove=!1,this._paused=!1},getElapsedTime:function(){return this._elapsedTime},_restartInLoop:function(e){this._startTime=e+this.gap,this._elapsedTime=0},_elapse:function(e,t){this._elapsedTime+=t*this.playbackRate},fire:function(e,t){var r="on"+e;this[r]&&this[r](this.target,t)},clone:function(){var e=new this.constructor;return e.name=this.name,e._loop=this._loop,e._loopRemained=this._loopRemained,e.life=this.life,e.gap=this.gap,e.delay=this.delay,e},pause:function(){this._paused=!0},resume:function(){this._paused=!1}},on.prototype.constructor=on;var sn=ot.quat,un=ot.vec3,ln=function(e){e=e||{},on.call(this,e),this.tracks=e.tracks||[]};ln.prototype=Object.create(on.prototype),ln.prototype.constructor=ln,ln.prototype.step=function(e,t,r){var n=on.prototype.step.call(this,e,t,!0);if("finish"!==n){var e=this.getElapsedTime();this._range&&(e=this._range[0]+e),this.setTime(e)}return r||"paused"===n||this.fire("frame"),n},ln.prototype.setRange=function(e){this.calcLifeFromTracks(),this._range=e,e&&(e[1]=Math.min(e[1],this.life),e[0]=Math.min(e[0],this.life),this.life=e[1]-e[0])},ln.prototype.setTime=function(e){for(var t=0;t<this.tracks.length;t++)this.tracks[t].setTime(e)},ln.prototype.calcLifeFromTracks=function(){this.life=0;for(var e=0;e<this.tracks.length;e++)this.life=Math.max(this.life,this.tracks[e].getMaxTime())},ln.prototype.addTrack=function(e){this.tracks.push(e)},ln.prototype.removeTarck=function(e){var t=this.tracks.indexOf(e);t>=0&&this.tracks.splice(t,1)},ln.prototype.getSubClip=function(e,t,r){for(var n=new ln({name:this.name}),i=0;i<this.tracks.length;i++){var a=this.tracks[i].getSubTrack(e,t);n.addTrack(a)}return void 0!==r&&n.setLoop(r),n.life=t-e,n},ln.prototype.blend1D=function(e,t,r){for(var n=0;n<this.tracks.length;n++){var i=e.tracks[n],a=t.tracks[n];this.tracks[n].blend1D(i,a,r)}},ln.prototype.additiveBlend=function(e,t){for(var r=0;r<this.tracks.length;r++){var n=e.tracks[r],i=t.tracks[r];this.tracks[r].additiveBlend(n,i)}},ln.prototype.subtractiveBlend=function(e,t){for(var r=0;r<this.tracks.length;r++){var n=e.tracks[r],i=t.tracks[r];this.tracks[r].subtractiveBlend(n,i)}},ln.prototype.blend2D=function(e,t,r,n,i){for(var a=0;a<this.tracks.length;a++){var o=e.tracks[a],s=t.tracks[a],u=r.tracks[a];this.tracks[a].blend2D(o,s,u,n,i)}},ln.prototype.copy=function(e){for(var t=0;t<this.tracks.length;t++){var r=e.tracks[t],n=this.tracks[t];un.copy(n.position,r.position),un.copy(n.scale,r.scale),sn.copy(n.rotation,r.rotation)}},ln.prototype.clone=function(){for(var e=on.prototype.clone.call(this),t=0;t<this.tracks.length;t++)e.addTrack(this.tracks[t].clone());return e.life=this.life,e};var cn=ot.quat,hn=ot.vec3,fn=function(e){this.name=e.name||"",this.keyFrames=[],e.keyFrames&&this.addKeyFrames(e.keyFrames),this.position=hn.create(),this.rotation=cn.create(),this.scale=hn.fromValues(1,1,1),this._cacheKey=0,this._cacheTime=0};fn.prototype=Object.create(on.prototype),fn.prototype.constructor=fn,fn.prototype.step=function(e,t,r){var n=on.prototype.step.call(this,e,t,!0);return"finish"!==n&&this.setTime(this.getElapsedTime()),r||"paused"===n||this.fire("frame"),n},fn.prototype.setTime=function(e){this._interpolateField(e,"position"),this._interpolateField(e,"rotation"),this._interpolateField(e,"scale")},fn.prototype.getMaxTime=function(){var e=this.keyFrames[this.keyFrames.length-1];return e?e.time:0},fn.prototype.addKeyFrame=function(e){for(var t=0;t<this.keyFrames.length-1;t++){var r=this.keyFrames[t],n=this.keyFrames[t+1];if(r.time<=e.time&&n.time>=e.time)return this.keyFrames.splice(t,0,e),t}this.life=e.time,this.keyFrames.push(e)},fn.prototype.addKeyFrames=function(e){for(var t=0;t<e.length;t++)this.keyFrames.push(e[t]);this.keyFrames.sort(y),this.life=this.keyFrames[this.keyFrames.length-1].time},fn.prototype._interpolateField=function(e,t){var r,n,i=this.keyFrames,a=i.length;if(i.length&&!(e<i[0].time||e>i[i.length-1].time)){if(e<this._cacheTime){for(var o=this._cacheKey>=a-1?a-1:this._cacheKey+1,s=o;s>=0;s--)if(i[s].time<=e&&i[s][t])r=i[s],this._cacheKey=s,this._cacheTime=e;else if(i[s][t]){n=i[s];break}}else for(var s=this._cacheKey;s<a;s++)if(i[s].time<=e&&i[s][t])r=i[s],this._cacheKey=s,this._cacheTime=e;else if(i[s][t]){n=i[s];break}if(r&&n){var u=(e-r.time)/(n.time-r.time);u=Math.max(Math.min(u,1),0),"rotation"===t?cn.slerp(this[t],r[t],n[t],u):hn.lerp(this[t],r[t],n[t],u)}else this._cacheKey=0,this._cacheTime=0}},fn.prototype.blend1D=function(e,t,r){hn.lerp(this.position,e.position,t.position,r),hn.lerp(this.scale,e.scale,t.scale,r),cn.slerp(this.rotation,e.rotation,t.rotation,r)},fn.prototype.blend2D=function(){var e=cn.create(),t=cn.create();return function(r,n,i,a,o){var s=1-a-o;this.position[0]=r.position[0]*s+n.position[0]*a+i.position[0]*o,this.position[1]=r.position[1]*s+n.position[1]*a+i.position[1]*o,this.position[2]=r.position[2]*s+n.position[2]*a+i.position[2]*o,this.scale[0]=r.scale[0]*s+n.scale[0]*a+i.scale[0]*o,this.scale[1]=r.scale[1]*s+n.scale[1]*a+i.scale[1]*o,this.scale[2]=r.scale[2]*s+n.scale[2]*a+i.scale[2]*o;var u=a+o;0===u?cn.copy(this.rotation,r.rotation):(cn.slerp(e,r.rotation,n.rotation,u),cn.slerp(t,r.rotation,c3.rotation,u),cn.slerp(this.rotation,e,t,o/u))}}(),fn.prototype.additiveBlend=function(e,t){hn.add(this.position,e.position,t.position),hn.add(this.scale,e.scale,t.scale),cn.multiply(this.rotation,t.rotation,e.rotation)},fn.prototype.subtractiveBlend=function(e,t){hn.sub(this.position,e.position,t.position),hn.sub(this.scale,e.scale,t.scale),cn.invert(this.rotation,t.rotation),cn.multiply(this.rotation,this.rotation,e.rotation)},fn.prototype.getSubClip=function(e,t){console.warn("TODO")},fn.prototype.clone=function(){var e=fn.prototype.clone.call(this);return e.keyFrames=this.keyFrames,hn.copy(e.position,this.position),cn.copy(e.rotation,this.rotation),hn.copy(e.scale,this.scale),e};var dn=ot.quat,_n=ot.vec3,pn=function(e){e=e||{},this.name=e.name||"",this.target=e.target||null,this.position=_n.create(),this.rotation=dn.create(),this.scale=_n.fromValues(1,1,1),this.channels={time:null,position:null,rotation:null,scale:null},this._cacheKey=0,this._cacheTime=0};pn.prototype.setTime=function(e){if(this.channels.time){var t=this.channels,r=t.time.length,n=-1;if(1===r)return t.rotation&&dn.copy(this.rotation,t.rotation),t.position&&_n.copy(this.position,t.position),void(t.scale&&_n.copy(this.scale,t.scale));if(e<=t.time[0])e=t.time[0],n=0;else if(e>=t.time[r-1])e=t.time[r-1],n=r-2;else if(e<this._cacheTime){for(var i=Math.min(r-1,this._cacheKey+1),a=i;a>=0;a--)if(t.time[a-1]<=e&&t.time[a]>e){n=a-1;break}}else for(var a=this._cacheKey;a<r-1;a++)if(t.time[a]<=e&&t.time[a+1]>e){n=a;break}if(n>-1){this._cacheKey=n,this._cacheTime=e;var o=n,s=n+1,u=t.time[o],l=t.time[s],c=l-u,h=0===c?0:(e-u)/c;t.rotation&&T(this.rotation,t.rotation,t.rotation,h,4*o,4*s),t.position&&x(this.position,t.position,t.position,h,3*o,3*s),t.scale&&x(this.scale,t.scale,t.scale,h,3*o,3*s)}n==r-2&&(this._cacheKey=0,this._cacheTime=0),this.updateTarget()}},pn.prototype.updateTarget=function(){var e=this.channels;this.target&&(e.position&&this.target.position.setArray(this.position),e.rotation&&this.target.rotation.setArray(this.rotation),e.scale&&this.target.scale.setArray(this.scale))},pn.prototype.getMaxTime=function(){return this.channels.time[this.channels.time.length-1]},pn.prototype.getSubTrack=function(e,t){var r=new pn({name:this.name}),n=this.channels.time[0];e=Math.min(Math.max(e,n),this.life),t=Math.min(Math.max(t,n),this.life);var i=this._findRange(e),a=this._findRange(t),o=a[0]-i[0]+1;0===i[1]&&0===a[1]&&(o-=1),this.channels.rotation&&(r.channels.rotation=new Float32Array(4*o)),this.channels.position&&(r.channels.position=new Float32Array(3*o)),this.channels.scale&&(r.channels.scale=new Float32Array(3*o)),this.channels.time&&(r.channels.time=new Float32Array(o)),this.setTime(e);for(var s=0;s<3;s++)r.channels.rotation[s]=this.rotation[s],r.channels.position[s]=this.position[s],r.channels.scale[s]=this.scale[s];r.channels.time[0]=0,r.channels.rotation[3]=this.rotation[3];for(var s=1;s<o-1;s++){for(var u,l=0;l<3;l++)u=i[0]+s,r.channels.rotation[4*s+l]=this.channels.rotation[4*u+l],r.channels.position[3*s+l]=this.channels.position[3*u+l],r.channels.scale[3*s+l]=this.channels.scale[3*u+l];r.channels.time[s]=this.channels.time[u]-e,r.channels.rotation[4*s+3]=this.channels.rotation[4*u+3]}this.setTime(t);for(var s=0;s<3;s++)r.channels.rotation[4*(o-1)+s]=this.rotation[s],r.channels.position[3*(o-1)+s]=this.position[s],r.channels.scale[3*(o-1)+s]=this.scale[s];return r.channels.time[o-1]=t-e,r.channels.rotation[4*(o-1)+3]=this.rotation[3],r.life=t-e,r},pn.prototype._findRange=function(e){for(var t=this.channels,r=t.time.length,n=-1,i=0;i<r-1;i++)t.time[i]<=e&&t.time[i+1]>e&&(n=i);var a=0;if(n>=0)var o=t.time[n],s=t.time[n+1],a=(e-o)/(s-o);return[n,a]},pn.prototype.blend1D=fn.prototype.blend1D,pn.prototype.blend2D=fn.prototype.blend2D,pn.prototype.additiveBlend=fn.prototype.additiveBlend,pn.prototype.subtractiveBlend=fn.prototype.subtractiveBlend,pn.prototype.clone=function(){var e=pn.prototype.clone.call(this);return e.channels={time:this.channels.time||null,position:this.channels.position||null,rotation:this.channels.rotation||null,scale:this.channels.scale||null},_n.copy(e.position,this.position),dn.copy(e.rotation,this.rotation),_n.copy(e.scale,this.scale),e.target=this.target,e.updateTarget(),e},b.prototype.clone=function(e){var t=new this.constructor(this.name,this.type,this.size,this.semantic);return e&&console.warn("todo"),t},S.prototype.constructor=new b,S.prototype.init=function(e){if(!this.value||this.value.length!=e*this.size){var t=E(this.type);this.value=new t(e*this.size)}},S.prototype.fromArray=function(e){var t,r=E(this.type);if(e[0]&&e[0].length){var n=0,i=this.size;t=new r(e.length*i);for(var a=0;a<e.length;a++)for(var o=0;o<i;o++)t[n++]=e[a][o]}else t=new r(e);this.value=t};var mn=$e.extend({boundingBox:null,attributes:{},indices:null,dynamic:!1},function(){this._cache=new At,this._attributeList=Object.keys(this.attributes)},{pickByRay:null,pick:null,mainAttribute:"position",dirty:w,createAttribute:w,removeAttribute:w,getTriangleIndices:w,setTriangleIndices:w,isUseIndices:w,getEnabledAttributes:w,getBufferChunks:w,generateVertexNormals:w,generateFaceNormals:w,isUniqueVertex:w,generateUniqueVertex:w,generateTangents:w,generateBarycentric:w,applyTransform:w,dispose:w});mn.STATIC_DRAW=rt.STATIC_DRAW,mn.DYNAMIC_DRAW=rt.DYNAMIC_DRAW,mn.STREAM_DRAW=rt.STREAM_DRAW,mn.AttributeBuffer=A,mn.IndicesBuffer=N,mn.Attribute=b,mn.StaticAttribute=S;var vn=ot.mat4,gn=ot.vec3,yn=mn.StaticAttribute,xn=gn.create,Tn=gn.add,En=gn.set,bn=mn.extend(function(){return{attributes:{position:new yn("position","float",3,"POSITION"),texcoord0:new yn("texcoord0","float",2,"TEXCOORD_0"),texcoord1:new yn("texcoord1","float",2,"TEXCOORD_1"),normal:new yn("normal","float",3,"NORMAL"),tangent:new yn("tangent","float",4,"TANGENT"),color:new yn("color","float",4,"COLOR"),weight:new yn("weight","float",3,"WEIGHT"),joint:new yn("joint","float",4,"JOINT"),barycentric:new yn("barycentric","float",3,null)},hint:rt.STATIC_DRAW,indices:null,_normalType:"vertex",_enabledAttributes:null}},{updateBoundingBox:function(){var e=this.boundingBox;e||(e=this.boundingBox=new vt);var t=this.attributes.position.value;if(t&&t.length){var r=e.min,n=e.max,i=r._array,a=n._array;gn.set(i,t[0],t[1],t[2]),gn.set(a,t[0],t[1],t[2]);for(var o=3;o<t.length;){var s=t[o++],u=t[o++],l=t[o++];s<i[0]&&(i[0]=s),u<i[1]&&(i[1]=u),l<i[2]&&(i[2]=l),s>a[0]&&(a[0]=s),u>a[1]&&(a[1]=u),l>a[2]&&(a[2]=l)}r._dirty=!0,n._dirty=!0}},dirty:function(){for(var e=this.getEnabledAttributes(),t=0;t<e.length;t++)this.dirtyAttribute(e[t]);this.dirtyIndices(),this._enabledAttributes=null},dirtyIndices:function(){this._cache.dirtyAll("indices")},dirtyAttribute:function(e){this._cache.dirtyAll(M(e)),this._cache.dirtyAll("attributes")},getTriangleIndices:function(e,t){if(e<this.triangleCount&&e>=0){t||(t=xn());var r=this.indices;return t[0]=r[3*e],t[1]=r[3*e+1],t[2]=r[3*e+2],t}},setTriangleIndices:function(e,t){var r=this.indices;r[3*e]=t[0],r[3*e+1]=t[1],r[3*e+2]=t[2]},isUseIndices:function(){return!!this.indices},initIndicesFromArray:function(e){var t,r=this.vertexCount>65535?at.Uint32Array:at.Uint16Array;if(e[0]&&e[0].length){var n=0;t=new r(3*e.length);for(var i=0;i<e.length;i++)for(var a=0;a<3;a++)t[n++]=e[i][a]}else t=new r(e);this.indices=t},createAttribute:function(e,t,r,n){var i=new yn(e,t,r,n);return this.attributes[e]&&this.removeAttribute(e),this.attributes[e]=i,this._attributeList.push(e),i},removeAttribute:function(e){var t=this._attributeList,r=t.indexOf(e);return r>=0&&(t.splice(r,1),delete this.attributes[e],!0)},getEnabledAttributes:function(){var e=this._enabledAttributes,t=this._attributeList;if(e)return e;for(var r=[],n=this.vertexCount,i=0;i<t.length;i++){var a=t[i],o=this.attributes[a];o.value&&o.value.length===n*o.size&&r.push(a)}return this._enabledAttributes=r,r},getBufferChunks:function(e){var t=this._cache;t.use(e.__GUID__);var r=t.isDirty("attributes"),n=t.isDirty("indices");if(r||n){this._updateBuffer(e.gl,r,n);for(var i=this.getEnabledAttributes(),a=0;a<i.length;a++)t.fresh(M(i[a]));t.fresh("attributes"),t.fresh("indices")}return t.get("chunks")},_updateBuffer:function(e,t,r){var n=this._cache,i=n.get("chunks"),a=!1;i||(i=[],i[0]={attributeBuffers:[],indicesBuffer:null},n.put("chunks",i),a=!0);var o=i[0],s=o.attributeBuffers,u=o.indicesBuffer;if(t||a){var l=this.getEnabledAttributes(),c={};if(!a)for(var h=0;h<s.length;h++)c[s[h].name]=s[h];for(var f=0;f<l.length;f++){var d,_=l[f],p=this.attributes[_];a||(d=c[_]);var m;m=d?d.buffer:e.createBuffer(),n.isDirty(M(_))&&(e.bindBuffer(e.ARRAY_BUFFER,m),e.bufferData(e.ARRAY_BUFFER,p.value,this.hint)),s[f]=new mn.AttributeBuffer(_,p.type,m,p.size,p.semantic)}for(var h=f;h<s.length;h++)e.deleteBuffer(s[h].buffer);s.length=f}this.isUseIndices()&&(r||a)&&(u||(u=new mn.IndicesBuffer(e.createBuffer()),o.indicesBuffer=u),u.count=this.indices.length,e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,u.buffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,this.indices,this.hint))},generateVertexNormals:function(){if(this.vertexCount){var e=this.indices,t=this.attributes,r=t.position.value,n=t.normal.value;if(n&&n.length===r.length)for(var i=0;i<n.length;i++)n[i]=0;else n=t.normal.value=new at.Float32Array(r.length);for(var a=xn(),o=xn(),s=xn(),u=xn(),l=xn(),c=xn(),h=0;h<e.length;){var f=e[h++],d=e[h++],_=e[h++];En(a,r[3*f],r[3*f+1],r[3*f+2]),En(o,r[3*d],r[3*d+1],r[3*d+2]),En(s,r[3*_],r[3*_+1],r[3*_+2]),gn.sub(u,a,o),gn.sub(l,o,s),gn.cross(c,u,l);for(var i=0;i<3;i++)n[3*f+i]=n[3*f+i]+c[i],n[3*d+i]=n[3*d+i]+c[i],n[3*_+i]=n[3*_+i]+c[i]}for(var i=0;i<n.length;)En(c,n[i],n[i+1],n[i+2]),gn.normalize(c,c),n[i++]=c[0],n[i++]=c[1],n[i++]=c[2];this.dirty()}},generateFaceNormals:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.indices,t=this.attributes,r=t.position.value,n=t.normal.value,i=xn(),a=xn(),o=xn(),s=xn(),u=xn(),l=xn();n||(n=t.normal.value=new Float32Array(r.length));for(var c=0;c<e.length;){var h=e[c++],f=e[c++],d=e[c++];En(i,r[3*h],r[3*h+1],r[3*h+2]),En(a,r[3*f],r[3*f+1],r[3*f+2]),En(o,r[3*d],r[3*d+1],r[3*d+2]),gn.sub(s,i,a),gn.sub(u,a,o),gn.cross(l,s,u),gn.normalize(l,l);for(var _=0;_<3;_++)n[3*h+_]=l[_],n[3*f+_]=l[_],n[3*d+_]=l[_]}this.dirty()}},generateTangents:function(){if(this.vertexCount){var e=this.vertexCount,t=this.attributes;t.tangent.value||(t.tangent.value=new Float32Array(4*e));var r=t.texcoord0.value,n=t.position.value,i=t.tangent.value,a=t.normal.value;if(!r)return void console.warn("Geometry without texcoords can't generate tangents.");for(var o=[],s=[],u=0;u<e;u++)o[u]=[0,0,0],s[u]=[0,0,0];for(var l=[0,0,0],c=[0,0,0],h=this.indices,u=0;u<h.length;){var f=h[u++],d=h[u++],_=h[u++],p=r[2*f],m=r[2*d],v=r[2*_],g=r[2*f+1],y=r[2*d+1],x=r[2*_+1],T=n[3*f],E=n[3*d],b=n[3*_],S=n[3*f+1],A=n[3*d+1],N=n[3*_+1],w=n[3*f+2],M=n[3*d+2],R=n[3*_+2],C=E-T,L=b-T,D=A-S,P=N-S,I=M-w,O=R-w,F=m-p,k=v-p,B=y-g,U=x-g,H=1/(F*U-B*k);l[0]=(U*C-B*L)*H,l[1]=(U*D-B*P)*H,l[2]=(U*I-B*O)*H,c[0]=(F*L-k*C)*H,c[1]=(F*P-k*D)*H,c[2]=(F*O-k*I)*H,Tn(o[f],o[f],l),Tn(o[d],o[d],l),Tn(o[_],o[_],l),Tn(s[f],s[f],c),Tn(s[d],s[d],c),Tn(s[_],s[_],c)}for(var z=xn(),G=xn(),q=xn(),u=0;u<e;u++){q[0]=a[3*u],q[1]=a[3*u+1],q[2]=a[3*u+2];var W=o[u];gn.scale(z,q,gn.dot(q,W)),gn.sub(z,W,z),gn.normalize(z,z),gn.cross(G,q,W),i[4*u]=z[0],i[4*u+1]=z[1],i[4*u+2]=z[2],i[4*u+3]=gn.dot(G,s[u])<0?-1:1}this.dirty()}},isUniqueVertex:function(){return!this.isUseIndices()||this.vertexCount===this.indices.length},generateUniqueVertex:function(){if(this.vertexCount){this.indices.length>65535&&(this.indices=new at.Uint32Array(this.indices));for(var e=this.attributes,t=this.indices,r=this.getEnabledAttributes(),n={},i=0;i<r.length;i++){var a=r[i];n[a]=e[a].value,e[a].init(this.indices.length)}for(var o=0,s=0;s<t.length;s++){for(var u=t[s],i=0;i<r.length;i++)for(var a=r[i],l=e[a].value,c=e[a].size,h=0;h<c;h++)l[o*c+h]=n[a][u*c+h];t[s]=o,o++}this.dirty()}},generateBarycentric:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.attributes,t=e.barycentric.value,r=this.indices;if(!t||t.length!==3*r.length){t=e.barycentric.value=new Float32Array(3*r.length);for(var n=0;n<r.length;)for(var i=0;i<3;i++){var a=r[n++];t[3*a+i]=1}this.dirty()}}},applyTransform:function(e){var t=this.attributes,r=t.position.value,n=t.normal.value,i=t.tangent.value;e=e._array;var a=vn.create();vn.invert(a,e),vn.transpose(a,a);var o=gn.transformMat4,s=gn.forEach;s(r,3,0,null,o,e),n&&s(n,3,0,null,o,a),i&&s(i,4,0,null,o,a),this.boundingBox&&this.updateBoundingBox()},dispose:function(e){var t=this._cache;t.use(e.__GUID__);var r=t.get("chunks");if(r)for(var n=0;n<r.length;n++)for(var i=r[n],a=0;a<i.attributeBuffers.length;a++){var o=i.attributeBuffers[a];e.gl.deleteBuffer(o.buffer)}t.deleteContext(e.__GUID__)}});Object.defineProperty&&(Object.defineProperty(bn.prototype,"vertexCount",{enumerable:!1,get:function(){var e=this.attributes[this.mainAttribute];return e&&e.value?e.value.length/e.size:0}}),Object.defineProperty(bn.prototype,"triangleCount",{enumerable:!1,get:function(){var e=this.indices;return e?e.length/3:0}})),bn.Attribute=mn.StaticAttribute
;var Sn="@export qtek.basic.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n@import qtek.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvarying vec3 v_Barycentric;\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_Barycentric = barycentric;\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n}\n@end\n@export qtek.basic.fragment\nvarying vec2 v_Texcoord;\nuniform sampler2D diffuseMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\nvarying vec3 v_Barycentric;\n@import qtek.util.edge_factor\n@import qtek.util.rgbm\n@import qtek.util.srgb\nvoid main()\n{\n#ifdef RENDER_TEXCOORD\n    gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n    return;\n#endif\n    gl_FragColor = vec4(color, alpha);\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 tex = decodeHDR(texture2D(diffuseMap, v_Texcoord));\n#ifdef SRGB_DECODE\n    tex = sRGBToLinear(tex);\n#endif\n#if defined(DIFFUSEMAP_ALPHA_ALPHA)\n    gl_FragColor.a = tex.a;\n#endif\n    gl_FragColor.rgb *= tex.rgb;\n#endif\n    gl_FragColor.rgb += emission;\n    if( lineWidth > 0.)\n    {\n        gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n    }\n#ifdef GAMMA_ENCODE\n    gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1 / 2.2));\n#endif\n#ifdef ALPHA_TEST\n    if (gl_FragColor.a < alphaCutoff) {\n        discard;\n    }\n#endif\n    gl_FragColor = encodeHDR(gl_FragColor);\n}\n@end",An="@export qtek.skybox.vertex\nuniform mat4 world : WORLD;\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nvarying vec3 v_WorldPosition;\nvoid main()\n{\n    v_WorldPosition = (world * vec4(position, 1.0)).xyz;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end\n@export qtek.skybox.fragment\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform float lod: 0.0;\nvarying vec3 v_WorldPosition;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 viewDirection = normalize(v_WorldPosition - eyePos);\n    vec3 tex = decodeHDR(textureCubeLodEXT(environmentMap, viewDirection, lod)).rgb;\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n    gl_FragColor = encodeHDR(vec4(tex, 1.0));\n}\n@end",Nn="@export qtek.compositor.kernel.gaussian_9\nfloat gaussianKernel[9];\ngaussianKernel[0] = 0.07;\ngaussianKernel[1] = 0.09;\ngaussianKernel[2] = 0.12;\ngaussianKernel[3] = 0.14;\ngaussianKernel[4] = 0.16;\ngaussianKernel[5] = 0.14;\ngaussianKernel[6] = 0.12;\ngaussianKernel[7] = 0.09;\ngaussianKernel[8] = 0.07;\n@end\n@export qtek.compositor.kernel.gaussian_13\nfloat gaussianKernel[13];\ngaussianKernel[0] = 0.02;\ngaussianKernel[1] = 0.03;\ngaussianKernel[2] = 0.06;\ngaussianKernel[3] = 0.08;\ngaussianKernel[4] = 0.11;\ngaussianKernel[5] = 0.13;\ngaussianKernel[6] = 0.14;\ngaussianKernel[7] = 0.13;\ngaussianKernel[8] = 0.11;\ngaussianKernel[9] = 0.08;\ngaussianKernel[10] = 0.06;\ngaussianKernel[11] = 0.03;\ngaussianKernel[12] = 0.02;\n@end\n@export qtek.compositor.gaussian_blur\n#define SHADER_NAME gaussian_blur\nuniform sampler2D texture;varying vec2 v_Texcoord;\nuniform float blurSize : 2.0;\nuniform vec2 textureSize : [512.0, 512.0];\nuniform float blurDir : 0.0;\n@import qtek.util.rgbm\n@import qtek.util.clamp_sample\nvoid main (void)\n{\n    @import qtek.compositor.kernel.gaussian_9\n    vec2 off = blurSize / textureSize;\n    off *= vec2(1.0 - blurDir, blurDir);\n    vec4 sum = vec4(0.0);\n    float weightAll = 0.0;\n    for (int i = 0; i < 9; i++) {\n        float w = gaussianKernel[i];\n        vec4 texel = decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off));\n        sum += texel * w;\n        weightAll += w;\n    }\n    gl_FragColor = encodeHDR(sum / max(weightAll, 0.01));\n}\n@end\n",wn="@export qtek.compositor.output\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n    gl_FragColor.rgb = tex.rgb;\n#ifdef OUTPUT_ALPHA\n    gl_FragColor.a = tex.a;\n#else\n    gl_FragColor.a = 1.0;\n#endif\n    gl_FragColor = encodeHDR(gl_FragColor);\n#ifdef PREMULTIPLY_ALPHA\n    gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end",Mn="@export qtek.compositor.bright\nuniform sampler2D texture;\nuniform float threshold : 1;\nuniform float scale : 1.0;\nuniform vec2 textureSize: [512, 512];\nvarying vec2 v_Texcoord;\nconst vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);\n@import qtek.util.rgbm\nvec4 median(vec4 a, vec4 b, vec4 c)\n{\n    return a + b + c - min(min(a, b), c) - max(max(a, b), c);\n}\nvoid main()\n{\n    vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n#ifdef ANTI_FLICKER\n    vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);\n    vec4 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz));\n    vec4 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz));\n    vec4 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy));\n    vec4 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy));\n    texel = median(median(texel, s1, s2), s3, s4);\n#endif\n    float lum = dot(texel.rgb , lumWeight);\n    vec4 color;\n    if (lum > threshold && texel.a > 0.0)\n    {\n        color = vec4(texel.rgb * scale, texel.a * scale);\n    }\n    else\n    {\n        color = vec4(0.0);\n    }\n    gl_FragColor = encodeHDR(color);\n}\n@end\n",Rn="@export qtek.compositor.downsample\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nfloat brightness(vec3 c)\n{\n    return max(max(c.r, c.g), c.b);\n}\n@import qtek.util.clamp_sample\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n#ifdef ANTI_FLICKER\n    vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;\n    vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;\n    vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;\n    vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;\n    float s1w = 1.0 / (brightness(s1) + 1.0);\n    float s2w = 1.0 / (brightness(s2) + 1.0);\n    float s3w = 1.0 / (brightness(s3) + 1.0);\n    float s4w = 1.0 / (brightness(s4) + 1.0);\n    float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);\n    vec4 color = vec4(\n        (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,\n        1.0\n    );\n#else\n    vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n    color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n    color *= 0.25;\n#endif\n    gl_FragColor = encodeHDR(color);\n}\n@end",Cn="\n@export qtek.compositor.upsample\n#define HIGH_QUALITY\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.clamp_sample\nvoid main()\n{\n#ifdef HIGH_QUALITY\n    vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n    vec4 s;\n    s  = decodeHDR(clampSample(texture, v_Texcoord - d.xy));\n    s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord       )) * 4.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n    gl_FragColor = encodeHDR(s / 16.0);\n#else\n    vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n    vec4 s;\n    s  = decodeHDR(clampSample(texture, v_Texcoord + d.xy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));\n    s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));\n    gl_FragColor = encodeHDR(s / 4.0);\n#endif\n}\n@end",Ln="@export qtek.compositor.hdr.composite\nuniform sampler2D texture;\n#ifdef BLOOM_ENABLED\nuniform sampler2D bloom;\n#endif\n#ifdef LENSFLARE_ENABLED\nuniform sampler2D lensflare;\nuniform sampler2D lensdirt;\n#endif\n#ifdef LUM_ENABLED\nuniform sampler2D lum;\n#endif\n#ifdef LUT_ENABLED\nuniform sampler2D lut;\n#endif\n#ifdef COLOR_CORRECTION\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float saturation : 1.0;\n#endif\n#ifdef VIGNETTE\nuniform float vignetteDarkness: 1.0;\nuniform float vignetteOffset: 1.0;\n#endif\nuniform float exposure : 1.0;\nuniform float bloomIntensity : 0.25;\nuniform float lensflareIntensity : 1;\nvarying vec2 v_Texcoord;\n@import qtek.util.srgb\nvec3 ACESToneMapping(vec3 color)\n{\n    const float A = 2.51;\n    const float B = 0.03;\n    const float C = 2.43;\n    const float D = 0.59;\n    const float E = 0.14;\n    return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nfloat eyeAdaption(float fLum)\n{\n    return mix(0.2, fLum, 0.5);\n}\n#ifdef LUT_ENABLED\nvec3 lutTransform(vec3 color) {\n    float blueColor = color.b * 63.0;\n    vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n    vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n    vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n    vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);\n    vec4 newColor1 = texture2D(lut, texPos1);\n    vec4 newColor2 = texture2D(lut, texPos2);\n    vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    return newColor.rgb;\n}\n#endif\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 texel = vec4(0.0);\n    vec4 originalTexel = vec4(0.0);\n#ifdef TEXTURE_ENABLED\n    texel = decodeHDR(texture2D(texture, v_Texcoord));\n    originalTexel = texel;\n#endif\n#ifdef BLOOM_ENABLED\n    vec4 bloomTexel = decodeHDR(texture2D(bloom, v_Texcoord));\n    texel.rgb += bloomTexel.rgb * bloomIntensity;\n    texel.a += bloomTexel.a * bloomIntensity;\n#endif\n#ifdef LENSFLARE_ENABLED\n    texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;\n#endif\n    texel.a = min(texel.a, 1.0);\n#ifdef LUM_ENABLED\n    float fLum = texture2D(lum, vec2(0.5, 0.5)).r;\n    float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));\n    float exposureBias = adaptedLumDest * exposure;\n#else\n    float exposureBias = exposure;\n#endif\n    texel.rgb *= exposureBias;\n    texel.rgb = ACESToneMapping(texel.rgb);\n    texel = linearTosRGB(texel);\n#ifdef LUT_ENABLED\n    texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));\n#endif\n#ifdef COLOR_CORRECTION\n    texel.rgb = clamp(texel.rgb + vec3(brightness), 0.0, 1.0);\n    texel.rgb = clamp((texel.rgb - vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n    float lum = dot(texel.rgb, vec3(0.2125, 0.7154, 0.0721));\n    texel.rgb = mix(vec3(lum), texel.rgb, saturation);\n#endif\n#ifdef VIGNETTE\n    vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);\n    texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));\n#endif\n    gl_FragColor = encodeHDR(texel);\n#ifdef DEBUG\n    #if DEBUG == 1\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));\n    #elif DEBUG == 2\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity);\n    #elif DEBUG == 3\n    gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord) * lensflareIntensity));\n    #endif\n#endif\n    if (originalTexel.a <= 0.01) {\n        gl_FragColor.a = dot(gl_FragColor.rgb, vec3(0.2125, 0.7154, 0.0721));\n    }\n#ifdef PREMULTIPLY_ALPHA\n    gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n@end",Dn="@export qtek.compositor.blend\n#ifdef TEXTURE1_ENABLED\nuniform sampler2D texture1;\nuniform float weight1 : 1.0;\n#endif\n#ifdef TEXTURE2_ENABLED\nuniform sampler2D texture2;\nuniform float weight2 : 1.0;\n#endif\n#ifdef TEXTURE3_ENABLED\nuniform sampler2D texture3;\nuniform float weight3 : 1.0;\n#endif\n#ifdef TEXTURE4_ENABLED\nuniform sampler2D texture4;\nuniform float weight4 : 1.0;\n#endif\n#ifdef TEXTURE5_ENABLED\nuniform sampler2D texture5;\nuniform float weight5 : 1.0;\n#endif\n#ifdef TEXTURE6_ENABLED\nuniform sampler2D texture6;\nuniform float weight6 : 1.0;\n#endif\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 tex = vec4(0.0);\n#ifdef TEXTURE1_ENABLED\n    tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;\n#endif\n#ifdef TEXTURE2_ENABLED\n    tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;\n#endif\n#ifdef TEXTURE3_ENABLED\n    tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;\n#endif\n#ifdef TEXTURE4_ENABLED\n    tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;\n#endif\n#ifdef TEXTURE5_ENABLED\n    tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;\n#endif\n#ifdef TEXTURE6_ENABLED\n    tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;\n#endif\n    gl_FragColor = encodeHDR(tex);\n}\n@end",Pn="@export qtek.compositor.fxaa\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\nvarying vec2 v_Texcoord;\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\n@import qtek.util.rgbm\nvoid main()\n{\n    vec2 resolution = 1.0 / viewport.zw;\n    vec3 rgbNW =  decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;\n    vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;\n    vec4 rgbaM  = decodeHDR( texture2D( texture,  gl_FragCoord.xy  * resolution ) );\n    vec3 rgbM  = rgbaM.xyz;\n    float opacity  = rgbaM.w;\n    vec3 luma = vec3( 0.299, 0.587, 0.114 );\n    float lumaNW = dot( rgbNW, luma );\n    float lumaNE = dot( rgbNE, luma );\n    float lumaSW = dot( rgbSW, luma );\n    float lumaSE = dot( rgbSE, luma );\n    float lumaM  = dot( rgbM,  luma );\n    float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\n    float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n    float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\n    float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\n    dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\n          max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n                dir * rcpDirMin)) * resolution;\n    vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;\n    rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;\n    rgbA *= 0.5;\n    vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * -0.5 ) ).xyz;\n    rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy  * resolution + dir * 0.5 ) ).xyz;\n    rgbB *= 0.25;\n    rgbB += rgbA * 0.5;\n    float lumaB = dot( rgbB, luma );\n    if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )\n    {\n        gl_FragColor = vec4( rgbA, opacity );\n    }\n    else {\n        gl_FragColor = vec4( rgbB, opacity );\n    }\n}\n@end";Ut.import(Qt),Ut.import("\n@export qtek.util.rand\nhighp float rand(vec2 uv) {\n    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n    highp float dt = dot(uv.xy, vec2(a,b)), sn = mod(dt, 3.141592653589793);\n    return fract(sin(sn) * c);\n}\n@end\n@export qtek.util.calculate_attenuation\nuniform float attenuationFactor : 5.0;\nfloat lightAttenuation(float dist, float range)\n{\n    float attenuation = 1.0;\n    attenuation = dist*dist/(range*range+1.0);\n    float att_s = attenuationFactor;\n    attenuation = 1.0/(attenuation*att_s+1.0);\n    att_s = 1.0/(att_s+1.0);\n    attenuation = attenuation - att_s;\n    attenuation /= 1.0 - att_s;\n    return clamp(attenuation, 0.0, 1.0);\n}\n@end\n@export qtek.util.edge_factor\nfloat edgeFactor(float width)\n{\n    vec3 d = fwidth(v_Barycentric);\n    vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);\n    return min(min(a3.x, a3.y), a3.z);\n}\n@end\n@export qtek.util.encode_float\nvec4 encodeFloat(const in float depth)\n{\n    const vec4 bitShifts = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\n    const vec4 bit_mask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\n    vec4 res = fract(depth * bitShifts);\n    res -= res.xxyz * bit_mask;\n    return res;\n}\n@end\n@export qtek.util.decode_float\nfloat decodeFloat(const in vec4 color)\n{\n    const vec4 bitShifts = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);\n    return dot(color, bitShifts);\n}\n@end\n@export qtek.util.float\n@import qtek.util.encode_float\n@import qtek.util.decode_float\n@end\n@export qtek.util.rgbm_decode\nvec3 RGBMDecode(vec4 rgbm, float range) {\n  return range * rgbm.rgb * rgbm.a;\n}\n@end\n@export qtek.util.rgbm_encode\nvec4 RGBMEncode(vec3 color, float range) {\n    if (dot(color, color) == 0.0) {\n        return vec4(0.0);\n    }\n    vec4 rgbm;\n    color /= range;\n    rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6)), 0.0, 1.0);\n    rgbm.a = ceil(rgbm.a * 255.0) / 255.0;\n    rgbm.rgb = color / rgbm.a;\n    return rgbm;\n}\n@end\n@export qtek.util.rgbm\n@import qtek.util.rgbm_decode\n@import qtek.util.rgbm_encode\nvec4 decodeHDR(vec4 color)\n{\n#if defined(RGBM_DECODE) || defined(RGBM)\n    return vec4(RGBMDecode(color, 51.5), 1.0);\n#else\n    return color;\n#endif\n}\nvec4 encodeHDR(vec4 color)\n{\n#if defined(RGBM_ENCODE) || defined(RGBM)\n    return RGBMEncode(color.xyz, 51.5);\n#else\n    return color;\n#endif\n}\n@end\n@export qtek.util.srgb\nvec4 sRGBToLinear(in vec4 value) {\n    return vec4(mix(pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), value.rgb * 0.0773993808, vec3(lessThanEqual(value.rgb, vec3(0.04045)))), value.w);\n}\nvec4 linearTosRGB(in vec4 value) {\n    return vec4(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))), value.w);\n}\n@end\n@export qtek.chunk.skinning_header\n#ifdef SKINNING\nattribute vec3 weight : WEIGHT;\nattribute vec4 joint : JOINT;\n#ifdef USE_SKIN_MATRICES_TEXTURE\nuniform sampler2D skinMatricesTexture;\nuniform float skinMatricesTextureSize: unconfigurable;\nmat4 getSkinMatrix(float idx) {\n    float j = idx * 4.0;\n    float x = mod(j, skinMatricesTextureSize);\n    float y = floor(j / skinMatricesTextureSize) + 0.5;\n    vec2 scale = vec2(skinMatricesTextureSize);\n    return mat4(\n        texture2D(skinMatricesTexture, vec2(x + 0.5, y) / scale),\n        texture2D(skinMatricesTexture, vec2(x + 1.5, y) / scale),\n        texture2D(skinMatricesTexture, vec2(x + 2.5, y) / scale),\n        texture2D(skinMatricesTexture, vec2(x + 3.5, y) / scale)\n    );\n}\n#else\nuniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;\nmat4 getSkinMatrix(float idx) {\n    return skinMatrix[int(idx)];\n}\n#endif\n#endif\n@end\n@export qtek.chunk.skin_matrix\nmat4 skinMatrixWS = getSkinMatrix(joint.x) * weight.x;\nif (weight.y > 1e-4)\n{\n    skinMatrixWS += getSkinMatrix(joint.y) * weight.y;\n}\nif (weight.z > 1e-4)\n{\n    skinMatrixWS += getSkinMatrix(joint.z) * weight.z;\n}\nfloat weightW = 1.0-weight.x-weight.y-weight.z;\nif (weightW > 1e-4)\n{\n    skinMatrixWS += getSkinMatrix(joint.w) * weightW;\n}\n@end\n@export qtek.util.parallax_correct\nvec3 parallaxCorrect(in vec3 dir, in vec3 pos, in vec3 boxMin, in vec3 boxMax) {\n    vec3 first = (boxMax - pos) / dir;\n    vec3 second = (boxMin - pos) / dir;\n    vec3 further = max(first, second);\n    float dist = min(further.x, min(further.y, further.z));\n    vec3 fixedPos = pos + dir * dist;\n    vec3 boxCenter = (boxMax + boxMin) * 0.5;\n    return normalize(fixedPos - boxCenter);\n}\n@end\n@export qtek.util.clamp_sample\nvec4 clampSample(const in sampler2D texture, const in vec2 coord)\n{\n#ifdef STEREO\n    float eye = step(0.5, coord.x) * 0.5;\n    vec2 coordClamped = clamp(coord, vec2(eye, 0.0), vec2(0.5 + eye, 1.0));\n#else\n    vec2 coordClamped = clamp(coord, vec2(0.0), vec2(1.0));\n#endif\n    return texture2D(texture, coordClamped);\n}\n@end"),Ut.import(Sn),Ut.import("\n@export qtek.lambert.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat : [1.0, 1.0];\nuniform vec2 uvOffset : [0.0, 0.0];\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nattribute vec3 normal : NORMAL;\nattribute vec3 barycentric;\n@import qtek.chunk.skinning_header\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nvarying vec3 v_Barycentric;\nvoid main()\n{\n    vec3 skinnedPosition = position;\n    vec3 skinnedNormal = normal;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4( skinnedPosition, 1.0 );\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n    v_Normal = normalize( ( worldInverseTranspose * vec4(skinnedNormal, 0.0) ).xyz );\n    v_WorldPosition = ( world * vec4( skinnedPosition, 1.0) ).xyz;\n    v_Barycentric = barycentric;\n}\n@end\n@export qtek.lambert.fragment\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\nuniform sampler2D diffuseMap;\nuniform sampler2D alphaMap;\nuniform vec3 color : [1.0, 1.0, 1.0];\nuniform vec3 emission : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\n#ifdef ALPHA_TEST\nuniform float alphaCutoff: 0.9;\n#endif\nuniform float lineWidth : 0.0;\nuniform vec4 lineColor : [0.0, 0.0, 0.0, 0.6];\nvarying vec3 v_Barycentric;\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n#ifdef POINT_LIGHT_COUNT\n@import qtek.header.point_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n#ifdef SPOT_LIGHT_COUNT\n@import qtek.header.spot_light\n#endif\n@import qtek.util.calculate_attenuation\n@import qtek.util.edge_factor\n@import qtek.util.rgbm\n@import qtek.plugin.compute_shadow_map\nvoid main()\n{\n#ifdef RENDER_NORMAL\n    gl_FragColor = vec4(v_Normal * 0.5 + 0.5, 1.0);\n    return;\n#endif\n#ifdef RENDER_TEXCOORD\n    gl_FragColor = vec4(v_Texcoord, 1.0, 1.0);\n    return;\n#endif\n    gl_FragColor = vec4(color, alpha);\n#ifdef DIFFUSEMAP_ENABLED\n    vec4 tex = texture2D( diffuseMap, v_Texcoord );\n#ifdef SRGB_DECODE\n    tex.rgb = pow(tex.rgb, vec3(2.2));\n#endif\n    gl_FragColor.rgb *= tex.rgb;\n#ifdef DIFFUSEMAP_ALPHA_ALPHA\n    gl_FragColor.a *= tex.a;\n#endif\n#endif\n    vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n#ifdef AMBIENT_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n    {\n        diffuseColor += ambientLightColor[_idx_];\n    }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n    for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n    {{\n        diffuseColor += calcAmbientSHLight(_idx_, v_Normal) * ambientSHLightColor[_idx_];\n    }}\n#endif\n#ifdef POINT_LIGHT_COUNT\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsPoint[POINT_LIGHT_COUNT];\n    if( shadowEnabled )\n    {\n        computeShadowOfPointLights(v_WorldPosition, shadowContribsPoint);\n    }\n#endif\n    for(int i = 0; i < POINT_LIGHT_COUNT; i++)\n    {\n        vec3 lightPosition = pointLightPosition[i];\n        vec3 lightColor = pointLightColor[i];\n        float range = pointLightRange[i];\n        vec3 lightDirection = lightPosition - v_WorldPosition;\n        float dist = length(lightDirection);\n        float attenuation = lightAttenuation(dist, range);\n        lightDirection /= dist;\n        float ndl = dot( v_Normal, lightDirection );\n        float shadowContrib = 1.0;\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsPoint[i];\n        }\n#endif\n        diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * attenuation * shadowContrib;\n    }\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n    }\n#endif\n    for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n    {\n        vec3 lightDirection = -directionalLightDirection[i];\n        vec3 lightColor = directionalLightColor[i];\n        float ndl = dot(v_Normal, normalize(lightDirection));\n        float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsDir[i];\n        }\n#endif\n        diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\n    }\n#endif\n#ifdef SPOT_LIGHT_COUNT\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n    float shadowContribsSpot[SPOT_LIGHT_COUNT];\n    if(shadowEnabled)\n    {\n        computeShadowOfSpotLights(v_WorldPosition, shadowContribsSpot);\n    }\n#endif\n    for(int i = 0; i < SPOT_LIGHT_COUNT; i++)\n    {\n        vec3 lightPosition = -spotLightPosition[i];\n        vec3 spotLightDirection = -normalize( spotLightDirection[i] );\n        vec3 lightColor = spotLightColor[i];\n        float range = spotLightRange[i];\n        float a = spotLightUmbraAngleCosine[i];\n        float b = spotLightPenumbraAngleCosine[i];\n        float falloffFactor = spotLightFalloffFactor[i];\n        vec3 lightDirection = lightPosition - v_WorldPosition;\n        float dist = length(lightDirection);\n        float attenuation = lightAttenuation(dist, range);\n        lightDirection /= dist;\n        float c = dot(spotLightDirection, lightDirection);\n        float falloff;\n        falloff = clamp((c - a) /( b - a), 0.0, 1.0);\n        falloff = pow(falloff, falloffFactor);\n        float ndl = dot(v_Normal, lightDirection);\n        ndl = clamp(ndl, 0.0, 1.0);\n        float shadowContrib = 1.0;\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\n        if( shadowEnabled )\n        {\n            shadowContrib = shadowContribsSpot[i];\n        }\n#endif\n        diffuseColor += lightColor * ndl * attenuation * (1.0-falloff) * shadowContrib;\n    }\n#endif\n    gl_FragColor.rgb *= diffuseColor;\n    gl_FragColor.rgb += emission;\n    if(lineWidth > 0.)\n    {\n        gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor(lineWidth)) * lineColor.a);\n    }\n#ifdef ALPHA_TEST\n    if (gl_FragColor.a < alphaCutoff) {\n        discard;\n    }\n#endif\n    gl_FragColor = encodeHDR(gl_FragColor);\n}\n@end"),Ut.import(pr),Ut.import("@export qtek.wireframe.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\nattribute vec3 position : POSITION;\nattribute vec3 barycentric;\n@import qtek.chunk.skinning_header\nvarying vec3 v_Barycentric;\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0 );\n    v_Barycentric = barycentric;\n}\n@end\n@export qtek.wireframe.fragment\nuniform vec3 color : [0.0, 0.0, 0.0];\nuniform float alpha : 1.0;\nuniform float lineWidth : 1.0;\nvarying vec3 v_Barycentric;\n@import qtek.util.edge_factor\nvoid main()\n{\n    gl_FragColor.rgb = color;\n    gl_FragColor.a = (1.0-edgeFactor(lineWidth)) * alpha;\n}\n@end"),Ut.import(An),Ut.import(Jt),Wt.template("qtek.basic",Ut.source("qtek.basic.vertex"),Ut.source("qtek.basic.fragment")),Wt.template("qtek.lambert",Ut.source("qtek.lambert.vertex"),Ut.source("qtek.lambert.fragment")),Wt.template("qtek.wireframe",Ut.source("qtek.wireframe.vertex"),Ut.source("qtek.wireframe.fragment")),Wt.template("qtek.skybox",Ut.source("qtek.skybox.vertex"),Ut.source("qtek.skybox.fragment")),Wt.template("qtek.prez",Ut.source("qtek.prez.vertex"),Ut.source("qtek.prez.fragment")),Wt.template("qtek.standard",Ut.source("qtek.standard.vertex"),Ut.source("qtek.standard.fragment")),Ut.import("@export qtek.compositor.coloradjust\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nuniform float contrast : 1.0;\nuniform float exposure : 0.0;\nuniform float gamma : 1.0;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);\n    color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);\n    color = clamp( color * pow(2.0, exposure), 0.0, 1.0);\n    color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);\n    float luminance = dot( color, w );\n    color = mix(vec3(luminance), color, saturation);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.brightness\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float brightness : 0.0;\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = tex.rgb + vec3(brightness);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.contrast\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float contrast : 1.0;\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord);\n    vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.exposure\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float exposure : 0.0;\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = tex.rgb * pow(2.0, exposure);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.gamma\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float gamma : 1.0;\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = pow(tex.rgb, vec3(gamma));\n    gl_FragColor = vec4(color, tex.a);\n}\n@end\n@export qtek.compositor.saturation\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float saturation : 1.0;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    vec3 color = tex.rgb;\n    float luminance = dot(color, w);\n    color = mix(vec3(luminance), color, saturation);\n    gl_FragColor = vec4(color, tex.a);\n}\n@end"),Ut.import(Nn),
Ut.import("@export qtek.compositor.hdr.log_lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));\n    float luminance = dot(tex.rgb, w);\n    luminance = log(luminance + 0.001);\n    gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));\n}\n@end\n@export qtek.compositor.hdr.lum_adaption\nvarying vec2 v_Texcoord;\nuniform sampler2D adaptedLum;\nuniform sampler2D currentLum;\nuniform float frameTime : 0.02;\n@import qtek.util.rgbm\nvoid main()\n{\n    float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;\n    float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);\n    fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));\n    gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));\n}\n@end\n@export qtek.compositor.lum\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\nvoid main()\n{\n    vec4 tex = texture2D( texture, v_Texcoord );\n    float luminance = dot(tex.rgb, w);\n    gl_FragColor = vec4(vec3(luminance), 1.0);\n}\n@end"),Ut.import("\n@export qtek.compositor.lut\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform sampler2D lookup;\nvoid main()\n{\n    vec4 tex = texture2D(texture, v_Texcoord);\n    float blueColor = tex.b * 63.0;\n    vec2 quad1;\n    quad1.y = floor(floor(blueColor) / 8.0);\n    quad1.x = floor(blueColor) - (quad1.y * 8.0);\n    vec2 quad2;\n    quad2.y = floor(ceil(blueColor) / 8.0);\n    quad2.x = ceil(blueColor) - (quad2.y * 8.0);\n    vec2 texPos1;\n    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    vec2 texPos2;\n    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);\n    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);\n    vec4 newColor1 = texture2D(lookup, texPos1);\n    vec4 newColor2 = texture2D(lookup, texPos2);\n    vec4 newColor = mix(newColor1, newColor2, fract(blueColor));\n    gl_FragColor = vec4(newColor.rgb, tex.w);\n}\n@end"),Ut.import("@export qtek.compositor.vignette\n#define OUTPUT_ALPHA\nvarying vec2 v_Texcoord;\nuniform sampler2D texture;\nuniform float darkness: 1;\nuniform float offset: 1;\n@import qtek.util.rgbm\nvoid main()\n{\n    vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));\n    gl_FragColor.rgb = texel.rgb;\n    vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(offset);\n    gl_FragColor = encodeHDR(vec4(mix(texel.rgb, vec3(1.0 - darkness), dot(uv, uv)), texel.a));\n}\n@end"),Ut.import(wn),Ut.import(Mn),Ut.import(Rn),Ut.import(Cn),Ut.import(Ln),Ut.import("@export qtek.compositor.dof.coc\nuniform sampler2D depth;\nuniform float zNear: 0.1;\nuniform float zFar: 2000;\nuniform float focalDist: 3;\nuniform float focalRange: 1;\nuniform float focalLength: 30;\nuniform float fstop: 2.8;\nvarying vec2 v_Texcoord;\n@import qtek.util.encode_float\nvoid main()\n{\n    float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\n    float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\n    float aperture = focalLength / fstop;\n    float coc;\n    float uppper = focalDist + focalRange;\n    float lower = focalDist - focalRange;\n    if (dist <= uppper && dist >= lower) {\n        coc = 0.5;\n    }\n    else {\n        float focalAdjusted = dist > uppper ? uppper : lower;\n        coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\n        coc = clamp(coc, 0.0, 0.4) / 0.4000001;\n        if (dist < lower) {\n            coc = -coc;\n        }\n        coc = coc * 0.5 + 0.5;\n    }\n    gl_FragColor = encodeFloat(coc);\n}\n@end\n@export qtek.compositor.dof.premultiply\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.decode_float\nvoid main() {\n    float fCoc = max(abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0), 0.1);\n    gl_FragColor = encodeHDR(\n        vec4(decodeHDR(texture2D(texture, v_Texcoord)).rgb * fCoc, 1.0)\n    );\n}\n@end\n@export qtek.compositor.dof.min_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.float\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n    fCoc = min(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n    gl_FragColor = encodeFloat(fCoc);\n}\n@end\n@export qtek.compositor.dof.max_coc\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.float\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zy)));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.xw)));\n    fCoc = max(fCoc, decodeFloat(texture2D(coc, v_Texcoord + d.zw)));\n    gl_FragColor = encodeFloat(fCoc);\n}\n@end\n@export qtek.compositor.dof.coc_upsample\n#define HIGH_QUALITY\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import qtek.util.float\nvoid main()\n{\n#ifdef HIGH_QUALITY\n    vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n    float s;\n    s  = decodeFloat(texture2D(coc, v_Texcoord - d.xy));\n    s += decodeFloat(texture2D(coc, v_Texcoord - d.wy)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord - d.zy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zw)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord       )) * 4.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xw)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.wy)) * 2.0;\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    gl_FragColor = encodeFloat(s / 16.0);\n#else\n    vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n    float s;\n    s  = decodeFloat(texture2D(coc, v_Texcoord + d.xy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zy));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.xw));\n    s += decodeFloat(texture2D(coc, v_Texcoord + d.zw));\n    gl_FragColor = encodeFloat(s / 4.0);\n#endif\n}\n@end\n@export qtek.compositor.dof.upsample\n#define HIGH_QUALITY\nuniform sampler2D coc;\nuniform sampler2D texture;\nuniform vec2 textureSize : [512, 512];\nuniform float sampleScale: 0.5;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.decode_float\nfloat tap(vec2 uv, inout vec4 color, float baseWeight) {\n    float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * baseWeight;\n    color += decodeHDR(texture2D(texture, uv)) * weight;\n    return weight;\n}\nvoid main()\n{\n#ifdef HIGH_QUALITY\n    vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;\n    vec4 color = vec4(0.0);\n    float baseWeight = 1.0 / 16.0;\n    float w  = tap(v_Texcoord - d.xy, color, baseWeight);\n    w += tap(v_Texcoord - d.wy, color, baseWeight * 2.0);\n    w += tap(v_Texcoord - d.zy, color, baseWeight);\n    w += tap(v_Texcoord + d.zw, color, baseWeight * 2.0);\n    w += tap(v_Texcoord       , color, baseWeight * 4.0);\n    w += tap(v_Texcoord + d.xw, color, baseWeight * 2.0);\n    w += tap(v_Texcoord + d.zy, color, baseWeight);\n    w += tap(v_Texcoord + d.wy, color, baseWeight * 2.0);\n    w += tap(v_Texcoord + d.xy, color, baseWeight);\n    gl_FragColor = encodeHDR(color / w);\n#else\n    vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;\n    vec4 color = vec4(0.0);\n    float baseWeight = 1.0 / 4.0;\n    float w  = tap(v_Texcoord + d.xy, color, baseWeight);\n    w += tap(v_Texcoord + d.zy, color, baseWeight);\n    w += tap(v_Texcoord + d.xw, color, baseWeight);\n    w += tap(v_Texcoord + d.zw, color, baseWeight);\n    gl_FragColor = encodeHDR(color / w);\n#endif\n}\n@end\n@export qtek.compositor.dof.downsample\nuniform sampler2D texture;\nuniform sampler2D coc;\nuniform vec2 textureSize : [512, 512];\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.decode_float\nfloat tap(vec2 uv, inout vec4 color) {\n    float weight = abs(decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0) * 0.25;\n    color += decodeHDR(texture2D(texture, uv)) * weight;\n    return weight;\n}\nvoid main()\n{\n    vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;\n    vec4 color = vec4(0.0);\n    float weight = tap(v_Texcoord + d.xy, color);\n    weight += tap(v_Texcoord + d.zy, color);\n    weight += tap(v_Texcoord + d.xw, color);\n    weight += tap(v_Texcoord + d.zw, color);\n    color /= weight;\n    gl_FragColor = encodeHDR(color);\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_frag\n@import qtek.util.float\nvec4 doBlur(sampler2D targetTexture, vec2 offset) {\n#ifdef BLUR_COC\n    float cocSum = 0.0;\n#else\n    vec4 color = vec4(0.0);\n#endif\n    float weightSum = 0.0;\n    float kernelWeight = 1.0 / float(KERNEL_SIZE);\n    for (int i = 0; i < KERNEL_SIZE; i++) {\n        vec2 coord = v_Texcoord + offset * float(i);\n        float w = kernelWeight;\n#ifdef BLUR_COC\n        float fCoc = decodeFloat(texture2D(targetTexture, coord)) * 2.0 - 1.0;\n        cocSum += clamp(fCoc, -1.0, 0.0) * w;\n#else\n        float fCoc = decodeFloat(texture2D(coc, coord)) * 2.0 - 1.0;\n        vec4 texel = texture2D(targetTexture, coord);\n    #if !defined(BLUR_NEARFIELD)\n        w *= abs(fCoc);\n    #endif\n        color += decodeHDR(texel) * w;\n#endif\n        weightSum += w;\n    }\n#ifdef BLUR_COC\n    return encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\n#else\n    return color / weightSum;\n#endif\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_1\n#define KERNEL_SIZE 5\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.rgbm\n@import qtek.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n    gl_FragColor = doBlur(texture, vec2(0.0, offset.y));\n#if !defined(BLUR_COC)\n    gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_2\n#define KERNEL_SIZE 5\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.rgbm\n@import qtek.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n    offset.y /= 2.0;\n    gl_FragColor = doBlur(texture, -offset);\n#if !defined(BLUR_COC)\n    gl_FragColor = encodeHDR(gl_FragColor);\n#endif\n}\n@end\n@export qtek.compositor.dof.hexagonal_blur_3\n#define KERNEL_SIZE 5\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\nuniform float blurSize : 1.0;\nuniform vec2 textureSize : [512.0, 512.0];\n@import qtek.util.rgbm\n@import qtek.compositor.dof.hexagonal_blur_frag\nvoid main()\n{\n    vec2 offset = blurSize / textureSize;\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n    offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n    offset.y /= 2.0;\n    vec2 vDownRight = vec2(offset.x, -offset.y);\n    vec4 texel1 = doBlur(texture1, -offset);\n    vec4 texel2 = doBlur(texture1, vDownRight);\n    vec4 texel3 = doBlur(texture2, vDownRight);\n#ifdef BLUR_COC\n    float coc1 = decodeFloat(texel1) * 2.0 - 1.0;\n    float coc2 = decodeFloat(texel2) * 2.0 - 1.0;\n    float coc3 = decodeFloat(texel3) * 2.0 - 1.0;\n    gl_FragColor = encodeFloat(\n        ((coc1 + coc2 + coc3) / 3.0) * 0.5 + 0.5\n    );\n#else\n    vec4 color = (texel1 + texel2 + texel3) / 3.0;\n    gl_FragColor = encodeHDR(color);\n#endif\n}\n@end\n@export qtek.compositor.dof.composite\n#define DEBUG 0\nuniform sampler2D original;\nuniform sampler2D blurred;\nuniform sampler2D nearfield;\nuniform sampler2D coc;\nuniform sampler2D nearcoc;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\n@import qtek.util.float\nvoid main()\n{\n    vec4 blurredColor = decodeHDR(texture2D(blurred, v_Texcoord));\n    vec4 originalColor = decodeHDR(texture2D(original, v_Texcoord));\n    float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\n    fCoc = abs(fCoc * 2.0 - 1.0);\n    float weight = smoothstep(0.0, 1.0, fCoc);\n#ifdef NEARFIELD_ENABLED\n    vec4 nearfieldColor = decodeHDR(texture2D(nearfield, v_Texcoord));\n    float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\n    fNearCoc = abs(fNearCoc * 2.0 - 1.0);\n    gl_FragColor = encodeHDR(\n        mix(\n            nearfieldColor, mix(originalColor, blurredColor, weight),\n            pow(1.0 - fNearCoc, 4.0)\n        )\n    );\n#else\n    gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\n#endif\n#if DEBUG == 1\n    gl_FragColor = vec4(vec3(fCoc), 1.0);\n#elif DEBUG == 2\n    gl_FragColor = vec4(vec3(fNearCoc), 1.0);\n#elif DEBUG == 3\n    gl_FragColor = encodeHDR(blurredColor);\n#elif DEBUG == 4\n    gl_FragColor = encodeHDR(nearfieldColor);\n#endif\n}\n@end"),Ut.import("@export qtek.compositor.lensflare\n#define SAMPLE_NUMBER 8\nuniform sampler2D texture;\nuniform sampler2D lenscolor;\nuniform vec2 textureSize : [512, 512];\nuniform float dispersal : 0.3;\nuniform float haloWidth : 0.4;\nuniform float distortion : 1.0;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nvec4 textureDistorted(\n    in vec2 texcoord,\n    in vec2 direction,\n    in vec3 distortion\n) {\n    return vec4(\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,\n        decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,\n        1.0\n    );\n}\nvoid main()\n{\n    vec2 texcoord = -v_Texcoord + vec2(1.0);    vec2 textureOffset = 1.0 / textureSize;\n    vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;\n    vec2 haloVec = normalize(ghostVec) * haloWidth;\n    vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);\n    vec4 result = vec4(0.0);\n    for (int i = 0; i < SAMPLE_NUMBER; i++)\n    {\n        vec2 offset = fract(texcoord + ghostVec * float(i));\n        float weight = length(vec2(0.5) - offset) / length(vec2(0.5));\n        weight = pow(1.0 - weight, 10.0);\n        result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n    }\n    result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));\n    float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n    weight = pow(1.0 - weight, 10.0);\n    vec2 offset = fract(texcoord + haloVec);\n    result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;\n    gl_FragColor = result;\n}\n@end"),Ut.import(Dn),Ut.import(Pn),Ut.import("@export qtek.compositor.fxaa3\nuniform sampler2D texture;\nuniform vec4 viewport : VIEWPORT;\nuniform float subpixel: 0.75;\nuniform float edgeThreshold: 0.125;\nuniform float edgeThresholdMin: 0.0625;\nvarying vec2 v_Texcoord;\n@import qtek.util.rgbm\nfloat FxaaLuma(vec4 rgba) { return rgba.y; }\nvec4 FxaaPixelShader(\n    vec2 pos\n    ,sampler2D tex\n    ,vec2 fxaaQualityRcpFrame\n    ,float fxaaQualitySubpix\n    ,float fxaaQualityEdgeThreshold\n    ,float fxaaQualityEdgeThresholdMin\n) {\n    vec2 posM;\n    posM.x = pos.x;\n    posM.y = pos.y;\n    vec4 rgbyM = decodeHDR(texture2D(texture, posM, 0.0));\n    float lumaS = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 0.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0, 0.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaN = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 0.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0, 0.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float maxSM = max(lumaS, rgbyM.y);\n    float minSM = min(lumaS, rgbyM.y);\n    float maxESM = max(lumaE, maxSM);\n    float minESM = min(lumaE, minSM);\n    float maxWN = max(lumaN, lumaW);\n    float minWN = min(lumaN, lumaW);\n    float rangeMax = max(maxWN, maxESM);\n    float rangeMin = min(minWN, minESM);\n    float rangeMaxScaled = rangeMax * fxaaQualityEdgeThreshold;\n    float range = rangeMax - rangeMin;\n    float rangeMaxClamped = max(fxaaQualityEdgeThresholdMin, rangeMaxScaled);\n    bool earlyExit = range < rangeMaxClamped;\n    if(earlyExit) return rgbyM;\n    float lumaNW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaSE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaNE = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2( 1.0,-1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaSW = FxaaLuma(decodeHDR(texture2D(texture, posM + (vec2(-1.0, 1.0) * fxaaQualityRcpFrame.xy), 0.0)));\n    float lumaNS = lumaN + lumaS;\n    float lumaWE = lumaW + lumaE;\n    float subpixRcpRange = 1.0/range;\n    float subpixNSWE = lumaNS + lumaWE;\n    float edgeHorz1 = (-2.0 * rgbyM.y) + lumaNS;\n    float edgeVert1 = (-2.0 * rgbyM.y) + lumaWE;\n    float lumaNESE = lumaNE + lumaSE;\n    float lumaNWNE = lumaNW + lumaNE;\n    float edgeHorz2 = (-2.0 * lumaE) + lumaNESE;\n    float edgeVert2 = (-2.0 * lumaN) + lumaNWNE;\n    float lumaNWSW = lumaNW + lumaSW;\n    float lumaSWSE = lumaSW + lumaSE;\n    float edgeHorz4 = (abs(edgeHorz1) * 2.0) + abs(edgeHorz2);\n    float edgeVert4 = (abs(edgeVert1) * 2.0) + abs(edgeVert2);\n    float edgeHorz3 = (-2.0 * lumaW) + lumaNWSW;\n    float edgeVert3 = (-2.0 * lumaS) + lumaSWSE;\n    float edgeHorz = abs(edgeHorz3) + edgeHorz4;\n    float edgeVert = abs(edgeVert3) + edgeVert4;\n    float subpixNWSWNESE = lumaNWSW + lumaNESE;\n    float lengthSign = fxaaQualityRcpFrame.x;\n    bool horzSpan = edgeHorz >= edgeVert;\n    float subpixA = subpixNSWE * 2.0 + subpixNWSWNESE;\n    if(!horzSpan) lumaN = lumaW;\n    if(!horzSpan) lumaS = lumaE;\n    if(horzSpan) lengthSign = fxaaQualityRcpFrame.y;\n    float subpixB = (subpixA * (1.0/12.0)) - rgbyM.y;\n    float gradientN = lumaN - rgbyM.y;\n    float gradientS = lumaS - rgbyM.y;\n    float lumaNN = lumaN + rgbyM.y;\n    float lumaSS = lumaS + rgbyM.y;\n    bool pairN = abs(gradientN) >= abs(gradientS);\n    float gradient = max(abs(gradientN), abs(gradientS));\n    if(pairN) lengthSign = -lengthSign;\n    float subpixC = clamp(abs(subpixB) * subpixRcpRange, 0.0, 1.0);\n    vec2 posB;\n    posB.x = posM.x;\n    posB.y = posM.y;\n    vec2 offNP;\n    offNP.x = (!horzSpan) ? 0.0 : fxaaQualityRcpFrame.x;\n    offNP.y = ( horzSpan) ? 0.0 : fxaaQualityRcpFrame.y;\n    if(!horzSpan) posB.x += lengthSign * 0.5;\n    if( horzSpan) posB.y += lengthSign * 0.5;\n    vec2 posN;\n    posN.x = posB.x - offNP.x * 1.0;\n    posN.y = posB.y - offNP.y * 1.0;\n    vec2 posP;\n    posP.x = posB.x + offNP.x * 1.0;\n    posP.y = posB.y + offNP.y * 1.0;\n    float subpixD = ((-2.0)*subpixC) + 3.0;\n    float lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN, 0.0)));\n    float subpixE = subpixC * subpixC;\n    float lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP, 0.0)));\n    if(!pairN) lumaNN = lumaSS;\n    float gradientScaled = gradient * 1.0/4.0;\n    float lumaMM = rgbyM.y - lumaNN * 0.5;\n    float subpixF = subpixD * subpixE;\n    bool lumaMLTZero = lumaMM < 0.0;\n    lumaEndN -= lumaNN * 0.5;\n    lumaEndP -= lumaNN * 0.5;\n    bool doneN = abs(lumaEndN) >= gradientScaled;\n    bool doneP = abs(lumaEndP) >= gradientScaled;\n    if(!doneN) posN.x -= offNP.x * 1.5;\n    if(!doneN) posN.y -= offNP.y * 1.5;\n    bool doneNP = (!doneN) || (!doneP);\n    if(!doneP) posP.x += offNP.x * 1.5;\n    if(!doneP) posP.y += offNP.y * 1.5;\n    if(doneNP) {\n        if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n        if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n        if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n        if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n        doneN = abs(lumaEndN) >= gradientScaled;\n        doneP = abs(lumaEndP) >= gradientScaled;\n        if(!doneN) posN.x -= offNP.x * 2.0;\n        if(!doneN) posN.y -= offNP.y * 2.0;\n        doneNP = (!doneN) || (!doneP);\n        if(!doneP) posP.x += offNP.x * 2.0;\n        if(!doneP) posP.y += offNP.y * 2.0;\n        if(doneNP) {\n            if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n            if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n            if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n            if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n            doneN = abs(lumaEndN) >= gradientScaled;\n            doneP = abs(lumaEndP) >= gradientScaled;\n            if(!doneN) posN.x -= offNP.x * 4.0;\n            if(!doneN) posN.y -= offNP.y * 4.0;\n            doneNP = (!doneN) || (!doneP);\n            if(!doneP) posP.x += offNP.x * 4.0;\n            if(!doneP) posP.y += offNP.y * 4.0;\n            if(doneNP) {\n                if(!doneN) lumaEndN = FxaaLuma(decodeHDR(texture2D(texture, posN.xy, 0.0)));\n                if(!doneP) lumaEndP = FxaaLuma(decodeHDR(texture2D(texture, posP.xy, 0.0)));\n                if(!doneN) lumaEndN = lumaEndN - lumaNN * 0.5;\n                if(!doneP) lumaEndP = lumaEndP - lumaNN * 0.5;\n                doneN = abs(lumaEndN) >= gradientScaled;\n                doneP = abs(lumaEndP) >= gradientScaled;\n                if(!doneN) posN.x -= offNP.x * 12.0;\n                if(!doneN) posN.y -= offNP.y * 12.0;\n                doneNP = (!doneN) || (!doneP);\n                if(!doneP) posP.x += offNP.x * 12.0;\n                if(!doneP) posP.y += offNP.y * 12.0;\n            }\n        }\n    }\n    float dstN = posM.x - posN.x;\n    float dstP = posP.x - posM.x;\n    if(!horzSpan) dstN = posM.y - posN.y;\n    if(!horzSpan) dstP = posP.y - posM.y;\n    bool goodSpanN = (lumaEndN < 0.0) != lumaMLTZero;\n    float spanLength = (dstP + dstN);\n    bool goodSpanP = (lumaEndP < 0.0) != lumaMLTZero;\n    float spanLengthRcp = 1.0/spanLength;\n    bool directionN = dstN < dstP;\n    float dst = min(dstN, dstP);\n    bool goodSpan = directionN ? goodSpanN : goodSpanP;\n    float subpixG = subpixF * subpixF;\n    float pixelOffset = (dst * (-spanLengthRcp)) + 0.5;\n    float subpixH = subpixG * fxaaQualitySubpix;\n    float pixelOffsetGood = goodSpan ? pixelOffset : 0.0;\n    float pixelOffsetSubpix = max(pixelOffsetGood, subpixH);\n    if(!horzSpan) posM.x += pixelOffsetSubpix * lengthSign;\n    if( horzSpan) posM.y += pixelOffsetSubpix * lengthSign;\n    return vec4(decodeHDR(texture2D(texture, posM, 0.0)).xyz, rgbyM.y);\n}\nvoid main()\n{\n    vec4 color = FxaaPixelShader(\n        v_Texcoord,\n        texture,\n        vec2(1.0) / viewport.zw,\n        subpixel,\n        edgeThreshold,\n        edgeThresholdMin\n    );\n    gl_FragColor = vec4(color.rgb, 1.0);\n}\n@end");var In={NORMAL:"normal",POSITION:"position",TEXCOORD_0:"texcoord0",TEXCOORD_1:"texcoord1",WEIGHTS_0:"weight",JOINTS_0:"joint",COLOR:"color"},On={5120:at.Int8Array,5121:at.Uint8Array,5122:at.Int16Array,5123:at.Uint16Array,5125:at.Uint32Array,5126:at.Float32Array},Fn={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},kn=$e.extend({rootNode:null,rootPath:null,textureRootPath:null,bufferRootPath:null,shaderName:"qtek.standard",useStandardMaterial:!1,includeCamera:!0,includeAnimation:!0,includeMesh:!0,includeTexture:!0,crossOrigin:"",textureFlipY:!1,shaderLibrary:null},function(){this.shaderLibrary||(this.shaderLibrary=Wt.createLibrary())},{load:function(e){var t=this;null==this.rootPath&&(this.rootPath=e.slice(0,e.lastIndexOf("/"))),ar.get({url:e,onprogress:function(e,r,n){t.trigger("progress",e,r,n)},onerror:function(e){t.trigger("error",e)},responseType:"text",onload:function(e){t.parse(JSON.parse(e))}})},parse:function(e,t){function r(){0===--u&&i()}function n(){return{scene:a.rootNode?null:s,rootNode:a.rootNode?s:null,cameras:o.cameras,textures:o.textures,materials:o.materials,skeletons:o.skeletons,meshes:o.meshes,clips:o.clips,nodes:o.nodes}}function i(t){if(o.buffers.length!==e.buffers.length)return void setTimeout(function(){a.trigger("error","Buffer not load complete.")});if(e.bufferViews.forEach(function(e,t){o.bufferViews[t]=o.buffers[e.buffer].slice(e.byteOffset||0,(e.byteOffset||0)+(e.byteLength||0))}),o.buffers=null,a.includeMesh&&(a.includeTexture&&a._parseTextures(e,o),a._parseMaterials(e,o),a._parseMeshes(e,o)),a._parseNodes(e,o),e.scenes){var r=e.scenes[e.scene||0];if(r)for(var i=0;i<r.nodes.length;i++){var u=o.nodes[r.nodes[i]];u.update(),s.add(u)}}a.includeMesh&&a._parseSkins(e,o),a.includeAnimation&&a._parseAnimations(e,o),t?setTimeout(function(){a.trigger("success",n())}):a.trigger("success",n())}var a=this,o={buffers:[],bufferViews:[],materials:[],textures:[],meshes:[],joints:[],skeletons:[],cameras:[],nodes:[],clips:[]},s=this.rootNode||new _r,u=0;return t?(o.buffers=t.slice(),i(!0)):Je.each(e.buffers,function(e,t){u++;var n=e.uri;a._loadBuffer(n,function(e){o.buffers[t]=e,r()},r)}),n()},resolveBinaryPath:function(e){var t=this.bufferRootPath;return null==t&&(t=this.rootPath),Je.relative2absolute(e,t)},resolveTexturePath:function(e){var t=this.textureRootPath;return null==t&&(t=this.rootPath),Je.relative2absolute(e,t)},_loadBuffer:function(e,t,r){ar.get({url:this.resolveBinaryPath(e),responseType:"arraybuffer",onload:function(e){t&&t(e)},onerror:function(e){r&&r(e)}})},_parseSkins:function(e,t){function r(e,t,r){e.skeleton=t,e.joints=r;var n=e.material.shader,o=e.material.clone();e.material=o,o instanceof Sr?o.jointCount=r.length:o.shader=i.get(a,{textures:n.getEnabledTextures(),vertexDefines:{SKINNING:null,JOINT_COUNT:r.length}})}function n(e){return e.index}Je.each(e.skins,function(r,n){for(var i=new Ur({name:r.name}),a=0;a<r.joints.length;a++){var o=r.joints[a],s=t.nodes[o],u=new Or({name:s.name,node:s,index:i.joints.length});i.joints.push(u)}if(i.relativeRootNode=t.nodes[r.skeleton]||this.rootNode,r.inverseBindMatrices){var l=e.accessors[r.inverseBindMatrices],c=t.bufferViews[l.bufferView],h=l.byteOffset||0,f=16*l.count,d=new at.Float32Array(c,h,f);i.setJointMatricesArray(d)}else i.updateJointMatrices();t.skeletons[n]=i},this);var i=this.shaderLibrary,a=this.shaderName;Je.each(e.nodes,function(e,i){if(null!=e.skin){var a=e.skin,o=t.skeletons[a],s=t.nodes[i],u=o.joints.map(n);if(s instanceof Ir)r(s,o,u);else for(var l=s.children(),c=0;c<l.length;c++)r(l[c],o,u)}},this)},_parseTextures:function(e,t){Je.each(e.textures,function(r,n){var i=e.samplers&&e.samplers[r.sampler]||{},a={};["wrapS","wrapT","magFilter","minFilter"].forEach(function(e){var t=i[e];null!=t&&(a[e]=t)}),Je.defaults(a,{wrapS:Vt.REPEAT,wrapT:Vt.REPEAT,flipY:this.textureFlipY});var o=r.target||rt.TEXTURE_2D,s=r.format;if(null!=s&&(a.format=s),o===rt.TEXTURE_2D){var u=new Pr(a),l=e.images[r.source];u.load(this.resolveTexturePath(l.uri),this.crossOrigin),t.textures[n]=u}},this)},_KHRCommonMaterialToStandard:function(e,t){var r={};r=e.extensions.KHR_materials_common.values||{},"number"==typeof r.diffuse&&(r.diffuse=t.textures[r.diffuse]||null),"number"==typeof r.emission&&(r.emission=t.textures[r.emission]||null);var n=[];r.diffuse instanceof Pr&&n.push("diffuseMap"),e.normalTexture&&n.push("normalMap"),r.emission instanceof Pr&&n.push("emissiveMap");var i,a=this.useStandardMaterial;if(a)i=new Sr({name:e.name,doubleSided:e.doubleSided});else{var o={USE_ROUGHNESS:null,USE_METALNESS:null};e.doubleSided&&(o.DOUBLE_SIDED=null),i=new jt({name:e.name,shader:this.shaderLibrary.get(this.shaderName,{fragmentDefines:o,textures:n})})}r.transparent&&(i.depthMask=!1,i.depthTest=!0,i.transparent=!0);var s=r.diffuse;s&&(Array.isArray(s)?(s=s.slice(0,3),a?i.color=s:i.set("color",s)):a?i.diffuseMap=s:i.set("diffuseMap",s));var u=r.emission;if(null!=u&&(Array.isArray(u)?(u=u.slice(0,3),a?i.emission=u:i.set("emission",u)):a?i.emissiveMap=u:i.set("emissiveMap",u)),null!=e.normalTexture){var l=e.normalTexture.index;a?i.normalMap=t.textures[l]||null:i.set("normalMap",t.textures[l]||null)}if(null!=r.shininess){var c=Math.log(r.shininess)/Math.log(8192);i.set("glossiness",c),i.set("roughness",1-c)}else i.set("glossiness",.3),i.set("roughness",.3);return null!=r.specular&&i.set("specularColor",r.specular.slice(0,3)),null!=r.transparency&&i.set("alpha",r.transparency),i},_pbrMetallicRoughnessToStandard:function(e,t,r){var n,i,a,o,s,u,l="MASK"===e.alphaMode,c=this.useStandardMaterial,h=[];t.baseColorTexture&&(i=r.textures[t.baseColorTexture.index]||null)&&h.push("diffuseMap"),t.metallicRoughnessTexture&&(a=o=r.textures[t.metallicRoughnessTexture.index]||null)&&h.push("metalnessMap","roughnessMap"),e.normalTexture&&(s=r.textures[e.normalTexture.index]||null)&&h.push("normalMap"),e.emissiveTexture&&(u=r.textures[e.emissiveTexture.index]||null)&&h.push("emissiveMap");var f=t.baseColorFactor||[1,1,1,1],d={diffuseMap:i||null,roughnessMap:a||null,metalnessMap:o||null,normalMap:s||null,emissiveMap:u||null,color:f.slice(0,3),alpha:f[3],metalness:t.metallicFactor||0,roughness:t.roughnessFactor||0,emission:e.emissiveFactor||[0,0,0],alphaCutoff:e.alphaCutoff||0};if(d.roughnessMap&&(d.metalness=.5,d.roughness=.5),c)n=new Sr(Je.extend({name:e.name,alphaTest:l,doubleSided:e.doubleSided,roughnessChannel:1,metalnessChannel:2},d));else{var _={ROUGHNESS_CHANNEL:1,METALNESS_CHANNEL:2,USE_ROUGHNESS:null,USE_METALNESS:null};l&&(_.ALPHA_TEST=null),e.doubleSided&&(_.DOUBLE_SIDED=null),n=new jt({name:e.name,shader:this.shaderLibrary.get(this.shaderName,{fragmentDefines:_,textures:h})}),n.set(d)}return"BLEND"===e.alphaMode&&(n.depthMask=!1,n.depthTest=!0,n.transparent=!0),n},_pbrSpecularGlossinessToStandard:function(e,t,r){var n="MASK"===e.alphaMode;this.useStandardMaterial&&console.error("StandardMaterial doesn't support specular glossiness workflow yet");var i,a,o,s,u,l,c=[];t.diffuseTexture&&(a=r.textures[t.diffuseTexture.index]||null)&&c.push("diffuseMap"),t.specularGlossinessTexture&&(o=s=r.textures[t.specularGlossinessTexture.index]||null)&&c.push("specularMap","glossinessMap"),e.normalTexture&&(u=r.textures[e.normalTexture.index]||null)&&c.push("normalMap"),e.emissiveTexture&&(l=r.textures[e.emissiveTexture.index]||null)&&c.push("emissiveMap");var h=t.diffuseFactor||[1,1,1,1],f={diffuseMap:a||null,glossinessMap:o||null,specularMap:s||null,normalMap:u||null,emissiveMap:l||null,color:h.slice(0,3),alpha:h[3],specularColor:t.specularFactor||[1,1,1],glossiness:t.glossinessFactor||0,emission:e.emissiveFactor||[0,0,0],alphaCutoff:null==e.alphaCutoff?.9:e.alphaCutoff};f.glossinessMap&&(f.glossiness=.5),f.specularMap&&(f.specularColor=[1,1,1]);var d={GLOSSINESS_CHANNEL:3};return n&&(d.ALPHA_TEST=null),e.doubleSided&&(d.DOUBLE_SIDED=null),i=new jt({name:e.name,shader:this.shaderLibrary.get(this.shaderName,{fragmentDefines:d,textures:c})}),i.set(f),"BLEND"===e.alphaMode&&(i.depthMask=!1,i.depthTest=!0,i.transparent=!0),i},_parseMaterials:function(e,t){Je.each(e.materials,function(e,r){
e.extensions&&e.extensions.KHR_materials_common?t.materials[r]=this._KHRCommonMaterialToStandard(e,t):e.extensions&&e.extensions.KHR_materials_pbrSpecularGlossiness?t.materials[r]=this._pbrSpecularGlossinessToStandard(e,e.extensions.KHR_materials_pbrSpecularGlossiness,t):t.materials[r]=this._pbrMetallicRoughnessToStandard(e,e.pbrMetallicRoughness||{},t)},this)},_parseMeshes:function(e,t){var r=this;Je.each(e.meshes,function(n,i){t.meshes[i]=[];for(var a=0;a<n.primitives.length;a++){for(var o=n.primitives[a],s=new bn({name:n.name,boundingBox:new vt}),u=Object.keys(o.attributes),l=0;l<u.length;l++){var c=u[l],h=o.attributes[c],f=e.accessors[h],d=In[c];if(d){var _=Fn[f.type],p=R(e,t,h);if(p instanceof at.Uint32Array&&(p=new Float32Array(p)),"WEIGHTS_0"===c&&4===_){for(var m=new p.constructor(3*f.count),v=0;v<f.count;v++){var g=4*v,y=3*v,x=p[g],T=p[g+1],E=p[g+2],b=p[g+3],S=x+T+E+b;m[y]=x/S,m[y+1]=T/S,m[y+2]=E/S}s.attributes[d].value=m}else s.attributes[d].value=p;var A="float";if(p instanceof at.Uint16Array?A="ushort":p instanceof at.Int16Array?A="short":p instanceof at.Uint8Array?A="ubyte":p instanceof at.Int8Array&&(A="byte"),s.attributes[d].type=A,"POSITION"===c){var N=f.min,w=f.max;N&&s.boundingBox.min.set(N[0],N[1],N[2]),w&&s.boundingBox.max.set(w[0],w[1],w[2])}}}null!=o.indices&&(s.indices=R(e,t,o.indices,!0),s.vertexCount<=65535&&s.indices instanceof at.Uint32Array&&(s.indices=new at.Uint16Array(s.indices)));var M=t.materials[o.material],C=(e.materials||[])[o.material];M||(M=new jt({shader:this.shaderLibrary.get(r.shaderName)}));var L=new Ir({geometry:s,material:M,mode:[Ir.POINTS,Ir.LINES,Ir.LINE_LOOP,Ir.LINE_STRIP,Ir.TRIANGLES,Ir.TRIANGLE_STRIP,Ir.TRIANGLE_FAN][o.mode]||Ir.TRIANGLES,ignoreGBuffer:M.transparent});null!=C&&(L.culling=!C.doubleSided),(M instanceof Sr&&M.normalMap||M.shader&&M.shader.isTextureEnabled("normalMap"))&&(L.geometry.attributes.tangent.value||L.geometry.generateTangents()),L.name=kn.generateMeshName(e.meshes,i,a),t.meshes[i].push(L)}},this)},_instanceCamera:function(e,t){var r=e.cameras[t.camera];if("perspective"===r.type){var n=r.perspective||{};return new rn({name:t.name,aspect:n.aspectRatio,fov:n.yfov,far:n.zfar,near:n.znear})}var i=r.orthographic||{};return new nn({name:t.name,top:i.ymag,right:i.xmag,left:-i.xmag,bottom:-i.ymag,near:i.znear,far:i.zfar})},_parseNodes:function(e,t){function r(e){return new Ir({name:e.name,geometry:e.geometry,material:e.material,culling:e.culling,mode:e.mode})}Je.each(e.nodes,function(n,i){var a;if(null!=n.camera&&this.includeCamera)a=this._instanceCamera(e,n),t.cameras.push(a);else if(null!=n.mesh&&this.includeMesh){var o=t.meshes[n.mesh];if(o)if(1===o.length)a=r(o[0]),a.setName(n.name);else{a=new fr,a.setName(n.name);for(var s=0;s<o.length;s++)a.add(r(o[s]))}}else a=new fr,a.setName(n.name);n.matrix?(a.localTransform.setArray(n.matrix),a.decomposeLocalTransform()):(n.translation&&a.position.setArray(n.translation),n.rotation&&a.rotation.setArray(n.rotation),n.scale&&a.scale.setArray(n.scale)),t.nodes[i]=a},this),Je.each(e.nodes,function(e,r){var n=t.nodes[r];if(e.children)for(var i=0;i<e.children.length;i++){var a=e.children[i],o=t.nodes[a];n.add(o)}})},_parseAnimations:function(e,t){function r(e){return"weights"!==e.path||(console.warn("GLTFLoader not support morph targets yet."),!1)}function n(e,t){return e.target.node+"_"+t.samplers[e.sampler].input}var i={};Je.each(e.animations,function(a,o){var s=a.channels.filter(r);if(s.length){for(var u={},l=0;l<s.length;l++){var c=s[l],h=n(c,a),f=t.nodes[c.target.node],d=u[h],_=a.samplers[c.sampler];if(!d){d=u[h]=new pn({name:f?f.name:"",target:f}),d.targetNodeIndex=c.target.node,d.channels.time=R(e,t,_.input);var p=d.channels.time.length;if(!i[_.input]){for(var m=0;m<p;m++)d.channels.time[m]*=1e3;i[_.input]=!0}}"LINEAR"!==(_.interpolation||"LINEAR")&&console.warn("GLTFLoader only support LINEAR interpolation.");var v=c.target.path;"translation"===v&&(v="position"),d.channels[v]=R(e,t,_.output)}var g=new ln({name:a.name,loop:!0});for(var y in u)g.addTrack(u[y]);g.calcLifeFromTracks(),t.clips.push(g)}},this);var a=t.clips.reduce(function(e,t){return Math.max(e,t.life)},0);return t.clips.forEach(function(e){e.life=a}),t.clips}});kn.generateMeshName=function(e,t,r){var n=e[t],i=n.name||"mesh_"+t;return 0===r?i:i+"$"+r};var Bn=Array.prototype.slice;z.prototype={constructor:z,when:function(e,t){for(var r in t)this._tracks[r]||(this._tracks[r]=[],0!==e&&this._tracks[r].push({time:0,value:O(this._getter(this._target,r))})),this._tracks[r].push({time:parseInt(e),value:t[r]});return this},during:function(e){return this._onframeList.push(e),this},_doneCallback:function(){this._tracks={},this._clipList.length=0;for(var e=this._doneList,t=e.length,r=0;r<t;r++)e[r].call(this)},start:function(e){var t,r=this,n=0,i=function(){0===--n&&r._doneCallback()};for(var a in this._tracks){var o=H(this,e,i,this._tracks[a],a,r._interpolater);o&&(this._clipList.push(o),n++,this.animation&&this.animation.addClip(o),t=o)}if(t){var s=t.onframe;t.onframe=function(e,t){s(e,t);for(var n=0;n<r._onframeList.length;n++)r._onframeList[n](e,t)}}return n||this._doneCallback(),this},stop:function(){for(var e=0;e<this._clipList.length;e++){var t=this._clipList[e];this.animation.removeClip(t)}this._clipList=[]},delay:function(e){return this._delay=e,this},done:function(e){return e&&this._doneList.push(e),this},getClips:function(){return this._clipList}};var Un=window.requestAnimationFrame||window.msRequestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(e){setTimeout(e,16)},Hn=$e.extend(function(){return{stage:null,_clips:[],_running:!1,_time:0,_paused:!1,_pausedTime:0}},{addAnimator:function(e){e.animation=this;for(var t=e.getClips(),r=0;r<t.length;r++)this.addClip(t[r])},addClip:function(e){this._clips.indexOf(e)<0&&this._clips.push(e)},removeClip:function(e){var t=this._clips.indexOf(e);t>=0&&this._clips.splice(t,1)},removeAnimator:function(e){for(var t=e.getClips(),r=0;r<t.length;r++)this.removeClip(t[r]);e.animation=null},_update:function(){for(var e=Date.now()-this._pausedTime,t=e-this._time,r=this._clips,n=r.length,i=[],a=[],o=0;o<n;o++){var s=r[o],u=s.step(e,t,!1);u&&(i.push(u),a.push(s))}for(var o=0;o<n;)r[o]._needsRemove?(r[o]=r[n-1],r.pop(),n--):o++;n=i.length;for(var o=0;o<n;o++)a[o].fire(i[o]);this._time=e,this.trigger("frame",t),this.stage&&this.stage.render&&this.stage.render()},start:function(){function e(){t._running&&(Un(e),t._paused||t._update())}var t=this;this._running=!0,this._time=Date.now(),this._pausedTime=0,Un(e)},stop:function(){this._running=!1},pause:function(){this._paused||(this._pauseStart=Date.now(),this._paused=!0)},resume:function(){this._paused&&(this._pausedTime+=Date.now()-this._pauseStart,this._paused=!1)},removeClipsAll:function(){this._clips=[]},animate:function(e,t){t=t||{};var r=new z(e,t.loop,t.getter,t.setter,t.interpolater);return r.animation=this,r}}),zn=ot.mat4,Gn=ot.vec3,qn={merge:function(e,t){if(e.length){var r=e[0],n=r.geometry,i=r.material,a=new bn;a.boundingBox=new vt;for(var o=n.getEnabledAttributes(),s=0;s<o.length;s++){var u=o[s],l=n.attributes[u];a.attributes[u]||(a.attributes[u]=l.clone(!1))}for(var c=zn.create(),h=0,f=0,d=0;d<e.length;d++){var _=e[d].geometry;_.boundingBox&&(_.boundingBox.applyTransform(t?e[d].worldTransform:e[d].localTransform),a.boundingBox.union(_.boundingBox)),h+=_.vertexCount,f+=_.triangleCount}for(var p=0;p<o.length;p++){var u=o[p];a.attributes[u].init(h)}a.indices=h>=65535?new Uint32Array(3*f):new Uint16Array(3*f);for(var m=0,v=0,g=n.isUseIndices(),y=0;y<e.length;y++){var x=e[y],_=x.geometry,h=_.vertexCount,T=t?x.worldTransform._array:x.localTransform._array;zn.invert(c,T),zn.transpose(c,c);for(var E=0;E<o.length;E++){var u=o[E],b=_.attributes[u],S=a.attributes[u];if(b.value.length){for(var A=b.value.length,N=b.size,w=m*N,M=A/N,s=0;s<A;s++)S.value[w+s]=b.value[s];"position"===u?Gn.forEach(S.value,N,w,M,Gn.transformMat4,T):"normal"!==u&&"tangent"!==u||Gn.forEach(S.value,N,w,M,Gn.transformMat4,c)}}if(g){for(var A=_.indices.length,s=0;s<A;s++)a.indices[s+v]=_.indices[s]+m;v+=A}m+=h}return new Ir({material:i,geometry:a})}},splitByJoints:function(e,t,r,n,i){var a=e.geometry,o=e.skeleton,s=e.material,u=s.shader,l=e.joints;if(a&&o&&l.length){if(l.length<t)return e;for(var c={},h=a.indices,f=a.triangleCount,d=f,_=[],p=a.attributes.joint.value,m=0;m<f;m++)_[m]=!1;for(var v=[],g=[],y=function(e){return l[e]};d>0;){for(var x=[],T=[],E=[],b=0,m=0;m<l.length;m++)T[m]=-1;for(var S=0;S<f;S++)if(!_[S]){for(var A=!0,N=0,m=0;m<3;m++)for(var w=h[3*S+m],M=0;M<4;M++){var R=p[4*w+M];R>=0&&-1===T[R]&&(b<t?(T[R]=b,E[b++]=R,v[N++]=R):A=!1)}if(A)x.push(h.subarray(3*S,3*(S+1))),_[S]=!0,d--;else for(var m=0;m<N;m++)T[v[m]]=-1,E.pop(),b--}g.push({triangles:x,joints:E.map(y),jointReverseMap:T})}var C=new fr({name:e.name}),L=a.getEnabledAttributes();L.splice(L.indexOf("joint"),1);for(var D=[],P=0;P<g.length;P++){var I=g[P],O=I.jointReverseMap,b=I.joints.length,F=s.clone();if(s instanceof Sr)F.jointCount=b;else{var k;if(n&&i){var B={};for(var U in u.vertexDefines)B[U]=u.vertexDefines[U];B.JOINT_COUNT=b,k=n.get(i,{textures:u.getEnabledTextures(),vertexDefines:B,fragmentDefines:u.fragmentDefines,precision:u.precision})}else(k=c[b])||(k=u.clone(),k.define("vertex","JOINT_COUNT",b),c[b]=k);F.attachShader(k,!0)}F.name=[s.name,P].join("-");for(var H=new bn,z=new Ir({name:[e.name,m].join("-"),material:F,geometry:H,skeleton:o,joints:I.joints.slice()}),G=0,q=a.vertexCount,m=0;m<q;m++)D[m]=-1;for(var S=0;S<I.triangles.length;S++)for(var W=I.triangles[S],m=0;m<3;m++){var w=W[m];-1===D[w]&&(D[w]=G,G++)}for(var V=0;V<L.length;V++){var j=L[V],X=H.attributes[j];X.init(G)}H.attributes.joint.value=new Float32Array(4*G),H.indices=G>65535?new Uint32Array(3*I.triangles.length):new Uint16Array(3*I.triangles.length);var K=0;G=0;for(var m=0;m<q;m++)D[m]=-1;for(var S=0;S<I.triangles.length;S++)for(var Y=I.triangles[S],m=0;m<3;m++){var w=Y[m];if(-1===D[w]){D[w]=G;for(var V=0;V<L.length;V++)for(var j=L[V],Z=a.attributes[j],X=H.attributes[j],Q=Z.size,M=0;M<Q;M++)X.value[G*Q+M]=Z.value[w*Q+M];for(var M=0;M<4;M++){var R=a.attributes.joint.value[4*w+M],J=4*G+M;H.attributes.joint.value[J]=R>=0?O[R]:-1}G++}H.indices[K++]=D[w]}H.updateBoundingBox(),C.add(z)}for(var $=e.children(),m=0;m<$.length;m++)C.add($[m]);if(C.position.copy(e.position),C.rotation.copy(e.rotation),C.scale.copy(e.scale),r&&e.getParent()){var ee=e.getParent();ee.remove(e),ee.add(C)}return C}}},Wn=function(){this._fullfilled=!1,this._rejected=!1};Wn.prototype.resolve=function(e){this._fullfilled=!0,this._rejected=!1,this.trigger("success",e)},Wn.prototype.reject=function(e){this._rejected=!0,this._fullfilled=!1,this.trigger("error",e)},Wn.prototype.isFullfilled=function(){return this._fullfilled},Wn.prototype.isRejected=function(){return this._rejected},Wn.prototype.isSettled=function(){return this._fullfilled||this._rejected},Je.extend(Wn.prototype,Ke),Wn.makeRequestTask=function(e,t){if("string"==typeof e)return G(e,t);if(e.url){var r=e;return G(r.url,r.responseType)}if(Array.isArray(e)){var n=e,i=[];return n.forEach(function(e){var t,r;"string"==typeof e?t=e:Object(e)===e&&(t=e.url,r=e.responseType),i.push(G(t,r))}),i}},Wn.makeTask=function(){return new Wn},Je.extend(Wn.prototype,Ke);var Vn=function(){Wn.apply(this,arguments),this._tasks=[],this._fulfilledNumber=0,this._rejectedNumber=0},jn=function(){};jn.prototype=Wn.prototype,Vn.prototype=new jn,Vn.prototype.constructor=Vn,Vn.prototype.all=function(e){var t=0,r=this,n=[];return this._tasks=e,this._fulfilledNumber=0,this._rejectedNumber=0,Je.each(e,function(e,i){e&&e.once&&(t++,e.once("success",function(a){t--,r._fulfilledNumber++,e._fulfilled=!0,e._rejected=!1,n[i]=a,0===t&&r.resolve(n)}),e.once("error",function(){r._rejectedNumber++,e._fulfilled=!1,e._rejected=!0,r.reject(e)}))}),0===t?(setTimeout(function(){r.resolve(n)}),this):this},Vn.prototype.allSettled=function(e){var t=0,r=this,n=[];return 0===e.length?(setTimeout(function(){r.trigger("success",n)}),this):(this._tasks=e,Je.each(e,function(e,i){e&&e.once&&(t++,e.once("success",function(a){t--,r._fulfilledNumber++,e._fulfilled=!0,e._rejected=!1,n[i]=a,0===t&&r.resolve(n)}),e.once("error",function(a){t--,r._rejectedNumber++,e._fulfilled=!1,e._rejected=!0,n[i]=null,0===t&&r.resolve(n)}))}),this)},Vn.prototype.getFulfilledNumber=function(e){if(e){for(var t=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];n instanceof Vn?t+=n.getFulfilledNumber(e):n._fulfilled&&(t+=1)}return t}return this._fulfilledNumber},Vn.prototype.getRejectedNumber=function(e){if(e){for(var t=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];n instanceof Vn?t+=n.getRejectedNumber(e):n._rejected&&(t+=1)}return t}return this._rejectedNumber},Vn.prototype.getSettledNumber=function(e){if(e){for(var t=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];n instanceof Vn?t+=n.getSettledNumber(e):(n._rejected||n._fulfilled)&&(t+=1)}return t}return this._fulfilledNumber+this._rejectedNumber},Vn.prototype.getTaskNumber=function(e){if(e){for(var t=0,r=0;r<this._tasks.length;r++){var n=this._tasks[r];t+=n instanceof Vn?n.getTaskNumber(e):1}return t}return this._tasks.length};var Xn=bn.extend({widthSegments:1,heightSegments:1},function(){this.build()},{build:function(){for(var e=this.heightSegments,t=this.widthSegments,r=this.attributes,n=[],i=[],a=[],o=[],s=0;s<=e;s++)for(var u=s/e,l=0;l<=t;l++){var c=l/t;if(n.push([2*c-1,2*u-1,0]),i&&i.push([c,u]),a&&a.push([0,0,1]),l<t&&s<e){var h=l+s*(t+1);o.push([h,h+1,h+t+1]),o.push([h+t+1,h+1,h+t+2])}}r.position.fromArray(n),r.texcoord0.fromArray(i),r.normal.fromArray(a),this.initIndicesFromArray(o),this.boundingBox=new vt,this.boundingBox.min.set(-1,-1,0),this.boundingBox.max.set(1,1,0)}}),Kn=ot.vec3,Yn=$e.extend({scene:null,camera:null,renderer:null},function(){this._ray=new Jr,this._ndc=new Kt},{pick:function(e,t,r){return this.pickAll(e,t,[],r)[0]||null},pickAll:function(e,t,r,n){return this.renderer.screenToNDC(e,t,this._ndc),this.camera.castRay(this._ndc,this._ray),r=r||[],this._intersectNode(this.scene,r,n||!1),r.sort(this._intersectionCompareFunc),r},_intersectNode:function(e,t,r){e instanceof Cr&&e.isRenderable()&&(e.ignorePicking&&!r||!(e.mode===rt.TRIANGLES&&e.geometry.isUseIndices()||e.geometry.pickByRay||e.geometry.pick)||this._intersectRenderable(e,t));for(var n=0;n<e._children.length;n++)this._intersectNode(e._children[n],t,r)},_intersectRenderable:function(){var e=new ut,t=new ut,r=new ut,n=new Jr,i=new Et;return function(a,o){var s=a.isSkinnedMesh();n.copy(this._ray),Et.invert(i,a.worldTransform),s||n.applyTransform(i);var u=a.geometry;if(s||!u.boundingBox||n.intersectBoundingBox(u.boundingBox)){if(u.pick)return void u.pick(this._ndc.x,this._ndc.y,this.renderer,this.camera,a,o);if(u.pickByRay)return void u.pickByRay(n,a,o);var l,c,h=a.cullFace===rt.BACK&&a.frontFace===rt.CCW||a.cullFace===rt.FRONT&&a.frontFace===rt.CW,f=u.indices,d=u.attributes.position,_=u.attributes.weight,p=u.attributes.joint,m=[];if(d&&d.value&&f){if(s){c=a.skeleton.getSubSkinMatrices(a.__GUID__,a.joints);for(var v=0;v<a.joints.length;v++){m[v]=m[v]||[];for(var g=0;g<16;g++)m[v][g]=c[16*v+g]}var y=[],x=[],T=[],E=[],b=[],S=u.attributes.skinnedPosition;S&&S.value||(u.createAttribute("skinnedPosition","f",3),S=u.attributes.skinnedPosition,S.init(u.vertexCount));for(var v=0;v<u.vertexCount;v++){d.get(v,y),_.get(v,x),p.get(v,T),x[3]=1-x[0]-x[1]-x[2],Kn.set(E,0,0,0);for(var g=0;g<4;g++)T[g]>=0&&x[g]>1e-4&&(Kn.transformMat4(b,y,m[T[g]]),Kn.scaleAndAdd(E,E,b,x[g]));S.set(v,E)}}for(var v=0;v<f.length;v+=3){var A=f[v],N=f[v+1],w=f[v+2],M=s?u.attributes.skinnedPosition:d;if(M.get(A,e._array),M.get(N,t._array),M.get(w,r._array),l=h?n.intersectTriangle(e,t,r,a.culling):n.intersectTriangle(e,r,t,a.culling)){var R=new ut;s?ut.copy(R,l):ut.transformMat4(R,l,a.worldTransform),o.push(new Yn.Intersection(l,R,a,[A,N,w],v/3,ut.dist(R,this._ray.origin)))}}}}}}(),_intersectionCompareFunc:function(e,t){return e.distance-t.distance}});Yn.Intersection=function(e,t,r,n,i,a){this.point=e,this.pointWorld=t,this.target=r,this.triangle=n,this.triangleIndex=i,this.distance=a};var Zn=Lr.isPowerOfTwo,Qn=["px","nx","py","ny","pz","nz"],Jn=Vt.extend(function(){return{image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},mipmaps:[]}},{update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),this.updateCommon(e);var r=this.format,n=this.type;t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_S,this.getAvailableWrapS()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_T,this.getAvailableWrapT()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,this.getAvailableMagFilter()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,this.getAvailableMinFilter());var i=e.getGLExtension("EXT_texture_filter_anisotropic");if(i&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_CUBE_MAP,i.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),36193===n){e.getGLExtension("OES_texture_half_float")||(n=rt.FLOAT)}if(this.mipmaps.length)for(var a=this.width,o=this.height,s=0;s<this.mipmaps.length;s++){var u=this.mipmaps[s];this._updateTextureData(t,u,s,a,o,r,n),a/=2,o/=2}else this._updateTextureData(t,this,0,this.width,this.height,r,n),!this.NPOT&&this.useMipmap&&t.generateMipmap(t.TEXTURE_CUBE_MAP);t.bindTexture(t.TEXTURE_CUBE_MAP,null)},_updateTextureData:function(e,t,r,n,i,a,o){for(var s=0;s<6;s++){var u=Qn[s],l=t.image&&t.image[u];l?e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,a,o,l):e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+s,r,a,n,i,0,a,o,t.pixels&&t.pixels[u])}},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_CUBE_MAP))},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){return this.image.px?Zn(this.image.px.width)&&Zn(this.image.px.height):Zn(this.width)&&Zn(this.height)},isRenderable:function(){return this.image.px?q(this.image.px)&&q(this.image.nx)&&q(this.image.py)&&q(this.image.ny)&&q(this.image.pz)&&q(this.image.nz):!(!this.width||!this.height)},load:function(e,t){var r=0,n=this;return Je.each(e,function(e,i){var a=new Image;t&&(a.crossOrigin=t),a.onload=function(){r--,0===r&&(n.dirty(),n.trigger("success",n)),a.onload=null},a.onerror=function(){r--,a.onerror=null},r++,a.src=e,n.image[i]=a}),this}});Object.defineProperty(Jn.prototype,"width",{get:function(){return this.image&&this.image.px?this.image.px.width:this._width},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}}),Object.defineProperty(Jn.prototype,"height",{get:function(){return this.image&&this.image.px?this.image.px.height:this._height},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}});var $n=rt.FRAMEBUFFER,ei=rt.RENDERBUFFER,ti=rt.DEPTH_ATTACHMENT,ri=rt.COLOR_ATTACHMENT0,ni=$e.extend({depthBuffer:!0,viewport:null,_width:0,_height:0,_textures:null,_boundRenderer:null},function(){this._cache=new At,this._textures={}},{getTextureWidth:function(){return this._width},getTextureHeight:function(){return this._height},bind:function(e){if(e.__currentFrameBuffer){if(e.__currentFrameBuffer===this)return;console.warn("Renderer already bound with another framebuffer. Unbind it first")}e.__currentFrameBuffer=this;var t=e.gl;t.bindFramebuffer($n,this._getFrameBufferGL(e)),this._boundRenderer=e;var r=this._cache;r.put("viewport",e.viewport);var n,i,a=!1;for(var o in this._textures){a=!0;var s=this._textures[o];s&&(n=s.texture.width,i=s.texture.height,this._doAttach(e,s.texture,o,s.target))}this._width=n,this._height=i,!a&&this.depthBuffer&&console.error("Must attach texture before bind, or renderbuffer may have incorrect width and height."),this.viewport?e.setViewport(this.viewport):e.setViewport(0,0,n,i,1);var u=r.get("attached_textures");if(u)for(var o in u)if(!this._textures[o]){var l=u[o];this._doDetach(t,o,l)}if(!r.get("depthtexture_attached")&&this.depthBuffer){r.miss("renderbuffer")&&r.put("renderbuffer",t.createRenderbuffer());var c=r.get("renderbuffer");n===r.get("renderbuffer_width")&&i===r.get("renderbuffer_height")||(t.bindRenderbuffer(ei,c),t.renderbufferStorage(ei,t.DEPTH_COMPONENT16,n,i),r.put("renderbuffer_width",n),r.put("renderbuffer_height",i),t.bindRenderbuffer(ei,null)),r.get("renderbuffer_attached")||(t.framebufferRenderbuffer($n,ti,ei,c),r.put("renderbuffer_attached",!0))}},unbind:function(e){e.__currentFrameBuffer=null,e.gl.bindFramebuffer($n,null),this._boundRenderer=null,this._cache.use(e.__GUID__);var t=this._cache.get("viewport");t&&e.setViewport(t),this.updateMipmap(e)},updateMipmap:function(e){var t=e.gl;for(var r in this._textures){var n=this._textures[r];if(n){var i=n.texture;if(!i.NPOT&&i.useMipmap&&i.minFilter===Vt.LINEAR_MIPMAP_LINEAR){var a=i instanceof Jn?rt.TEXTURE_CUBE_MAP:rt.TEXTURE_2D;t.bindTexture(a,i.getWebGLTexture(e)),t.generateMipmap(a),t.bindTexture(a,null)}}}},checkStatus:function(e){return e.checkFramebufferStatus($n)},_getFrameBufferGL:function(e){var t=this._cache;return t.use(e.__GUID__),t.miss("framebuffer")&&t.put("framebuffer",e.gl.createFramebuffer()),t.get("framebuffer")},attach:function(e,t,r){if(!e.width)throw new Error("The texture attached to color buffer is not a valid.");t=t||ri,r=r||rt.TEXTURE_2D;var n,i=this._boundRenderer,a=i&&i.gl;if(a){var o=this._cache;o.use(i.__GUID__),n=o.get("attached_textures")}var s=this._textures[t];if(!s||s.target!==r||s.texture!==e||!n||null==n[t]){var u=!0;i&&(u=this._doAttach(i,e,t,r),this.viewport||i.setViewport(0,0,e.width,e.height,1)),u&&(this._textures[t]=this._textures[t]||{},this._textures[t].texture=e,this._textures[t].target=r)}},_doAttach:function(e,t,r,n){var i=e.gl,a=t.getWebGLTexture(e),o=this._cache.get("attached_textures");if(o&&o[r]){var s=o[r];if(s.texture===t&&s.target===n)return}r=+r;var u=!0;if(r===ti||r===rt.DEPTH_STENCIL_ATTACHMENT){if(e.getGLExtension("WEBGL_depth_texture")||(console.error("Depth texture is not supported by the browser"),u=!1),t.format!==rt.DEPTH_COMPONENT&&t.format!==rt.DEPTH_STENCIL&&(console.error("The texture attached to depth buffer is not a valid."),u=!1),u){var l=this._cache.get("renderbuffer");l&&(i.framebufferRenderbuffer($n,ti,ei,null),i.deleteRenderbuffer(l),this._cache.put("renderbuffer",!1)),this._cache.put("renderbuffer_attached",!1),this._cache.put("depthtexture_attached",!0)}}return i.framebufferTexture2D($n,r,n,a,0),o||(o={},this._cache.put("attached_textures",o)),o[r]=o[r]||{},o[r].texture=t,o[r].target=n,u},_doDetach:function(e,t,r){e.framebufferTexture2D($n,t,r,null,0);var n=this._cache.get("attached_textures");n&&n[t]&&(n[t]=null),t!==ti&&t!==rt.DEPTH_STENCIL_ATTACHMENT||this._cache.put("depthtexture_attached",!1)},detach:function(e,t){if(this._textures[e]=null,this._boundRenderer){this._cache.use(this._boundRenderer.__GUID__),this._doDetach(this._boundRenderer.gl,e,t)}},dispose:function(e){var t=e.gl,r=this._cache;r.use(e.__GUID__);var n=r.get("renderbuffer");n&&t.deleteRenderbuffer(n);var i=r.get("framebuffer");i&&t.deleteFramebuffer(i),r.deleteContext(e.__GUID__),this._textures={}}});ni.DEPTH_ATTACHMENT=ti,ni.COLOR_ATTACHMENT0=ri,ni.STENCIL_ATTACHMENT=rt.STENCIL_ATTACHMENT,ni.DEPTH_STENCIL_ATTACHMENT=rt.DEPTH_STENCIL_ATTACHMENT;var ii=["px","nx","py","ny","pz","nz"],ai=$e.extend(function(){var e={position:new ut,far:1e3,near:.1,texture:null,shadowMapPass:null},t=e._cameras={px:new rn({fov:90}),nx:new rn({fov:90}),py:new rn({fov:90}),ny:new rn({fov:90}),pz:new rn({fov:90}),nz:new rn({fov:90})};return t.px.lookAt(ut.POSITIVE_X,ut.NEGATIVE_Y),t.nx.lookAt(ut.NEGATIVE_X,ut.NEGATIVE_Y),t.py.lookAt(ut.POSITIVE_Y,ut.POSITIVE_Z),t.ny.lookAt(ut.NEGATIVE_Y,ut.NEGATIVE_Z),t.pz.lookAt(ut.POSITIVE_Z,ut.NEGATIVE_Y),t.nz.lookAt(ut.NEGATIVE_Z,ut.NEGATIVE_Y),e._frameBuffer=new ni,e},{getCamera:function(e){return this._cameras[e]},render:function(e,t,r){var n=e.gl;r||t.update();for(var i=this.texture.width,a=2*Math.atan(i/(i-.5))/Math.PI*180,o=0;o<6;o++){var s=ii[o],u=this._cameras[s];if(ut.copy(u.position,this.position),u.far=this.far,u.near=this.near,u.fov=a,this.shadowMapPass){u.update();var l=t.getBoundingBox();l.applyTransform(u.viewMatrix),t.viewBoundingBoxLastFrame.copy(l),this.shadowMapPass.render(e,t,u,!0)}this._frameBuffer.attach(this.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+o),this._frameBuffer.bind(e),e.render(t,u,!0),this._frameBuffer.unbind(e)}},dispose:function(e){this._frameBuffer.dispose(e)}}),oi=bn.extend({widthSegments:20,heightSegments:20,phiStart:0,phiLength:2*Math.PI,thetaStart:0,thetaLength:Math.PI,radius:1},function(){this.build()},{build:function(){var e=this.heightSegments,t=this.widthSegments,r=this.attributes.position,n=this.attributes.texcoord0,i=this.attributes.normal,a=(t+1)*(e+1);r.init(a),n.init(a),i.init(a);var o,s,u,l,c,h,f,d=a>65535?Uint32Array:Uint16Array,_=this.indices=new d(t*e*6),p=this.radius,m=this.phiStart,v=this.phiLength,g=this.thetaStart,y=this.thetaLength,p=this.radius,x=[],T=[],E=0,b=1/p;for(f=0;f<=e;f++)for(h=0;h<=t;h++)l=h/t,c=f/e,o=-p*Math.cos(m+l*v)*Math.sin(g+c*y),s=p*Math.cos(g+c*y),u=p*Math.sin(m+l*v)*Math.sin(g+c*y),x[0]=o,x[1]=s,x[2]=u,T[0]=l,T[1]=c,r.set(E,x),n.set(E,T),x[0]*=b,x[1]*=b,x[2]*=b,i.set(E,x),E++;var S,A,N,w,M=t+1,R=0;for(f=0;f<e;f++)for(h=0;h<t;h++)A=f*M+h,S=f*M+h+1,w=(f+1)*M+h+1,N=(f+1)*M+h,_[R++]=S,_[R++]=A,_[R++]=w,_[R++]=A,_[R++]=N,_[R++]=w;this.boundingBox=new vt,this.boundingBox.max.set(p,p,p),this.boundingBox.min.set(-p,-p,-p)}});Ut.import(Sn);var si=Ir.extend(function(){var e=new Ut({vertex:Ut.source("qtek.basic.vertex"),fragment:Ut.source("qtek.basic.fragment")});e.enableTexture("diffuseMap");var t=new jt({shader:e,depthMask:!1});return{scene:null,geometry:new oi({widthSegments:30,heightSegments:30}),material:t,environmentMap:null,culling:!1}},function(){var e=this.scene;e&&this.attachScene(e),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)},{attachScene:function(e){this.scene&&this.detachScene(),this.scene=e,e.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&this.scene.off("beforerender",this._beforeRenderScene),this.scene=null},_beforeRenderScene:function(e,t,r){this.position.copy(r.getWorldPosition()),this.update(),e.renderQueue([this],r)},setEnvironmentMap:function(e){this.material.set("diffuseMap",e)},getEnvironmentMap:function(){return this.material.get("diffuseMap")},dispose:function(e){this.detachScene(),this.geometry.dispose(e),this.material.dispose(e)}}),ui=W("DXT1"),li=W("DXT3"),ci=W("DXT5"),hi={parse:function(e,t){var r=new Int32Array(e,0,31);if(542327876!==r[0])return null;if(4&!r(20))return null;var n,i,a=r(21),o=r[4],s=r[3],u=512&r[28],l=131072&r[2];switch(a){case ui:n=8,i=Vt.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case li:n=16,i=Vt.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case ci:n=16,i=Vt.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}var c=r[1]+4,h=u?6:1,f=1;l&&(f=Math.max(1,r[7]));for(var d=[],_=0;_<h;_++){var p=o,m=s;d[_]=new Pr({width:p,height:m,format:i});for(var v=[],g=0;g<f;g++){var y=Math.max(4,p)/4*Math.max(4,m)/4*n,x=new Uint8Array(e,c,y);c+=y,p*=.5,m*=.5,v[g]=x}d[_].pixels=v[0],l&&(d[_].mipmaps=v)}if(!t)return d[0];t.width=d[0].width,t.height=d[0].height,t.format=d[0].format,t.pixels=d[0].pixels,t.mipmaps=d[0].mipmaps}},fi=String.fromCharCode,di=8,_i=32767,pi={parseRGBE:function(e,t,r){null==r&&(r=0);var n=new Uint8Array(e),i=n.length;if("#?"===j(n,0,2)){for(var a=2;a<i&&("\n"!==fi(n[a])||"\n"!==fi(n[a+1]));a++);if(!(a>=i)){a+=2;for(var o="";a<i;a++){var s=fi(n[a]);if("\n"===s)break;o+=s}var u=o.split(" "),l=parseInt(u[1]),c=parseInt(u[3]);if(c&&l){for(var h=a+1,f=[],d=0;d<c;d++){f[d]=[];for(var _=0;_<4;_++)f[d][_]=0}for(var p=new Float32Array(c*l*4),m=0,v=0;v<l;v++){var h=Y(f,n,h,c);if(!h)return null;for(var d=0;d<c;d++)V(f[d],p,m,r),m+=4}return t||(t=new Pr),t.width=c,t.height=l,t.pixels=p,t.type=Vt.FLOAT,t}}}},parseRGBEFromPNG:function(e){}},mi={loadTexture:function(e,t,r,n){var i;if("function"==typeof t?(r=t,n=r,t={}):t=t||{},"string"==typeof e){if(e.match(/.hdr$/)||"hdr"===t.fileType)return i=new Pr({width:0,height:0}),mi._fetchTexture(e,function(e){pi.parseRGBE(e,i,t.exposure),i.dirty(),r&&r(i)},n),i;e.match(/.dds$/)||"dds"===t.fileType?(i=new Pr({width:0,height:0}),mi._fetchTexture(e,function(e){hi.parse(e,i),i.dirty(),r&&r(i)},n)):(i=new Pr,i.load(e),i.success(r),i.error(n))}else if("object"==typeof e&&void 0!==e.px){var i=new Jn;i.load(e),i.success(r),i.error(n)}return i},loadPanorama:function(e,t,r,n,i,a){var o=this;"function"==typeof n?(i=n,a=i,n={}):n=n||{},mi.loadTexture(t,n,function(t){t.flipY=n.flipY||!1,o.panoramaToCubeMap(e,t,r,n),t.dispose(e),i&&i(r)},a)},panoramaToCubeMap:function(e,t,r,n){var i=new ai,a=new si({scene:new _r});return a.material.set("diffuseMap",t),n=n||{},n.encodeRGBM&&a.material.shader.define("fragment","RGBM_ENCODE"),i.texture=r,i.render(e,a.scene),i.texture=null,i.dispose(e),r},heightToNormal:function(e,t){var r=document.createElement("canvas"),n=r.width=e.width,i=r.height=e.height,a=r.getContext("2d");a.drawImage(e,0,0,n,i),t=t||!1;for(var o=a.getImageData(0,0,n,i),s=a.createImageData(n,i),u=0;u<o.data.length;u+=4){if(t){var l=o.data[u],c=o.data[u+1],h=o.data[u+2];if(Math.abs(l-c)+Math.abs(c-h)>20)return console.warn("Given image is not a height map"),e}var f,d,_,p;u%(4*n)==0?(f=o.data[u],_=o.data[u+4]):u%(4*n)==4*(n-1)?(f=o.data[u-4],_=o.data[u]):(f=o.data[u-4],_=o.data[u+4]),u<4*n?(d=o.data[u],p=o.data[u+4*n]):u>n*(i-1)*4?(d=o.data[u-4*n],p=o.data[u]):(d=o.data[u-4*n],p=o.data[u+4*n]),s.data[u]=f-_+127,s.data[u+1]=d-p+127,s.data[u+2]=255,s.data[u+3]=255}return a.putImageData(s,0,0),r},isHeightImage:function(e,t,r){if(!e||!e.width||!e.height)return!1;var n=document.createElement("canvas"),i=n.getContext("2d"),a=t||32;r=r||20,n.width=n.height=a,i.drawImage(e,0,0,a,a);for(var o=i.getImageData(0,0,a,a),s=0;s<o.data.length;s+=4){var u=o.data[s],l=o.data[s+1],c=o.data[s+2];if(Math.abs(u-l)+Math.abs(l-c)>r)return!1}return!0},_fetchTexture:function(e,t,r){ar.get({url:e,responseType:"arraybuffer",onload:t,onerror:r})},createChessboard:function(e,t,r,n){e=e||512,t=t||64,r=r||"black",n=n||"white";var i=Math.ceil(e/t),a=document.createElement("canvas");a.width=e,a.height=e;var o=a.getContext("2d");o.fillStyle=n,o.fillRect(0,0,e,e),o.fillStyle=r;for(var s=0;s<i;s++)for(var u=0;u<i;u++){var l=u%2?s%2:s%2-1;l&&o.fillRect(s*t,u*t,t,t)}return new Pr({image:a,anisotropic:8})},createBlank:function(e){var t=document.createElement("canvas");t.width=1,t.height=1;var r=t.getContext("2d");return r.fillStyle=e,r.fillRect(0,0,1,1),new Pr({image:t})}},vi=dr.extend({range:20,umbraAngle:30,penumbraAngle:45,falloffFactor:2,shadowBias:2e-4,shadowSlopeScale:2},{type:"SPOT_LIGHT",uniformTemplates:{spotLightPosition:{type:"3f",value:function(e){return e.getWorldPosition()._array}},spotLightRange:{type:"1f",value:function(e){return e.range}},spotLightUmbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.umbraAngle*Math.PI/180)}},spotLightPenumbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.penumbraAngle*Math.PI/180)}},spotLightFalloffFactor:{type:"1f",value:function(e){return e.falloffFactor}},spotLightDirection:{type:"3f",value:function(e){return e.__dir=e.__dir||new ut,e.__dir.copy(e.worldTransform.z).negate()._array}},spotLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}},clone:function(){var e=dr.prototype.clone.call(this);return e.range=this.range,e.umbraAngle=this.umbraAngle,e.penumbraAngle=this.penumbraAngle,e.falloffFactor=this.falloffFactor,e.shadowBias=this.shadowBias,e.shadowSlopeScale=this.shadowSlopeScale,e}}),gi=dr.extend({shadowBias:.001,shadowSlopeScale:2,
shadowCascade:1,cascadeSplitLogFactor:.2},{type:"DIRECTIONAL_LIGHT",uniformTemplates:{directionalLightDirection:{type:"3f",value:function(e){return e.__dir=e.__dir||new ut,e.__dir.copy(e.worldTransform.z).normalize().negate()._array}},directionalLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}},clone:function(){var e=dr.prototype.clone.call(this);return e.shadowBias=this.shadowBias,e.shadowSlopeScale=this.shadowSlopeScale,e}}),yi=dr.extend({range:100,castShadow:!1},{type:"POINT_LIGHT",uniformTemplates:{pointLightPosition:{type:"3f",value:function(e){return e.getWorldPosition()._array}},pointLightRange:{type:"1f",value:function(e){return e.range}},pointLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}},clone:function(){var e=dr.prototype.clone.call(this);return e.range=this.range,e}});Ut.import("\n@export qtek.compositor.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\nvarying vec2 v_Texcoord;\nvoid main()\n{\n    v_Texcoord = texcoord;\n    gl_Position = worldViewProjection * vec4(position, 1.0);\n}\n@end");var xi=new Xn,Ti=new Ir({geometry:xi,frustumCulling:!1}),Ei=new nn,bi=$e.extend(function(){return{fragment:"",outputs:null,material:null,blendWithPrevious:!1,clearColor:!1,clearDepth:!0}},function(){var e=new Ut({vertex:Ut.source("qtek.compositor.vertex"),fragment:this.fragment}),t=new jt({shader:e});e.enableTexturesAll(),this.material=t},{setUniform:function(e,t){var r=this.material.uniforms[e];r&&(r.value=t)},getUniform:function(e){var t=this.material.uniforms[e];if(t)return t.value},attachOutput:function(e,t){this.outputs||(this.outputs={}),t=t||rt.COLOR_ATTACHMENT0,this.outputs[t]=e},detachOutput:function(e){for(var t in this.outputs)this.outputs[t]===e&&(this.outputs[t]=null)},bind:function(e,t){if(this.outputs)for(var r in this.outputs){var n=this.outputs[r];n&&t.attach(n,r)}t&&t.bind(e)},unbind:function(e,t){t.unbind(e)},render:function(e,t){var r=e.gl;if(t){this.bind(e,t);var n=e.getGLExtension("EXT_draw_buffers");if(n&&this.outputs){var i=[];for(var a in this.outputs)(a=+a)>=r.COLOR_ATTACHMENT0&&a<=r.COLOR_ATTACHMENT0+8&&i.push(a);n.drawBuffersEXT(i)}}this.trigger("beforerender",this,e);var o=this.clearDepth?r.DEPTH_BUFFER_BIT:0;if(r.depthMask(!0),this.clearColor){o|=r.COLOR_BUFFER_BIT,r.colorMask(!0,!0,!0,!0);var s=this.clearColor;Array.isArray(s)&&r.clearColor(s[0],s[1],s[2],s[3])}r.clear(o),this.blendWithPrevious?(r.enable(r.BLEND),this.material.transparent=!0):(r.disable(r.BLEND),this.material.transparent=!1),this.renderQuad(e),this.trigger("afterrender",this,e),t&&this.unbind(e,t)},renderQuad:function(e){Ti.material=this.material,e.renderQueue([Ti],Ei)},dispose:function(e){this.material.dispose(e)}}),Si=function(){this._pool={},this._allocatedTextures=[]};Si.prototype={constructor:Si,get:function(e){var t=Z(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]);var r=this._pool[t];if(!r.length){var n=new Pr(e);return this._allocatedTextures.push(n),n}return r.pop()},put:function(e){var t=Z(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]),this._pool[t].push(e)},clear:function(e){for(var t=0;t<this._allocatedTextures.length;t++)this._allocatedTextures[t].dispose(e);this._pool={},this._allocatedTextures=[]}};var Ai={width:512,height:512,type:rt.UNSIGNED_BYTE,format:rt.RGBA,wrapS:rt.CLAMP_TO_EDGE,wrapT:rt.CLAMP_TO_EDGE,minFilter:rt.LINEAR_MIPMAP_LINEAR,magFilter:rt.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1},Ni=Object.keys(Ai),wi=ot.mat4,Mi=["px","nx","py","ny","pz","nz"];Ut.import("@export qtek.sm.depth.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nattribute vec3 position : POSITION;\n#ifdef SHADOW_TRANSPARENT\nattribute vec2 texcoord : TEXCOORD_0;\n#endif\n@import qtek.chunk.skinning_header\nvarying vec4 v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\nvoid main(){\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    v_ViewPosition = worldViewProjection * vec4(skinnedPosition, 1.0);\n    gl_Position = v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\n    v_Texcoord = texcoord;\n#endif\n}\n@end\n@export qtek.sm.depth.fragment\nvarying vec4 v_ViewPosition;\n#ifdef SHADOW_TRANSPARENT\nvarying vec2 v_Texcoord;\n#endif\nuniform float bias : 0.001;\nuniform float slopeScale : 1.0;\n#ifdef SHADOW_TRANSPARENT\nuniform sampler2D transparentMap;\n#endif\n@import qtek.util.encode_float\nvoid main(){\n    float depth = v_ViewPosition.z / v_ViewPosition.w;\n#ifdef USE_VSM\n    depth = depth * 0.5 + 0.5;\n    float moment1 = depth;\n    float moment2 = depth * depth;\n    float dx = dFdx(depth);\n    float dy = dFdy(depth);\n    moment2 += 0.25*(dx*dx+dy*dy);\n    gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);\n#else\n    float dx = dFdx(depth);\n    float dy = dFdy(depth);\n    depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;\n#ifdef SHADOW_TRANSPARENT\n    if (texture2D(transparentMap, v_Texcoord).a <= 0.1) {\n        gl_FragColor = encodeFloat(0.9999);\n        return;\n    }\n#endif\n    gl_FragColor = encodeFloat(depth * 0.5 + 0.5);\n#endif\n}\n@end\n@export qtek.sm.debug_depth\nuniform sampler2D depthMap;\nvarying vec2 v_Texcoord;\n@import qtek.util.decode_float\nvoid main() {\n    vec4 tex = texture2D(depthMap, v_Texcoord);\n#ifdef USE_VSM\n    gl_FragColor = vec4(tex.rgb, 1.0);\n#else\n    float depth = decodeFloat(tex);\n    gl_FragColor = vec4(depth, depth, depth, 1.0);\n#endif\n}\n@end\n@export qtek.sm.distance.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 world : WORLD;\nattribute vec3 position : POSITION;\n@import qtek.chunk.skinning_header\nvarying vec3 v_WorldPosition;\nvoid main (){\n    vec3 skinnedPosition = position;\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition , 1.0);\n    v_WorldPosition = (world * vec4(skinnedPosition, 1.0)).xyz;\n}\n@end\n@export qtek.sm.distance.fragment\nuniform vec3 lightPosition;\nuniform float range : 100;\nvarying vec3 v_WorldPosition;\n@import qtek.util.encode_float\nvoid main(){\n    float dist = distance(lightPosition, v_WorldPosition);\n#ifdef USE_VSM\n    gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);\n#else\n    dist = dist / range;\n    gl_FragColor = encodeFloat(dist);\n#endif\n}\n@end\n@export qtek.plugin.shadow_map_common\n@import qtek.util.decode_float\nfloat tapShadowMap(sampler2D map, vec2 uv, float z){\n    vec4 tex = texture2D(map, uv);\n    return step(z, decodeFloat(tex) * 2.0 - 1.0);\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize, vec2 scale) {\n    float shadowContrib = tapShadowMap(map, uv, z);\n    vec2 offset = vec2(1.0 / textureSize) * scale;\n#ifdef PCF_KERNEL_SIZE\n    for (int _idx_ = 0; _idx_ < PCF_KERNEL_SIZE; _idx_++) {{\n        shadowContrib += tapShadowMap(map, uv + offset * pcfKernel[_idx_], z);\n    }}\n    return shadowContrib / float(PCF_KERNEL_SIZE + 1);\n#else\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, 0.0), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, -offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(offset.x, -offset.y), z);\n    shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset.y), z);\n    return shadowContrib / 9.0;\n#endif\n}\nfloat pcf(sampler2D map, vec2 uv, float z, float textureSize) {\n    return pcf(map, uv, z, textureSize, vec2(1.0));\n}\nfloat chebyshevUpperBound(vec2 moments, float z){\n    float p = 0.0;\n    z = z * 0.5 + 0.5;\n    if (z <= moments.x) {\n        p = 1.0;\n    }\n    float variance = moments.y - moments.x * moments.x;\n    variance = max(variance, 0.0000001);\n    float mD = moments.x - z;\n    float pMax = variance / (variance + mD * mD);\n    pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);\n    return max(p, pMax);\n}\nfloat computeShadowContrib(\n    sampler2D map, mat4 lightVPM, vec3 position, float textureSize, vec2 scale, vec2 offset\n) {\n    vec4 posInLightSpace = lightVPM * vec4(position, 1.0);\n    posInLightSpace.xyz /= posInLightSpace.w;\n    float z = posInLightSpace.z;\n    if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&\n        all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){\n        vec2 uv = (posInLightSpace.xy+1.0) / 2.0;\n        #ifdef USE_VSM\n            vec2 moments = texture2D(map, uv * scale + offset).xy;\n            return chebyshevUpperBound(moments, z);\n        #else\n            return pcf(map, uv * scale + offset, z, textureSize, scale);\n        #endif\n    }\n    return 1.0;\n}\nfloat computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position, float textureSize) {\n    return computeShadowContrib(map, lightVPM, position, textureSize, vec2(1.0), vec2(0.0));\n}\nfloat computeShadowContribOmni(samplerCube map, vec3 direction, float range)\n{\n    float dist = length(direction);\n    vec4 shadowTex = textureCube(map, direction);\n#ifdef USE_VSM\n    vec2 moments = shadowTex.xy;\n    float variance = moments.y - moments.x * moments.x;\n    float mD = moments.x - dist;\n    float p = variance / (variance + mD * mD);\n    if(moments.x + 0.001 < dist){\n        return clamp(p, 0.0, 1.0);\n    }else{\n        return 1.0;\n    }\n#else\n    return step(dist, (decodeFloat(shadowTex) + 0.0002) * range);\n#endif\n}\n@end\n@export qtek.plugin.compute_shadow_map\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT) || defined(POINT_LIGHT_SHADOWMAP_COUNT)\n#ifdef SPOT_LIGHT_SHADOWMAP_COUNT\nuniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_COUNT];\nuniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_COUNT];\nuniform float spotLightShadowMapSizes[SPOT_LIGHT_SHADOWMAP_COUNT];\n#endif\n#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_COUNT\n#if defined(SHADOW_CASCADE)\nuniform sampler2D directionalLightShadowMaps[1];\nuniform mat4 directionalLightMatrices[SHADOW_CASCADE];\nuniform float directionalLightShadowMapSizes[1];\nuniform float shadowCascadeClipsNear[SHADOW_CASCADE];\nuniform float shadowCascadeClipsFar[SHADOW_CASCADE];\n#else\nuniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\nuniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\nuniform float directionalLightShadowMapSizes[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT];\n#endif\n#endif\n#ifdef POINT_LIGHT_SHADOWMAP_COUNT\nuniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_COUNT];\nuniform float pointLightShadowMapSizes[POINT_LIGHT_SHADOWMAP_COUNT];\n#endif\nuniform bool shadowEnabled : true;\n#ifdef PCF_KERNEL_SIZE\nuniform vec2 pcfKernel[PCF_KERNEL_SIZE];\n#endif\n@import qtek.plugin.shadow_map_common\n#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_COUNT] ) {\n    float shadowContrib;\n    for(int _idx_ = 0; _idx_ < SPOT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        shadowContrib = computeShadowContrib(\n            spotLightShadowMaps[_idx_], spotLightMatrices[_idx_], position,\n            spotLightShadowMapSizes[_idx_]\n        );\n        shadowContribs[_idx_] = shadowContrib;\n    }}\n    for(int _idx_ = SPOT_LIGHT_SHADOWMAP_COUNT; _idx_ < SPOT_LIGHT_COUNT; _idx_++){{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#endif\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n#ifdef SHADOW_CASCADE\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n    float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)\n                    / (gl_DepthRange.far - gl_DepthRange.near);\n    float shadowContrib;\n    shadowContribs[0] = 1.0;\n    for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{\n        if (\n            depth >= shadowCascadeClipsNear[_idx_] &&\n            depth <= shadowCascadeClipsFar[_idx_]\n        ) {\n            shadowContrib = computeShadowContrib(\n                directionalLightShadowMaps[0], directionalLightMatrices[_idx_], position,\n                directionalLightShadowMapSizes[0],\n                vec2(1.0 / float(SHADOW_CASCADE), 1.0),\n                vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)\n            );\n            shadowContribs[0] = shadowContrib;\n        }\n    }}\n    for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#else\nvoid computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){\n    float shadowContrib;\n    for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        shadowContrib = computeShadowContrib(\n            directionalLightShadowMaps[_idx_], directionalLightMatrices[_idx_], position,\n            directionalLightShadowMapSizes[_idx_]\n        );\n        shadowContribs[_idx_] = shadowContrib;\n    }}\n    for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#endif\n#endif\n#if defined(POINT_LIGHT_SHADOWMAP_COUNT)\nvoid computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_COUNT] ){\n    vec3 lightPosition;\n    vec3 direction;\n    for(int _idx_ = 0; _idx_ < POINT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{\n        lightPosition = pointLightPosition[_idx_];\n        direction = position - lightPosition;\n        shadowContribs[_idx_] = computeShadowContribOmni(pointLightShadowMaps[_idx_], direction, pointLightRange[_idx_]);\n    }}\n    for(int _idx_ = POINT_LIGHT_SHADOWMAP_COUNT; _idx_ < POINT_LIGHT_COUNT; _idx_++) {{\n        shadowContribs[_idx_] = 1.0;\n    }}\n}\n#endif\n#endif\n@end");var Ri=$e.extend(function(){return{softShadow:Ri.PCF,shadowBlur:1,lightFrustumBias:"auto",kernelPCF:new Float32Array([1,0,1,1,-1,1,0,1,-1,0,-1,-1,1,-1,0,-1]),precision:"mediump",_lastRenderNotCastShadow:!1,_frameBuffer:new ni,_textures:{},_shadowMapNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},_meshMaterials:{},_depthMaterials:{},_depthShaders:{},_distanceMaterials:{},_opaqueCasters:[],_receivers:[],_lightsCastShadow:[],_lightCameras:{},_texturePool:new Si}},function(){this._gaussianPassH=new bi({fragment:Ut.source("qtek.compositor.gaussian_blur")}),this._gaussianPassV=new bi({fragment:Ut.source("qtek.compositor.gaussian_blur")}),this._gaussianPassH.setUniform("blurSize",this.shadowBlur),this._gaussianPassH.setUniform("blurDir",0),this._gaussianPassV.setUniform("blurSize",this.shadowBlur),this._gaussianPassV.setUniform("blurDir",1),this._outputDepthPass=new bi({fragment:Ut.source("qtek.sm.debug_depth")})},{render:function(e,t,r,n){this.trigger("beforerender",this,e,t,r),this._renderShadowPass(e,t,r,n),this.trigger("afterrender",this,e,t,r)},renderDebug:function(e,t){e.saveClear();var r=e.viewport,n=0,i=t||r.width/4,a=i;this.softShadow===Ri.VSM?this._outputDepthPass.material.shader.define("fragment","USE_VSM"):this._outputDepthPass.material.shader.undefine("fragment","USE_VSM");for(var o in this._textures){var s=this._textures[o];e.setViewport(n,0,i*s.width/s.height,a),this._outputDepthPass.setUniform("depthMap",s),this._outputDepthPass.render(e),n+=i*s.width/s.height}e.setViewport(r),e.restoreClear()},_bindDepthMaterial:function(e,t,r){for(var n=0;n<e.length;n++){var i,a,o=e[n],s=o.material.shadowTransparentMap instanceof Pr,u=o.material.shadowTransparentMap,l=o.joints&&o.joints.length;s?(i=l+"-"+u.__GUID__,a=l+"-t"):(i=l,a=l),o.useSkinMatricesTexture&&(i+="-s",a+="-s");var c=o.shadowDepthMaterial||this._depthMaterials[i],h=o.shadowDepthMaterial?o.shadowDepthMaterial.shader:this._depthShaders[a];o.material!==c&&(h||(h=new Ut({vertex:Ut.source("qtek.sm.depth.vertex"),fragment:Ut.source("qtek.sm.depth.fragment"),precision:this.precision}),l>0&&(h.define("vertex","SKINNING"),h.define("vertex","JOINT_COUNT",l)),s&&h.define("both","SHADOW_TRANSPARENT"),o.useSkinMatricesTexture&&h.define("vertex","USE_SKIN_MATRICES_TEXTURE"),this._depthShaders[a]=h),c||(c=new jt({shader:h}),this._depthMaterials[i]=c),o.material=c,this.softShadow===Ri.VSM?h.define("fragment","USE_VSM"):h.undefine("fragment","USE_VSM"),c.setUniform("bias",t),c.setUniform("slopeScale",r),s&&c.set("shadowTransparentMap",u))}},_bindDistanceMaterial:function(e,t){for(var r=t.getWorldPosition()._array,n=0;n<e.length;n++){var i=e[n],a=i.joints&&i.joints.length,o=this._distanceMaterials[a];i.material!==o&&(o||(o=new jt({shader:new Ut({vertex:Ut.source("qtek.sm.distance.vertex"),fragment:Ut.source("qtek.sm.distance.fragment"),precision:this.precision})}),a>0&&(o.shader.define("vertex","SKINNING"),o.shader.define("vertex","JOINT_COUNT",a)),this._distanceMaterials[a]=o),i.material=o,this.softShadow===Ri.VSM?o.shader.define("fragment","USE_VSM"):o.shader.undefine("fragment","USE_VSM")),o.set("lightPosition",r),o.set("range",t.range)}},saveMaterial:function(e){for(var t=0;t<e.length;t++){var r=e[t];this._meshMaterials[r.__GUID__]=r.material}},restoreMaterial:function(e){for(var t=0;t<e.length;t++){var r=e[t],n=this._meshMaterials[r.__GUID__];n&&(r.material=n)}},_updateCasterAndReceiver:function(e,t){t.castShadow&&this._opaqueCasters.push(t),t.receiveShadow?(this._receivers.push(t),t.material.set("shadowEnabled",1),t.material.set("pcfKernel",this.kernelPCF)):t.material.set("shadowEnabled",0),!t.material.shader&&t.material.updateShader&&t.material.updateShader(e);var r=t.material.shader;if(this.softShadow===Ri.VSM)r.define("fragment","USE_VSM"),r.undefine("fragment","PCF_KERNEL_SIZE");else{r.undefine("fragment","USE_VSM");var n=this.kernelPCF;n&&n.length?r.define("fragment","PCF_KERNEL_SIZE",n.length/2):r.undefine("fragment","PCF_KERNEL_SIZE")}},_update:function(e,t){for(var r=0;r<t.opaqueQueue.length;r++)this._updateCasterAndReceiver(e,t.opaqueQueue[r]);for(var r=0;r<t.transparentQueue.length;r++)this._updateCasterAndReceiver(e,t.transparentQueue[r]);for(var r=0;r<t.lights.length;r++){var n=t.lights[r];n.castShadow&&this._lightsCastShadow.push(n)}},_renderShadowPass:function(e,t,r,n){function i(e){return e.height}for(var a in this._shadowMapNumber)this._shadowMapNumber[a]=0;this._lightsCastShadow.length=0,this._opaqueCasters.length=0,this._receivers.length=0;var o=e.gl;if(n||t.update(),r.update(),this._update(e,t),this._lightsCastShadow.length||!this._lastRenderNotCastShadow){this._lastRenderNotCastShadow=0===this._lightsCastShadow,o.enable(o.DEPTH_TEST),o.depthMask(!0),o.disable(o.BLEND),o.clearColor(1,1,1,1);var s=[],u=[],l=[],c=[],h=[],f=[];this.saveMaterial(this._opaqueCasters);for(var d,_=0;_<this._lightsCastShadow.length;_++){var p=this._lightsCastShadow[_];if(p instanceof gi){if(d){console.warn("Only one dire light supported with shadow cascade");continue}if(p.shadowCascade>1&&(d=p,p.shadowCascade>4)){console.warn("Support at most 4 cascade");continue}this.renderDirectionalLightShadow(e,t,r,p,this._opaqueCasters,h,c,l)}else p instanceof vi?this.renderSpotLightShadow(e,p,this._opaqueCasters,u,s):p instanceof yi&&this.renderPointLightShadow(e,p,this._opaqueCasters,f);this._shadowMapNumber[p.type]++}this.restoreMaterial(this._opaqueCasters);var m=h.slice(),v=h.slice();m.pop(),v.shift(),m.reverse(),v.reverse(),c.reverse();for(var g=s.map(i),y=l.map(i),x={},_=0;_<this._receivers.length;_++){var T=this._receivers[_],E=T.material,b=E.shader;if(!x[b.__GUID__]){var S=!1;for(var A in this._shadowMapNumber){var N=this._shadowMapNumber[A],w=A+"_SHADOWMAP_COUNT";b.fragmentDefines[w]!==N&&(N>0?(b.fragmentDefines[w]=N,S=!0):b.isDefined("fragment",w)&&(b.undefine("fragment",w),S=!0))}S&&b.dirty(),d?b.define("fragment","SHADOW_CASCADE",d.shadowCascade):b.undefine("fragment","SHADOW_CASCADE"),x[b.__GUID__]=!0}s.length>0&&(E.setUniform("spotLightShadowMaps",s),E.setUniform("spotLightMatrices",u),E.setUniform("spotLightShadowMapSizes",g)),l.length>0&&(E.setUniform("directionalLightShadowMaps",l),d&&(E.setUniform("shadowCascadeClipsNear",m),E.setUniform("shadowCascadeClipsFar",v)),E.setUniform("directionalLightMatrices",c),E.setUniform("directionalLightShadowMapSizes",y)),f.length>0&&E.setUniform("pointLightShadowMaps",f)}}},renderDirectionalLightShadow:function(){var e=new Zr,t=new Et,r=new vt,n=new Et,i=new Et,a=new Et,o=new Et;return function(s,u,l,c,h,f,d,_){var p=c.shadowBias;if(this._bindDepthMaterial(h,p,c.shadowSlopeScale),h.sort(nr.opaqueSortFunc),!u.viewBoundingBoxLastFrame.isFinite()){var m=u.getBoundingBox();u.viewBoundingBoxLastFrame.copy(m).applyTransform(l.viewMatrix)}var v=Math.min(-u.viewBoundingBoxLastFrame.min.z,l.far),g=Math.max(-u.viewBoundingBoxLastFrame.max.z,l.near),y=this._getDirectionalLightCamera(c,u,l),x=a._array;o.copy(y.projectionMatrix),wi.invert(i._array,y.worldTransform._array),wi.multiply(i._array,i._array,l.worldTransform._array),wi.multiply(x,o._array,i._array);for(var T=[],E=l instanceof rn,b=(l.near+l.far)/(l.near-l.far),S=2*l.near*l.far/(l.near-l.far),A=0;A<=c.shadowCascade;A++){var N=g*Math.pow(v/g,A/c.shadowCascade),w=g+(v-g)*A/c.shadowCascade,M=N*c.cascadeSplitLogFactor+w*(1-c.cascadeSplitLogFactor);T.push(M),f.push(-(-M*b+S)/-M)}var R=this._getTexture(c,c.shadowCascade);_.push(R);var C=s.viewport,L=s.gl;this._frameBuffer.attach(R),this._frameBuffer.bind(s),L.clear(L.COLOR_BUFFER_BIT|L.DEPTH_BUFFER_BIT);for(var A=0;A<c.shadowCascade;A++){var D=T[A],P=T[A+1];E?wi.perspective(t._array,l.fov/180*Math.PI,l.aspect,D,P):wi.ortho(t._array,l.left,l.right,l.bottom,l.top,D,P),e.setFromProjection(t),e.getTransformedBoundingBox(r,i),r.applyProjection(o);var I=r.min._array,O=r.max._array;I[0]=Math.max(I[0],-1),I[1]=Math.max(I[1],-1),O[0]=Math.min(O[0],1),O[1]=Math.min(O[1],1),n.ortho(I[0],O[0],I[1],O[1],1,-1),y.projectionMatrix.multiplyLeft(n);var F=c.shadowResolution||512;s.setViewport((c.shadowCascade-A-1)*F,0,F,F,1);for(var k in this._depthMaterials)this._depthMaterials[k].set("shadowBias",p);s.renderQueue(h,y),this.softShadow===Ri.VSM&&this._gaussianFilter(s,R,R.width);var B=new Et;B.copy(y.viewMatrix).multiplyLeft(y.projectionMatrix),d.push(B._array),y.projectionMatrix.copy(o)}this._frameBuffer.unbind(s),s.setViewport(C)}}(),renderSpotLightShadow:function(e,t,r,n,i){this._bindDepthMaterial(r,t.shadowBias,t.shadowSlopeScale),r.sort(nr.opaqueSortFunc);var a=this._getTexture(t),o=this._getSpotLightCamera(t),s=e.gl;this._frameBuffer.attach(a),this._frameBuffer.bind(e),s.clear(s.COLOR_BUFFER_BIT|s.DEPTH_BUFFER_BIT),e.renderQueue(r,o),this._frameBuffer.unbind(e),this.softShadow===Ri.VSM&&this._gaussianFilter(e,a,a.width);var u=new Et;u.copy(o.worldTransform).invert().multiplyLeft(o.projectionMatrix),i.push(a),n.push(u._array)},renderPointLightShadow:function(e,t,r,n){var i=this._getTexture(t),a=e.gl;n.push(i),this._bindDistanceMaterial(r,t);for(var o=0;o<6;o++){var s=Mi[o],u=this._getPointLightCamera(t,s);this._frameBuffer.attach(i,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+o),this._frameBuffer.bind(e),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),e.renderQueue(r,u)}this._frameBuffer.unbind(e)},_gaussianFilter:function(e,t,r){var n={width:r,height:r,type:Vt.FLOAT},i=this._texturePool.get(n);this._frameBuffer.attach(i),this._frameBuffer.bind(e),this._gaussianPassH.setUniform("texture",t),this._gaussianPassH.setUniform("textureWidth",r),this._gaussianPassH.render(e),this._frameBuffer.attach(t),this._gaussianPassV.setUniform("texture",i),this._gaussianPassV.setUniform("textureHeight",r),this._gaussianPassV.render(e),this._frameBuffer.unbind(e),this._texturePool.put(i)},_getTexture:function(e,t){var r=e.__GUID__,n=this._textures[r],i=e.shadowResolution||512;return t=t||1,n||(n=e instanceof yi?new Jn:new Pr,n.width=i*t,n.height=i,this.softShadow===Ri.VSM?(n.type=Vt.FLOAT,n.anisotropic=4):(n.minFilter=rt.NEAREST,n.magFilter=rt.NEAREST,n.useMipmap=!1),this._textures[r]=n),n},_getPointLightCamera:function(e,t){this._lightCameras.point||(this._lightCameras.point={px:new rn,nx:new rn,py:new rn,ny:new rn,pz:new rn,nz:new rn});var r=this._lightCameras.point[t];switch(r.far=e.range,r.fov=90,r.position.set(0,0,0),t){case"px":r.lookAt(ut.POSITIVE_X,ut.NEGATIVE_Y);break;case"nx":r.lookAt(ut.NEGATIVE_X,ut.NEGATIVE_Y);break;case"py":r.lookAt(ut.POSITIVE_Y,ut.POSITIVE_Z);break;case"ny":r.lookAt(ut.NEGATIVE_Y,ut.NEGATIVE_Z);break;case"pz":r.lookAt(ut.POSITIVE_Z,ut.NEGATIVE_Y);break;case"nz":r.lookAt(ut.NEGATIVE_Z,ut.NEGATIVE_Y)}return e.getWorldPosition(r.position),r.update(),r},_getDirectionalLightCamera:function(){var e=new Et,t=new vt,r=new vt;return function(n,i,a){this._lightCameras.directional||(this._lightCameras.directional=new nn);var o=this._lightCameras.directional;t.copy(i.viewBoundingBoxLastFrame),t.intersection(a.frustum.boundingBox),o.position.copy(t.min).add(t.max).scale(.5).transformMat4(a.worldTransform),o.rotation.copy(n.rotation),o.scale.copy(n.scale),o.updateWorldTransform(),Et.invert(e,o.worldTransform),Et.multiply(e,e,a.worldTransform),r.copy(t).applyTransform(e);var s=r.min._array,u=r.max._array;return o.position.set((s[0]+u[0])/2,(s[1]+u[1])/2,u[2]).transformMat4(o.worldTransform),o.near=0,o.far=-s[2]+u[2],isNaN(this.lightFrustumBias)?o.far*=4:o.far+=this.lightFrustumBias,o.left=s[0],o.right=u[0],o.top=u[1],o.bottom=s[1],o.update(!0),o}}(),_getSpotLightCamera:function(e){this._lightCameras.spot||(this._lightCameras.spot=new rn);var t=this._lightCameras.spot;return t.fov=2*e.penumbraAngle,t.far=e.range,t.worldTransform.copy(e.worldTransform),t.updateProjectionMatrix(),wi.invert(t.viewMatrix._array,t.worldTransform._array),t},dispose:function(e){var t=e.gl||e;for(var r in this._depthMaterials){var n=this._depthMaterials[r];n.dispose(t)}for(var r in this._distanceMaterials){var n=this._distanceMaterials[r];n.dispose(t)}this._frameBuffer&&this._frameBuffer.dispose(t);for(var i in this._textures)this._textures[i].dispose(t);this._texturePool.clear(e.gl),this._depthMaterials={},this._distanceMaterials={},this._textures={},this._lightCameras={},this._shadowMapNumber={POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},this._meshMaterials={};for(var a=0;a<this._receivers.length;a++){var o=this._receivers[a];if(o.material&&o.material.shader){var s=o.material,u=s.shader;u.undefine("fragment","POINT_LIGHT_SHADOW_COUNT"),u.undefine("fragment","DIRECTIONAL_LIGHT_SHADOW_COUNT"),u.undefine("fragment","AMBIENT_LIGHT_SHADOW_COUNT"),s.set("shadowEnabled",0)}}this._opaqueCasters=[],this._receivers=[],this._lightsCastShadow=[]}});Ri.VSM=1,Ri.PCF=2;var Ci=$e.extend(function(){return{name:"",inputLinks:{},outputLinks:{},_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},{updateParameter:function(e,t){var r=this.outputs[e],n=r.parameters,i=r._parametersCopy;if(i||(i=r._parametersCopy={}),n)for(var a in n)"width"!==a&&"height"!==a&&(i[a]=n[a]);var o,s;return o=n.width instanceof Function?n.width.call(this,t):n.width,s=n.height instanceof Function?n.height.call(this,t):n.height,i.width===o&&i.height===s||this._outputTextures[e]&&this._outputTextures[e].dispose(t.gl),i.width=o,i.height=s,i},setParameter:function(e,t){},getParameter:function(e){},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},render:function(){},getOutput:function(e,t){if(null==t)return t=e,this._outputTextures[t];var r=this.outputs[t];if(r)return this._rendered?r.outputLastFrame?this._prevOutputTextures[t]:this._outputTextures[t]:this._rendering?(this._prevOutputTextures[t]||(this._prevOutputTextures[t]=this._compositor.allocateTexture(r.parameters||{})),this._prevOutputTextures[t]):(this.render(e),this._outputTextures[t])},removeReference:function(e){if(0===--this._outputReferences[e]){this.outputs[e].keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},link:function(e,t,r){this.inputLinks[e]={node:t,pin:r},t.outputLinks[r]||(t.outputLinks[r]=[]),t.outputLinks[r].push({node:this,pin:e}),this.pass.material.shader.enableTexture(e)},clear:function(){this.inputLinks={},this.outputLinks={}},updateReference:function(e){if(!this._rendering){this._rendering=!0;for(var t in this.inputLinks){var r=this.inputLinks[t];r.node.updateReference(r.pin)}this._rendering=!1}e&&this._outputReferences[e]++},beforeFrame:function(){this._rendered=!1;for(var e in this.outputLinks)this._outputReferences[e]=0},afterFrame:function(){for(var e in this.outputLinks)if(this._outputReferences[e]>0){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}}}),Li=$e.extend(function(){return{nodes:[]}},{dirty:function(){this._dirty=!0},addNode:function(e){this.nodes.indexOf(e)>=0||(this.nodes.push(e),this._dirty=!0)},removeNode:function(e){"string"==typeof e&&(e=this.getNodeByName(e));var t=this.nodes.indexOf(e);t>=0&&(this.nodes.splice(t,1),this._dirty=!0)},getNodeByName:function(e){for(var t=0;t<this.nodes.length;t++)if(this.nodes[t].name===e)return this.nodes[t]},update:function(){for(var e=0;e<this.nodes.length;e++)this.nodes[e].clear();for(var e=0;e<this.nodes.length;e++){var t=this.nodes[e];if(t.inputs)for(var r in t.inputs)if(t.inputs[r])if(!t.pass||t.pass.material.isUniformEnabled(r)){var n=t.inputs[r],i=this.findPin(n);i?t.link(r,i.node,i.pin):"string"==typeof n?console.warn("Node "+n+" not exist"):console.warn("Pin of "+n.node+"."+n.pin+" not exist")}else console.warn("Pin "+t.name+"."+r+" not used.")}},findPin:function(e){var t;if(("string"==typeof e||e instanceof Ci)&&(e={node:e}),"string"==typeof e.node)for(var r=0;r<this.nodes.length;r++){var n=this.nodes[r];n.name===e.node&&(t=n)}else t=e.node;if(t){var i=e.pin;if(i||t.outputs&&(i=Object.keys(t.outputs)[0]),t.outputs[i])return{node:t,pin:i}}}}),Di=Li.extend(function(){return{_outputs:[],_texturePool:new Si,_frameBuffer:new ni({depthBuffer:!1})}},{addNode:function(e){Li.prototype.addNode.call(this,e),e._compositor=this},render:function(e,t){if(this._dirty){this.update(),this._dirty=!1,this._outputs.length=0;for(var r=0;r<this.nodes.length;r++)this.nodes[r].outputs||this._outputs.push(this.nodes[r])}for(var r=0;r<this.nodes.length;r++)this.nodes[r].beforeFrame();for(var r=0;r<this._outputs.length;r++)this._outputs[r].updateReference();for(var r=0;r<this._outputs.length;r++)this._outputs[r].render(e,t);for(var r=0;r<this.nodes.length;r++)this.nodes[r].afterFrame()},allocateTexture:function(e){return this._texturePool.get(e)},releaseTexture:function(e){this._texturePool.put(e)},getFrameBuffer:function(){return this._frameBuffer},dispose:function(e){this._texturePool.clear(e)}}),Pi=Ci.extend({name:"scene",scene:null,camera:null,autoUpdateScene:!0,preZ:!1},function(){this.frameBuffer=new ni},{render:function(e){this._rendering=!0;var t=e.gl;this.trigger("beforerender");var r;if(this.outputs){var n=this.frameBuffer;for(var i in this.outputs){var a=this.updateParameter(i,e),o=this.outputs[i],s=this._compositor.allocateTexture(a);this._outputTextures[i]=s;var u=o.attachment||t.COLOR_ATTACHMENT0;"string"==typeof u&&(u=t[u]),n.attach(s,u)}n.bind(e);var l=e.getGLExtension("EXT_draw_buffers");if(l){var c=[];for(var u in this.outputs)(u=parseInt(u))>=t.COLOR_ATTACHMENT0&&u<=t.COLOR_ATTACHMENT0+8&&c.push(u);l.drawBuffersEXT(c)}e.saveClear(),e.clearBit=rt.DEPTH_BUFFER_BIT|rt.COLOR_BUFFER_BIT,
r=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ),e.restoreClear(),n.unbind(e)}else r=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ);this.trigger("afterrender",r),this._rendering=!1,this._rendered=!0}}),Ii=Ci.extend(function(){return{texture:null,outputs:{color:{}}}},function(){},{getOutput:function(e,t){return this.texture},beforeFrame:function(){},afterFrame:function(){}}),Oi=Ci.extend(function(){return{name:"",inputs:{},outputs:null,shader:"",inputLinks:{},outputLinks:{},pass:null,_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},function(){var e=new bi({fragment:this.shader});this.pass=e},{render:function(e,t){this.trigger("beforerender",e),this._rendering=!0;var r=e.gl;for(var n in this.inputLinks){var i=this.inputLinks[n],a=i.node.getOutput(e,i.pin);this.pass.setUniform(n,a)}if(this.outputs){this.pass.outputs={};var o={};for(var s in this.outputs){var u=this.updateParameter(s,e);isNaN(u.width)&&this.updateParameter(s,e);var l=this.outputs[s],c=this._compositor.allocateTexture(u);this._outputTextures[s]=c;var h=l.attachment||r.COLOR_ATTACHMENT0;"string"==typeof h&&(h=r[h]),o[h]=c}this._compositor.getFrameBuffer().bind(e);for(var h in o)this._compositor.getFrameBuffer().attach(o[h],h);this.pass.render(e),this._compositor.getFrameBuffer().updateMipmap(e.gl)}else this.pass.outputs=null,this._compositor.getFrameBuffer().unbind(e),this.pass.render(e,t);for(var n in this.inputLinks){var i=this.inputLinks[n];i.node.removeReference(i.pin)}this._rendering=!1,this._rendered=!0,this.trigger("afterrender",e)},updateParameter:function(e,t){var r=this.outputs[e],n=r.parameters,i=r._parametersCopy;if(i||(i=r._parametersCopy={}),n)for(var a in n)"width"!==a&&"height"!==a&&(i[a]=n[a]);var o,s;return o=n.width instanceof Function?n.width.call(this,t):n.width,s=n.height instanceof Function?n.height.call(this,t):n.height,i.width===o&&i.height===s||this._outputTextures[e]&&this._outputTextures[e].dispose(t),i.width=o,i.height=s,i},setParameter:function(e,t){this.pass.setUniform(e,t)},getParameter:function(e){return this.pass.getUniform(e)},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},setShader:function(e){var t=this.pass.material;t.shader.setFragment(e),t.attachShader(t.shader,!0)},shaderDefine:function(e,t){this.pass.material.shader.define("fragment",e,t)},shaderUndefine:function(e){this.pass.material.shader.undefine("fragment",e)},removeReference:function(e){if(0===--this._outputReferences[e]){this.outputs[e].keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},link:function(e,t,r){this.inputLinks[e]={node:t,pin:r},t.outputLinks[r]||(t.outputLinks[r]=[]),t.outputLinks[r].push({node:this,pin:e}),this.pass.material.shader.enableTexture(e)},clear:function(){Ci.prototype.clear.call(this),this.pass.material.shader.disableTexturesAll()},updateReference:function(e){if(!this._rendering){this._rendering=!0;for(var t in this.inputLinks){var r=this.inputLinks[t];r.node.updateReference(r.pin)}this._rendering=!1}e&&this._outputReferences[e]++},beforeFrame:function(){this._rendered=!1;for(var e in this.outputLinks)this._outputReferences[e]=0},afterFrame:function(){for(var e in this.outputLinks)if(this._outputReferences[e]>0){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}}}),Fi=/#source\((.*?)\)/,ki=/#url\((.*?)\)/,Bi=$e.extend({rootPath:"",textureRootPath:"",shaderRootPath:"",scene:null,camera:null},{load:function(e){var t=this;this.rootPath||(this.rootPath=e.slice(0,e.lastIndexOf("/"))),ar.get({url:e,onprogress:function(e,r,n){t.trigger("progress",e,r,n)},onerror:function(e){t.trigger("error",e)},responseType:"text",onload:function(e){t.parse(JSON.parse(e))}})},parse:function(e){var t=this,r=new Di,n={textures:{},shaders:{},parameters:{}},i=function(i,a){for(var o=0;o<e.nodes.length;o++){var s=e.nodes[o],u=t._createNode(s,n);u&&r.addNode(u)}t.trigger("success",r)};for(var a in e.parameters){var o=e.parameters[a];n.parameters[a]=this._convertParameter(o)}return this._loadShaders(e,function(r){t._loadTextures(e,n,function(e){n.textures=e,n.shaders=r,i()})}),r},_createNode:function(e,t){var r,n,i,a=e.type||"filter";if("filter"===a){var o=e.shader.trim(),s=Fi.exec(o);if(s?r=Ut.source(s[1].trim()):"#"===o.charAt(0)&&(r=t.shaders[o.substr(1)]),r||(r=o),!r)return}if(e.inputs){n={};for(var u in e.inputs)"string"==typeof e.inputs[u]?n[u]=e.inputs[u]:n[u]={node:e.inputs[u].node,pin:e.inputs[u].pin}}if(e.outputs){i={};for(var u in e.outputs){var l=e.outputs[u];if(i[u]={},null!=l.attachment&&(i[u].attachment=l.attachment),null!=l.keepLastFrame&&(i[u].keepLastFrame=l.keepLastFrame),null!=l.outputLastFrame&&(i[u].outputLastFrame=l.outputLastFrame),"string"==typeof l.parameters){var c=l.parameters;"#"===c.charAt(0)&&(i[u].parameters=t.parameters[c.substr(1)])}else l.parameters&&(i[u].parameters=this._convertParameter(l.parameters))}}var h;if(h="scene"===a?new Pi({name:e.name,scene:this.scene,camera:this.camera,outputs:i}):"texture"===a?new Ii({name:e.name,outputs:i}):new Oi({name:e.name,shader:r,inputs:n,outputs:i})){if(e.parameters)for(var u in e.parameters){var f=e.parameters[u];"string"==typeof f&&(f=f.trim(),"#"===f.charAt(0)?f=t.textures[f.substr(1)]:h.on("beforerender",$(u,te(f)))),h.setParameter(u,f)}if(e.defines&&h.pass)for(var u in e.defines){var f=e.defines[u];h.pass.material.shader.define("fragment",u,f)}}return h},_convertParameter:function(e){var t={};return e?(["type","minFilter","magFilter","wrapS","wrapT","flipY","useMipmap"].forEach(function(r){var n=e[r];null!=n&&("string"==typeof n&&(n=Vt[n]),t[r]=n)}),["width","height"].forEach(function(r){if(null!=e[r]){var n=e[r];"string"==typeof n?(n=n.trim(),t[r]=ee(r,te(n))):t[r]=n}}),null!=e.useMipmap&&(t.useMipmap=e.useMipmap),t):t},_loadShaders:function(e,t){if(!e.shaders)return void t({});var r={},n=0,i=!1,a=this.shaderRootPath||this.rootPath;Je.each(e.shaders,function(e,o){var s=ki.exec(e);if(s){var u=s[1];u=Je.relative2absolute(u,a),n++,ar.get({url:u,onload:function(e){r[o]=e,Ut.import(e),0===--n&&(t(r),i=!0)}})}else r[o]=e,Ut.import(e)},this),0!==n||i||t(r)},_loadTextures:function(e,t,r){if(!e.textures)return void r({});var n={},i=0,a=!1,o=this.textureRootPath||this.rootPath;Je.each(e.textures,function(e,t){var s,u=e.path,l=this._convertParameter(e.parameters);if(Array.isArray(u)&&6===u.length)u=u.map(function(e){return Je.relative2absolute(e,o)}),s=new Jn(l);else{if("string"!=typeof u)return;u=Je.relative2absolute(u,o),s=new Pr(l)}s.load(u),i++,s.once("success",function(){n[t]=s,0===--i&&(r(n),a=!0)})},this),0!==i||a||r(n)}});Ut.import("@export ecgl.ssao.estimate\n\n#define SHADER_NAME SSAO\n\nuniform sampler2D depthTex;\n\nuniform sampler2D normalTex;\n\nuniform sampler2D noiseTex;\n\nuniform vec2 depthTexSize;\n\nuniform vec2 noiseTexSize;\n\nuniform mat4 projection;\n\nuniform mat4 projectionInv;\n\nuniform mat4 viewInverseTranspose;\n\nuniform vec3 kernel[KERNEL_SIZE];\n\nuniform float radius : 1;\n\nuniform float power : 1;\n\nuniform float bias: 0.01;\n\nuniform float intensity: 1.0;\n\nvarying vec2 v_Texcoord;\n\nfloat ssaoEstimator(in vec3 originPos, in vec3 N, in mat3 kernelBasis) {\n float occlusion = 0.0;\n\n for (int i = 0; i < KERNEL_SIZE; i++) {\n vec3 samplePos = kernel[i];\n#ifdef NORMALTEX_ENABLED\n samplePos = kernelBasis * samplePos;\n#endif\n samplePos = samplePos * radius + originPos;\n\n vec4 texCoord = projection * vec4(samplePos, 1.0);\n texCoord.xy /= texCoord.w;\n texCoord.xy = texCoord.xy * 0.5 + 0.5;\n\n vec4 depthTexel = texture2D(depthTex, texCoord.xy);\n float z = depthTexel.r * 2.0 - 1.0;\n#ifdef ALCHEMY\n vec4 projectedPos = vec4(texCoord.xy * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * projectedPos;\n p4.xyz /= p4.w;\n vec3 cDir = p4.xyz - originPos;\n\n float vv = dot(cDir, cDir);\n float vn = dot(cDir, N);\n\n float radius2 = radius * radius;\n\n vn = max(vn + p4.z * bias, 0.0);\n float f = max(radius2 - vv, 0.0) / radius2;\n occlusion += f * f * f * max(vn / (0.01 + vv), 0.0);\n#else\n if (projection[3][3] == 0.0) {\n z = projection[3][2] / (z * projection[2][3] - projection[2][2]);\n }\n else {\n z = (z - projection[3][2]) / projection[2][2];\n }\n float factor = step(samplePos.z, z - bias);\n float rangeCheck = smoothstep(0.0, 1.0, radius / abs(originPos.z - z));\n occlusion += rangeCheck * factor;\n#endif\n }\n#ifdef NORMALTEX_ENABLED\n occlusion = 1.0 - occlusion / float(KERNEL_SIZE);\n#else\n occlusion = 1.0 - clamp((occlusion / float(KERNEL_SIZE) - 0.6) * 2.5, 0.0, 1.0);\n#endif\n return pow(occlusion, power);\n}\n\nvoid main()\n{\n\n vec4 depthTexel = texture2D(depthTex, v_Texcoord);\n\n#ifdef NORMALTEX_ENABLED\n vec4 tex = texture2D(normalTex, v_Texcoord);\n if (dot(tex.rgb, tex.rgb) == 0.0) {\n gl_FragColor = vec4(1.0);\n return;\n }\n vec3 N = tex.rgb * 2.0 - 1.0;\n N = (viewInverseTranspose * vec4(N, 0.0)).xyz;\n\n vec2 noiseTexCoord = depthTexSize / vec2(noiseTexSize) * v_Texcoord;\n vec3 rvec = texture2D(noiseTex, noiseTexCoord).rgb * 2.0 - 1.0;\n vec3 T = normalize(rvec - N * dot(rvec, N));\n vec3 BT = normalize(cross(N, T));\n mat3 kernelBasis = mat3(T, BT, N);\n#else\n if (depthTexel.r > 0.99999) {\n gl_FragColor = vec4(1.0);\n return;\n }\n mat3 kernelBasis;\n#endif\n\n float z = depthTexel.r * 2.0 - 1.0;\n\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * projectedPos;\n\n vec3 position = p4.xyz / p4.w;\n\n float ao = ssaoEstimator(position, N, kernelBasis);\n ao = clamp(1.0 - (1.0 - ao) * intensity, 0.0, 1.0);\n gl_FragColor = vec4(vec3(ao), 1.0);\n}\n\n@end\n\n\n@export ecgl.ssao.blur\n#define SHADER_NAME SSAO_BLUR\n\nuniform sampler2D ssaoTexture;\n\n#ifdef NORMALTEX_ENABLED\nuniform sampler2D normalTex;\n#endif\n\n#ifdef DEPTHTEX_ENABLED\nuniform sampler2D depthTex;\nuniform mat4 projection;\nuniform float depthRange : 0.05;\n#endif\n\nvarying vec2 v_Texcoord;\n\nuniform vec2 textureSize;\nuniform float blurSize : 1.0;\n\nuniform int direction: 0.0;\n\n#ifdef DEPTHTEX_ENABLED\nfloat getLinearDepth(vec2 coord)\n{\n float depth = texture2D(depthTex, v_Texcoord).r * 2.0 - 1.0;\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n}\n#endif\n\nvoid main()\n{\n @import qtek.compositor.kernel.gaussian_9\n\n vec2 off = vec2(0.0);\n if (direction == 0) {\n off[0] = blurSize / textureSize.x;\n }\n else {\n off[1] = blurSize / textureSize.y;\n }\n\n vec2 coord = v_Texcoord;\n\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n\n#ifdef NORMALTEX_ENABLED\n vec3 centerNormal = texture2D(normalTex, v_Texcoord).rgb * 2.0 - 1.0;\n#elif defined(DEPTHTEX_ENABLED)\n float centerDepth = getLinearDepth(v_Texcoord);\n#endif\n\n for (int i = 0; i < 9; i++) {\n vec2 coord = clamp(v_Texcoord + vec2(float(i) - 4.0) * off, vec2(0.0), vec2(1.0));\n\n#ifdef NORMALTEX_ENABLED\n vec3 normal = texture2D(normalTex, coord).rgb * 2.0 - 1.0;\n float w = gaussianKernel[i] * clamp(dot(normal, centerNormal), 0.0, 1.0);\n#elif defined(DEPTHTEX_ENABLED)\n float d = getLinearDepth(coord);\n float w = gaussianKernel[i] * (1.0 - clamp(abs(centerDepth - d) / depthRange, 0.0, 1.0));\n#else\n float w = gaussianKernel[i];\n#endif\n\n weightAll += w;\n sum += texture2D(ssaoTexture, coord) * w;\n }\n\n gl_FragColor = vec4(vec3(sum / weightAll), 1.0);\n}\n\n@end\n"),oe.prototype.setDepthTexture=function(e){this._depthTex=e},oe.prototype.setNormalTexture=function(e){this._normalTex=e,this._ssaoPass.material.shader[e?"enableTexture":"disableTexture"]("normalTex"),this.setKernelSize(this._kernelSize)},oe.prototype.update=function(e,t,r){var n=e.getWidth(),i=e.getHeight(),a=this._ssaoPass,o=this._blurPass;a.setUniform("kernel",this._kernels[r%this._kernels.length]),a.setUniform("depthTex",this._depthTex),null!=this._normalTex&&a.setUniform("normalTex",this._normalTex),a.setUniform("depthTexSize",[this._depthTex.width,this._depthTex.height]);var s=new Et;Et.transpose(s,t.worldTransform),a.setUniform("projection",t.projectionMatrix._array),a.setUniform("projectionInv",t.invProjectionMatrix._array),a.setUniform("viewInverseTranspose",s._array);var u=this._ssaoTexture,l=this._blurTexture;u.width=n,u.height=i,l.width=n,l.height=i,this._framebuffer.attach(u),this._framebuffer.bind(e),e.gl.clearColor(1,1,1,1),e.gl.clear(e.gl.COLOR_BUFFER_BIT),a.render(e),o.setUniform("textureSize",[n,i]),this._framebuffer.attach(l),o.setUniform("direction",0),o.setUniform("ssaoTexture",u),o.render(e),this._framebuffer.attach(u),o.setUniform("direction",1),o.setUniform("ssaoTexture",l),o.render(e),this._framebuffer.unbind(e);var c=e.clearColor;e.gl.clearColor(c[0],c[1],c[2],c[3])},oe.prototype.getTargetTexture=function(){return this._ssaoTexture},oe.prototype.setParameter=function(e,t){"noiseTexSize"===e?this.setNoiseSize(t):"kernelSize"===e?this.setKernelSize(t):"intensity"===e?this._ssaoPass.material.set("intensity",t):this._ssaoPass.setUniform(e,t)},oe.prototype.setKernelSize=function(e){this._kernelSize=e,this._ssaoPass.material.shader.define("fragment","KERNEL_SIZE",e),this._kernels=this._kernels||[];for(var t=0;t<30;t++)this._kernels[t]=ae(e,t*e,!!this._normalTex)},oe.prototype.setNoiseSize=function(e){var t=this._ssaoPass.getUniform("noiseTex");t?(t.data=ne(e),t.width=t.height=e,t.dirty()):(t=ie(e),this._ssaoPass.setUniform("noiseTex",ie(e))),this._ssaoPass.setUniform("noiseTexSize",[e,e])},oe.prototype.dispose=function(e){this._blurTexture.dispose(e),this._ssaoTexture.dispose(e)};Ut.import("@export ecgl.ssr.main\n\n#define MAX_ITERATION 20;\n\nuniform sampler2D sourceTexture;\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\n\nuniform mat4 projection;\nuniform mat4 projectionInv;\nuniform mat4 viewInverseTranspose;\n\nuniform float maxRayDistance: 50;\n\nuniform float pixelStride: 16;\nuniform float pixelStrideZCutoff: 50; \nuniform float screenEdgeFadeStart: 0.9; \nuniform float eyeFadeStart : 0.2; uniform float eyeFadeEnd: 0.8; \nuniform float minGlossiness: 0.2; uniform float zThicknessThreshold: 10;\n\nuniform float nearZ;\nuniform vec2 viewportSize : VIEWPORT_SIZE;\n\nuniform float jitterOffset: 0;\n\nvarying vec2 v_Texcoord;\n\n#ifdef DEPTH_DECODE\n@import qtek.util.decode_float\n#endif\n\nfloat fetchDepth(sampler2D depthTexture, vec2 uv)\n{\n vec4 depthTexel = texture2D(depthTexture, uv);\n return depthTexel.r * 2.0 - 1.0;\n}\n\nfloat linearDepth(float depth)\n{\n if (projection[3][3] == 0.0) {\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\n }\n else {\n return (depth - projection[3][2]) / projection[2][2];\n }\n}\n\nbool rayIntersectDepth(float rayZNear, float rayZFar, vec2 hitPixel)\n{\n if (rayZFar > rayZNear)\n {\n float t = rayZFar; rayZFar = rayZNear; rayZNear = t;\n }\n float cameraZ = linearDepth(fetchDepth(gBufferTexture2, hitPixel));\n return rayZFar <= cameraZ && rayZNear >= cameraZ - zThicknessThreshold;\n}\n\n\nbool traceScreenSpaceRay(\n vec3 rayOrigin, vec3 rayDir, float jitter,\n out vec2 hitPixel, out vec3 hitPoint, out float iterationCount\n)\n{\n float rayLength = ((rayOrigin.z + rayDir.z * maxRayDistance) > -nearZ)\n ? (-nearZ - rayOrigin.z) / rayDir.z : maxRayDistance;\n\n vec3 rayEnd = rayOrigin + rayDir * rayLength;\n\n vec4 H0 = projection * vec4(rayOrigin, 1.0);\n vec4 H1 = projection * vec4(rayEnd, 1.0);\n\n float k0 = 1.0 / H0.w, k1 = 1.0 / H1.w;\n\n vec3 Q0 = rayOrigin * k0, Q1 = rayEnd * k1;\n\n vec2 P0 = (H0.xy * k0 * 0.5 + 0.5) * viewportSize;\n vec2 P1 = (H1.xy * k1 * 0.5 + 0.5) * viewportSize;\n\n P1 += dot(P1 - P0, P1 - P0) < 0.0001 ? 0.01 : 0.0;\n vec2 delta = P1 - P0;\n\n bool permute = false;\n if (abs(delta.x) < abs(delta.y)) {\n permute = true;\n delta = delta.yx;\n P0 = P0.yx;\n P1 = P1.yx;\n }\n float stepDir = sign(delta.x);\n float invdx = stepDir / delta.x;\n\n vec3 dQ = (Q1 - Q0) * invdx;\n float dk = (k1 - k0) * invdx;\n\n vec2 dP = vec2(stepDir, delta.y * invdx);\n\n float strideScaler = 1.0 - min(1.0, -rayOrigin.z / pixelStrideZCutoff);\n float pixStride = 1.0 + strideScaler * pixelStride;\n\n dP *= pixStride; dQ *= pixStride; dk *= pixStride;\n\n vec4 pqk = vec4(P0, Q0.z, k0);\n vec4 dPQK = vec4(dP, dQ.z, dk);\n\n pqk += dPQK * jitter;\n float rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\n float rayZNear;\n\n bool intersect = false;\n\n vec2 texelSize = 1.0 / viewportSize;\n\n iterationCount = 0.0;\n\n for (int i = 0; i < MAX_ITERATION; i++)\n {\n pqk += dPQK;\n\n rayZNear = rayZFar;\n rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\n\n hitPixel = permute ? pqk.yx : pqk.xy;\n hitPixel *= texelSize;\n\n intersect = rayIntersectDepth(rayZNear, rayZFar, hitPixel);\n\n iterationCount += 1.0;\n\n if (intersect) {\n break;\n }\n }\n\n\n Q0.xy += dQ.xy * iterationCount;\n Q0.z = pqk.z;\n hitPoint = Q0 / pqk.w;\n\n return intersect;\n}\n\nfloat calculateAlpha(\n float iterationCount, float reflectivity,\n vec2 hitPixel, vec3 hitPoint, float dist, vec3 rayDir\n)\n{\n float alpha = clamp(reflectivity, 0.0, 1.0);\n alpha *= 1.0 - (iterationCount / float(MAX_ITERATION));\n vec2 hitPixelNDC = hitPixel * 2.0 - 1.0;\n float maxDimension = min(1.0, max(abs(hitPixelNDC.x), abs(hitPixelNDC.y)));\n alpha *= 1.0 - max(0.0, maxDimension - screenEdgeFadeStart) / (1.0 - screenEdgeFadeStart);\n\n float _eyeFadeStart = eyeFadeStart;\n float _eyeFadeEnd = eyeFadeEnd;\n if (_eyeFadeStart > _eyeFadeEnd) {\n float tmp = _eyeFadeEnd;\n _eyeFadeEnd = _eyeFadeStart;\n _eyeFadeStart = tmp;\n }\n\n float eyeDir = clamp(rayDir.z, _eyeFadeStart, _eyeFadeEnd);\n alpha *= 1.0 - (eyeDir - _eyeFadeStart) / (_eyeFadeEnd - _eyeFadeStart);\n\n alpha *= 1.0 - clamp(dist / maxRayDistance, 0.0, 1.0);\n\n return alpha;\n}\n\n@import qtek.util.rand\n\n@import qtek.util.rgbm\n\nvoid main()\n{\n vec4 normalAndGloss = texture2D(gBufferTexture1, v_Texcoord);\n\n if (dot(normalAndGloss.rgb, vec3(1.0)) == 0.0) {\n discard;\n }\n\n float g = normalAndGloss.a;\n if (g <= minGlossiness) {\n discard;\n }\n\n float reflectivity = (g - minGlossiness) / (1.0 - minGlossiness);\n\n vec3 N = normalAndGloss.rgb * 2.0 - 1.0;\n N = normalize((viewInverseTranspose * vec4(N, 0.0)).xyz);\n\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, fetchDepth(gBufferTexture2, v_Texcoord), 1.0);\n vec4 pos = projectionInv * projectedPos;\n vec3 rayOrigin = pos.xyz / pos.w;\n\n vec3 rayDir = normalize(reflect(normalize(rayOrigin), N));\n vec2 hitPixel;\n vec3 hitPoint;\n float iterationCount;\n\n vec2 uv2 = v_Texcoord * viewportSize;\n float jitter = rand(fract(v_Texcoord + jitterOffset));\n\n bool intersect = traceScreenSpaceRay(rayOrigin, rayDir, jitter, hitPixel, hitPoint, iterationCount);\n\n float dist = distance(rayOrigin, hitPoint);\n\n float alpha = calculateAlpha(iterationCount, reflectivity, hitPixel, hitPoint, dist, rayDir) * float(intersect);\n\n vec3 hitNormal = texture2D(gBufferTexture1, hitPixel).rgb * 2.0 - 1.0;\n hitNormal = normalize((viewInverseTranspose * vec4(hitNormal, 0.0)).xyz);\n\n if (dot(hitNormal, rayDir) >= 0.0) {\n discard;\n }\n\n \n if (!intersect) {\n discard;\n }\n vec4 color = decodeHDR(texture2D(sourceTexture, hitPixel));\n gl_FragColor = encodeHDR(vec4(color.rgb * alpha, color.a));\n}\n@end\n\n@export ecgl.ssr.blur\n\nuniform sampler2D texture;\nuniform sampler2D gBufferTexture1;\n\nvarying vec2 v_Texcoord;\n\nuniform vec2 textureSize;\nuniform float blurSize : 4.0;\n\n#ifdef BLEND\nuniform sampler2D sourceTexture;\n#endif\n\n@import qtek.util.rgbm\n\n\nvoid main()\n{\n @import qtek.compositor.kernel.gaussian_13\n\n vec4 centerNTexel = texture2D(gBufferTexture1, v_Texcoord);\n float g = centerNTexel.a;\n float maxBlurSize = clamp(1.0 - g + 0.1, 0.0, 1.0) * blurSize;\n#ifdef VERTICAL\n vec2 off = vec2(0.0, maxBlurSize / textureSize.y);\n#else\n vec2 off = vec2(maxBlurSize / textureSize.x, 0.0);\n#endif\n\n vec2 coord = v_Texcoord;\n\n vec4 sum = vec4(0.0);\n float weightAll = 0.0;\n\n vec3 cN = centerNTexel.rgb * 2.0 - 1.0;\n for (int i = 0; i < 13; i++) {\n vec2 coord = clamp((float(i) - 6.0) * off + v_Texcoord, vec2(0.0), vec2(1.0));\n float w = gaussianKernel[i] * clamp(dot(cN, texture2D(gBufferTexture1, coord).rgb * 2.0 - 1.0), 0.0, 1.0);\n weightAll += w;\n sum += decodeHDR(texture2D(texture, coord)) * w;\n }\n\n#ifdef BLEND\n gl_FragColor = encodeHDR(\n sum / weightAll + decodeHDR(texture2D(sourceTexture, v_Texcoord))\n );\n#else\n gl_FragColor = encodeHDR(sum / weightAll);\n#endif\n}\n\n@end"),se.prototype.update=function(e,t,r,n){var i=e.getWidth(),a=e.getHeight(),o=this._texture1,s=this._texture2;o.width=s.width=i,o.height=s.height=a;var u=this._frameBuffer,l=this._ssrPass,c=this._blurPass1,h=this._blurPass2,f=new Et;Et.transpose(f,t.worldTransform),l.setUniform("sourceTexture",r),l.setUniform("projection",t.projectionMatrix._array),l.setUniform("projectionInv",t.invProjectionMatrix._array),l.setUniform("viewInverseTranspose",f._array),l.setUniform("nearZ",t.near),l.setUniform("jitterOffset",n/30);var d=[i,a];c.setUniform("textureSize",d),h.setUniform("textureSize",d),h.setUniform("sourceTexture",r),u.attach(s),u.bind(e),l.render(e),u.attach(o),c.setUniform("texture",s),c.render(e),u.attach(s),h.setUniform("texture",o),h.render(e),u.unbind(e)},se.prototype.getTargetTexture=function(){return this._texture2},se.prototype.setParameter=function(e,t){"maxIteration"===e?this._ssrPass.material.shader.define("fragment","MAX_ITERATION",t):this._ssrPass.setUniform(e,t)},se.prototype.dispose=function(e){this._texture1.dispose(e),this._texture2.dispose(e),this._frameBuffer.dispose(e)};var Ui=[0,0,-.321585265978,-.154972575841,.458126042375,.188473391593,.842080129861,.527766490688,.147304551086,-.659453822776,-.331943915203,-.940619700594,.0479226680259,.54812163202,.701581552186,-.709825561388,-.295436780218,.940589268233,-.901489676764,.237713156085,.973570876096,-.109899459384,-.866792314779,-.451805525005,.330975007087,.800048655954,-.344275183665,.381779221166,-.386139432542,-.437418421534,-.576478634965,-.0148463392551,.385798197415,-.262426961053,-.666302061145,.682427250835,-.628010632582,-.732836215494,.10163141741,-.987658134403,.711995289051,-.320024291314,.0296005138058,.950296523438,.0130612307608,-.351024443122,-.879596633704,-.10478487883,.435712737232,.504254490347,.779203817497,.206477676721,.388264289969,-.896736162545,-.153106280781,-.629203242522,-.245517550697,.657969239148,.126830499058,.26862328493,-.634888119007,-.302301223431,.617074219636,.779817204925],Hi="@export qtek.deferred.gbuffer.vertex\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\nuniform mat4 world : WORLD;\nuniform vec2 uvRepeat;\nuniform vec2 uvOffset;\nattribute vec3 position : POSITION;\nattribute vec2 texcoord : TEXCOORD_0;\n#ifdef FIRST_PASS\nattribute vec3 normal : NORMAL;\n#endif\n@import qtek.chunk.skinning_header\n#ifdef FIRST_PASS\nvarying vec3 v_Normal;\nattribute vec4 tangent : TANGENT;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\n#endif\nvarying vec2 v_Texcoord;\nvarying vec4 v_ProjPos;\nvoid main()\n{\n    vec3 skinnedPosition = position;\n#ifdef FIRST_PASS\n    vec3 skinnedNormal = normal;\n    vec3 skinnedTangent = tangent.xyz;\n    bool hasTangent = dot(tangent, tangent) > 0.0;\n#endif\n#ifdef SKINNING\n    @import qtek.chunk.skin_matrix\n    skinnedPosition = (skinMatrixWS * vec4(position, 1.0)).xyz;\n    #ifdef FIRST_PASS\n    skinnedNormal = (skinMatrixWS * vec4(normal, 0.0)).xyz;\n    if (hasTangent) {\n        skinnedTangent = (skinMatrixWS * vec4(tangent.xyz, 0.0)).xyz;\n    }\n    #endif\n#endif\n    gl_Position = worldViewProjection * vec4(skinnedPosition, 1.0);\n    v_Texcoord = texcoord * uvRepeat + uvOffset;\n#ifdef FIRST_PASS\n    v_Normal = normalize((worldInverseTranspose * vec4(skinnedNormal, 0.0)).xyz);\n    if (hasTangent) {\n        v_Tangent = normalize((worldInverseTranspose * vec4(skinnedTangent, 0.0)).xyz);\n        v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\n    }\n#endif\n    v_ProjPos = gl_Position;\n}\n@end\n@export qtek.deferred.gbuffer1.fragment\nuniform float glossiness;\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nuniform sampler2D normalMap;\nvarying vec3 v_Tangent;\nvarying vec3 v_Bitangent;\nuniform sampler2D roughGlossMap;\nuniform bool useRoughGlossMap;\nuniform bool useRoughness;\nuniform int roughGlossChannel: 0;\nvarying vec4 v_ProjPos;\nfloat indexingTexel(in vec4 texel, in int idx) {\n    if (idx == 3) return texel.a;\n    else if (idx == 1) return texel.g;\n    else if (idx == 2) return texel.b;\n    else return texel.r;\n}\nvoid main()\n{\n    vec3 N = v_Normal;\n    if (dot(v_Tangent, v_Tangent) > 0.0) {\n        vec3 normalTexel = texture2D(normalMap, v_Texcoord).xyz;\n        if (dot(normalTexel, normalTexel) > 0.0) {            N = normalTexel * 2.0 - 1.0;\n            mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\n            N = normalize(tbn * N);\n        }\n    }\n    gl_FragColor.rgb = (N + 1.0) * 0.5;\n    float g = glossiness;\n    if (useRoughGlossMap) {\n        float g2 = indexingTexel(texture2D(roughGlossMap, v_Texcoord), roughGlossChannel);\n        if (useRoughness) {\n            g2 = 1.0 - g2;\n        }\n        g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\n    }\n    gl_FragColor.a = g;\n}\n@end\n@export qtek.deferred.gbuffer2.fragment\nuniform sampler2D diffuseMap;\nuniform sampler2D metalnessMap;\nuniform vec3 color;\nuniform float metalness;\nuniform bool useMetalnessMap;\nuniform bool linear;\nvarying vec2 v_Texcoord;\n@import qtek.util.srgb\nvoid main ()\n{\n    float m = metalness;\n    if (useMetalnessMap) {\n        vec4 metalnessTexel = texture2D(metalnessMap, v_Texcoord);\n        m = clamp(metalnessTexel.r + (m * 2.0 - 1.0), 0.0, 1.0);\n    }\n    vec4 texel = texture2D(diffuseMap, v_Texcoord);\n    if (linear) {\n        texel = sRGBToLinear(texel);\n    }\n    gl_FragColor.rgb = texel.rgb * color;\n    gl_FragColor.a = m;\n}\n@end\n@export qtek.deferred.gbuffer.debug\n@import qtek.deferred.chunk.light_head\nuniform int debug: 0;\nvoid main ()\n{\n    @import qtek.deferred.chunk.gbuffer_read\n    if (debug == 0) {\n        gl_FragColor = vec4(N, 1.0);\n    }\n    else if (debug == 1) {\n        gl_FragColor = vec4(vec3(z), 1.0);\n    }\n    else if (debug == 2) {\n        gl_FragColor = vec4(position, 1.0);\n    }\n    else if (debug == 3) {\n        gl_FragColor = vec4(vec3(glossiness), 1.0);\n    }\n    else if (debug == 4) {\n        gl_FragColor = vec4(vec3(metalness), 1.0);\n    }\n    else {\n        gl_FragColor = vec4(albedo, 1.0);\n    }\n}\n@end";Ut.import(Hi),Ut.import("@export qtek.deferred.chunk.light_head\nuniform sampler2D gBufferTexture1;\nuniform sampler2D gBufferTexture2;\nuniform sampler2D gBufferTexture3;\nuniform vec2 windowSize: WINDOW_SIZE;\nuniform vec4 viewport: VIEWPORT;\nuniform mat4 viewProjectionInv;\n#ifdef DEPTH_ENCODED\n@import qtek.util.decode_float\n#endif\n@end\n@export qtek.deferred.chunk.gbuffer_read\n    vec2 uv = gl_FragCoord.xy / windowSize;\n    vec2 uv2 = (gl_FragCoord.xy - viewport.xy) / viewport.zw;\n    vec4 texel1 = texture2D(gBufferTexture1, uv);\n    vec4 texel3 = texture2D(gBufferTexture3, uv);\n    if (dot(texel1.rgb, vec3(1.0)) == 0.0) {\n        discard;\n    }\n    float glossiness = texel1.a;\n    float metalness = texel3.a;\n    vec3 N = texel1.rgb * 2.0 - 1.0;\n    float z = texture2D(gBufferTexture2, uv).r * 2.0 - 1.0;\n    vec2 xy = uv2 * 2.0 - 1.0;\n    vec4 projectedPos = vec4(xy, z, 1.0);\n    vec4 p4 = viewProjectionInv * projectedPos;\n    vec3 position = p4.xyz / p4.w;\n    vec3 albedo = texel3.rgb;\n    vec3 diffuseColor = albedo * (1.0 - metalness);\n    vec3 specularColor = mix(vec3(0.04), albedo, metalness);\n@end\n@export qtek.deferred.chunk.light_equation\nfloat D_Phong(in float g, in float ndh) {\n    float a = pow(8192.0, g);\n    return (a + 2.0) / 8.0 * pow(ndh, a);\n}\nfloat D_GGX(in float g, in float ndh) {\n    float r = 1.0 - g;\n    float a = r * r;\n    float tmp = ndh * ndh * (a - 1.0) + 1.0;\n    return a / (3.1415926 * tmp * tmp);\n}\nvec3 F_Schlick(in float ndv, vec3 spec) {\n    return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\n}\nvec3 lightEquation(\n    in vec3 lightColor, in vec3 diffuseColor, in vec3 specularColor,\n    in float ndl, in float ndh, in float ndv, in float g\n)\n{\n    return ndl * lightColor\n        * (diffuseColor + D_Phong(g, ndh) * F_Schlick(ndv, specularColor));\n}\n@end");var zi=$e.extend(function(){return{enableTargetTexture1:!0,enableTargetTexture2:!0,enableTargetTexture3:!0,_renderQueue:[],_gBufferTex1:new Pr({minFilter:Vt.NEAREST,magFilter:Vt.NEAREST,type:Vt.HALF_FLOAT}),_gBufferTex2:new Pr({minFilter:Vt.NEAREST,magFilter:Vt.NEAREST,format:Vt.DEPTH_STENCIL,type:Vt.UNSIGNED_INT_24_8_WEBGL}),_gBufferTex3:new Pr({minFilter:Vt.NEAREST,magFilter:Vt.NEAREST}),_defaultNormalMap:new Pr({image:ue("#000")}),_defaultRoughnessMap:new Pr({image:ue("#fff")}),_defaultMetalnessMap:new Pr({image:ue("#fff")}),_defaultDiffuseMap:new Pr({image:ue("#fff")}),_frameBuffer:new ni,_gBufferMaterials:{},_debugPass:new bi({fragment:Ut.source("qtek.deferred.gbuffer.debug")})}},{resize:function(e,t){this._gBufferTex1.width===e&&this._gBufferTex1.height===t||(this._gBufferTex1.width=e,this._gBufferTex1.height=t,this._gBufferTex2.width=e,this._gBufferTex2.height=t,this._gBufferTex3.width=e,this._gBufferTex3.height=t)},setViewport:function(e,t,r,n,i){var a;a="object"==typeof e?e:{x:e,y:t,width:r,height:n,devicePixelRatio:i||1},this._frameBuffer.viewport=a},getViewport:function(){return this._frameBuffer.viewport?this._frameBuffer.viewport:{x:0,y:0,width:this._gBufferTex1.width,height:this._gBufferTex1.height,devicePixelRatio:1}},update:function(e,t,r){for(var n=e.gl,i=this._frameBuffer,a=i.viewport,o=t.opaqueQueue,s=t.transparentQueue,u=e.beforeRenderObject,l=0;l<o.length;l++){var c=o[l].material;c.updateShader&&c.updateShader(e)}for(var l=0;l<s.length;l++){var c=s[l].material;c.updateShader&&c.updateShader(e)}o.sort(nr.opaqueSortFunc),s.sort(nr.transparentSortFunc);for(var h=0,f=this._renderQueue,l=0;l<o.length;l++)o[l].ignoreGBuffer||(f[h++]=o[l]);for(var l=0;l<s.length;l++)s[l].ignoreGBuffer||(f[h++]=s[l]);f.length=h,n.clearColor(0,0,0,0),n.depthMask(!0),n.colorMask(!0,!0,!0,!0),n.disable(n.BLEND);var d=this.enableTargetTexture1,_=this.enableTargetTexture2,p=this.enableTargetTexture3;if(d||p||(console.warn("Can't disable targetTexture1 targetTexture3 both"),d=!0),_&&i.attach(this._gBufferTex2,e.gl.DEPTH_STENCIL_ATTACHMENT),e.bindSceneRendering(t),d){if(i.attach(this._gBufferTex1),i.bind(e),a){var m=a.devicePixelRatio;n.enable(n.SCISSOR_TEST),n.scissor(a.x*m,a.y*m,a.width*m,a.height*m)}n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT),a&&n.disable(n.SCISSOR_TEST),this._resetGBufferMaterials(),this._replaceGBufferMat(f,1),e.beforeRenderObject=ce(n,this._defaultNormalMap,this._defaultRoughnessMap),e.renderQueue(f,r)}if(p){if(i.attach(this._gBufferTex3),i.bind(e),a){var m=a.devicePixelRatio;n.enable(n.SCISSOR_TEST),n.scissor(a.x*m,a.y*m,a.width*m,a.height*m)}n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT),a&&n.disable(n.SCISSOR_TEST),this._replaceGBufferMat(f,2),e.beforeRenderObject=he(n,this._defaultDiffuseMap,this._defaultMetalnessMap),e.renderQueue(f,r)}e.bindSceneRendering(null),e.beforeRenderObject=u,this._cleanGBufferMaterials(e),this._restoreMaterial(f),i.unbind(e)},renderDebug:function(e,t,r,n){var i={normal:0,depth:1,position:2,glossiness:3,metalness:4,albedo:5};null==i[r]&&(console.warn('Unkown type "'+r+'"'),r="normal"),e.saveClear(),e.saveViewport(),e.clearBit=e.gl.DEPTH_BUFFER_BIT,n&&e.setViewport(n);var a=new Et;Et.multiply(a,t.worldTransform,t.invProjectionMatrix)
;var o=this._debugPass;o.setUniform("viewportSize",[e.getWidth(),e.getHeight()]),o.setUniform("gBufferTexture1",this._gBufferTex1),o.setUniform("gBufferTexture2",this._gBufferTex2),o.setUniform("gBufferTexture3",this._gBufferTex3),o.setUniform("debug",i[r]),o.setUniform("viewProjectionInv",a._array),o.render(e),e.restoreViewport(),e.restoreClear()},getTargetTexture1:function(){return this._gBufferTex1},getTargetTexture2:function(){return this._gBufferTex2},getTargetTexture3:function(){return this._gBufferTex3},_getMaterial:function(e){var t=this._gBufferMaterials,r=t[e];if(!r){var n=new jt({shader:new Ut({vertex:Ut.source("qtek.deferred.gbuffer.vertex"),fragment:Ut.source("qtek.deferred.gbuffer1.fragment")})}),i=new jt({shader:new Ut({vertex:Ut.source("qtek.deferred.gbuffer.vertex"),fragment:Ut.source("qtek.deferred.gbuffer2.fragment")})});n.shader.define("vertex","FIRST_PASS"),e>0&&(n.shader.define("vertex","SKINNING"),n.shader.define("vertex","JOINT_COUNT",e),i.shader.define("vertex","SKINNING"),i.shader.define("vertex","JOINT_COUNT",e)),r={material1:n,material2:i},t[e]=r}return r.used=!0,r},_resetGBufferMaterials:function(){for(var e in this._gBufferMaterials)this._gBufferMaterials[e].used=!1},_cleanGBufferMaterials:function(e){for(var t in this._gBufferMaterials){var r=this._gBufferMaterials[t];r.used||(r.material1.dispose(e),r.material2.dispose(e))}},_replaceGBufferMat:function(e,t){for(var r=0;r<e.length;r++){var n=e[r];1===t&&(n.__standardMat=n.material);var i=this._getMaterial(n.joints?n.joints.length:0,!1);n.material=1===t?i.material1:i.material2}},_restoreMaterial:function(e){for(var t=0;t<e.length;t++){var r=e[t];r.__standardMat&&(r.material=r.__standardMat)}},dispose:function(e){for(var t in this._gBufferMaterials){var r=this._gBufferMaterials[t];r.material1.dispose(e),r.material2.dispose(e)}}}),Gi=function(){this.head=null,this.tail=null,this._len=0},qi=Gi.prototype;qi.insert=function(e){var t=new Wi(e);return this.insertEntry(t),t},qi.insertEntry=function(e){this.head?(this.tail.next=e,e.prev=this.tail,e.next=null,this.tail=e):this.head=this.tail=e,this._len++},qi.remove=function(e){var t=e.prev,r=e.next;t?t.next=r:this.head=r,r?r.prev=t:this.tail=t,e.next=e.prev=null,this._len--},qi.len=function(){return this._len},qi.clear=function(){this.head=this.tail=null,this._len=0};var Wi=function(e){this.value=e,this.next,this.prev},Vi=function(e){this._list=new Gi,this._map={},this._maxSize=e||10,this._lastRemovedEntry=null},ji=Vi.prototype;ji.put=function(e,t){var r=this._list,n=this._map,i=null;if(null==n[e]){var a=r.len(),o=this._lastRemovedEntry;if(a>=this._maxSize&&a>0){var s=r.head;r.remove(s),delete n[s.key],i=s.value,this._lastRemovedEntry=s}o?o.value=t:o=new Wi(t),o.key=e,r.insertEntry(o),n[e]=o}return i},ji.get=function(e){var t=this._map[e],r=this._list;if(null!=t)return t!==r.tail&&(r.remove(t),r.insertEntry(t)),t.value},ji.clear=function(){this._list.clear(),this._map={}};var Xi=new Et,Ki=bn.extend({widthSegments:1,heightSegments:1,depthSegments:1,inside:!1},function(){this.build()},{build:function(){var e={px:fe("px",this.depthSegments,this.heightSegments),nx:fe("nx",this.depthSegments,this.heightSegments),py:fe("py",this.widthSegments,this.depthSegments),ny:fe("ny",this.widthSegments,this.depthSegments),pz:fe("pz",this.widthSegments,this.heightSegments),nz:fe("nz",this.widthSegments,this.heightSegments)},t=["position","texcoord0","normal"],r=0,n=0;for(var i in e)r+=e[i].vertexCount,n+=e[i].indices.length;for(var a=0;a<t.length;a++)this.attributes[t[a]].init(r);this.indices=new at.Uint16Array(n);var o=0,s=0;for(var i in e){for(var u=e[i],a=0;a<t.length;a++)for(var l=t[a],c=u.attributes[l].value,h=u.attributes[l].size,f="normal"===l,d=0;d<c.length;d++){var _=c[d];this.inside&&f&&(_=-_),this.attributes[l].value[d+h*s]=_}for(var d=0;d<u.indices.length;d++)this.indices[d+o]=s+u.indices[d];o+=u.indices.length,s+=u.vertexCount}this.boundingBox=new vt,this.boundingBox.max.set(1,1,1),this.boundingBox.min.set(-1,-1,-1)}});Ut.import(An);var Yi=Ir.extend(function(){var e=new Ut({vertex:Ut.source("qtek.skybox.vertex"),fragment:Ut.source("qtek.skybox.fragment")}),t=new jt({shader:e,depthMask:!1});return{scene:null,geometry:new Ki,material:t,environmentMap:null,culling:!1}},function(){var e=this.scene;e&&this.attachScene(e),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)},{attachScene:function(e){this.scene&&this.detachScene(),this.scene=e,e.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&this.scene.off("beforerender",this._beforeRenderScene),this.scene=null},dispose:function(e){this.detachScene(),this.geometry.dispose(e),this.material.dispose(e)},setEnvironmentMap:function(e){this.material.set("environmentMap",e)},getEnvironmentMap:function(){return this.material.get("environmentMap")},_beforeRenderScene:function(e,t,r){this.renderSkybox(e,r)},renderSkybox:function(e,t){this.position.copy(t.getWorldPosition()),this.update(),e.gl.disable(e.gl.BLEND),e.renderQueue([this],t)}}),Zi={},Qi=["px","nx","py","ny","pz","nz"];Zi.prefilterEnvironmentMap=function(e,t,r,n,i){i&&n||(n=Zi.generateNormalDistribution(),i=Zi.integrateBRDF(e,n)),r=r||{};var a=r.width||64,o=r.height||64,s=r.type||t.type,u=new Jn({width:a,height:o,type:s,flipY:!1,mipmaps:[]});u.isPowerOfTwo()||console.warn("Width and height must be power of two to enable mipmap.");var l=Math.min(a,o),c=Math.log(l)/Math.log(2)+1,h=new jt({shader:new Ut({vertex:Ut.source("qtek.skybox.vertex"),fragment:"#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform mat4 viewInverse : VIEWINVERSE;\nuniform samplerCube environmentMap;\nuniform sampler2D normalDistribution;\nuniform float roughness : 0.5;\nvarying vec2 v_Texcoord;\nvarying vec3 v_WorldPosition;\nconst float fSampleNumber = float(SAMPLE_NUMBER);\n@import qtek.util.rgbm\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n    vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n    vec3 upVector = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);\n    vec3 tangentX = normalize(cross(upVector, N));\n    vec3 tangentY = cross(N, tangentX);\n    return tangentX * H.x + tangentY * H.y + N * H.z;\n}\nvoid main() {\n    vec3 eyePos = viewInverse[3].xyz;\n    vec3 V = normalize(v_WorldPosition - eyePos);\n    vec3 N = V;\n    vec3 R = V;\n    vec3 prefilteredColor = vec3(0.0);\n    float totalWeight = 0.0;\n    for (int i = 0; i < SAMPLE_NUMBER; i++) {\n        vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\n        vec3 L = reflect(-V, H);\n        float NoL = clamp(dot(N, L), 0.0, 1.0);\n        if (NoL > 0.0) {\n            prefilteredColor += decodeHDR(textureCube(environmentMap, L)).rgb * NoL;\n            totalWeight += NoL;\n        }\n    }\n    gl_FragColor = encodeHDR(vec4(prefilteredColor / totalWeight, 1.0));\n}\n"})});h.set("normalDistribution",n),r.encodeRGBM&&h.shader.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&h.shader.define("fragment","RGBM_DECODE");var f,d=new _r;if(t instanceof Pr){var _=new Jn({width:a,height:o,type:s===Vt.FLOAT?Vt.HALF_FLOAT:s});mi.panoramaToCubeMap(e,t,_,{encodeRGBM:r.decodeRGBM}),t=_}f=new Yi({scene:d,material:h}),f.material.set("environmentMap",t);var p=new ai({texture:u});r.encodeRGBM&&(s=u.type=Vt.UNSIGNED_BYTE);for(var m=new Pr({width:a,height:o,type:s}),v=new ni({depthBuffer:!1}),g=at[s===Vt.UNSIGNED_BYTE?"Uint8Array":"Float32Array"],y=0;y<c;y++){u.mipmaps[y]={pixels:{}},f.material.set("roughness",y/(Qi.length-1));for(var x=m.width,T=2*Math.atan(x/(x-.5))/Math.PI*180,E=0;E<Qi.length;E++){var b=new g(m.width*m.height*4);v.attach(m),v.bind(e);var S=p.getCamera(Qi[E]);S.fov=T,e.render(d,S),e.gl.readPixels(0,0,m.width,m.height,Vt.RGBA,s,b),v.unbind(e),u.mipmaps[y].pixels[Qi[E]]=b}m.width/=2,m.height/=2,m.dirty()}return v.dispose(e),m.dispose(e),f.dispose(e),n.dispose(e),{environmentMap:u,brdfLookup:i,normalDistribution:n,maxMipmapLevel:c}},Zi.integrateBRDF=function(e,t){t=t||Zi.generateNormalDistribution();var r=new ni({depthBuffer:!1}),n=new bi({fragment:"#define SAMPLE_NUMBER 1024\n#define PI 3.14159265358979\nuniform sampler2D normalDistribution;\nuniform vec2 viewportSize : [512, 256];\nconst vec3 N = vec3(0.0, 0.0, 1.0);\nconst float fSampleNumber = float(SAMPLE_NUMBER);\nvec3 importanceSampleNormal(float i, float roughness, vec3 N) {\n    vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;\n    vec3 upVector = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);\n    vec3 tangentX = normalize(cross(upVector, N));\n    vec3 tangentY = cross(N, tangentX);\n    return tangentX * H.x + tangentY * H.y + N * H.z;\n}\nfloat G_Smith(float roughness, float NoV, float NoL) {\n    float k = roughness * roughness / 2.0;\n    float G1V = NoV / (NoV * (1.0 - k) + k);\n    float G1L = NoL / (NoL * (1.0 - k) + k);\n    return G1L * G1V;\n}\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / viewportSize;\n    float NoV = uv.x;\n    float roughness = uv.y;\n    vec3 V;\n    V.x = sqrt(1.0 - NoV * NoV);\n    V.y = 0.0;\n    V.z = NoV;\n    float A = 0.0;\n    float B = 0.0;\n    for (int i = 0; i < SAMPLE_NUMBER; i++) {\n        vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);\n        vec3 L = reflect(-V, H);\n        float NoL = clamp(L.z, 0.0, 1.0);\n        float NoH = clamp(H.z, 0.0, 1.0);\n        float VoH = clamp(dot(V, H), 0.0, 1.0);\n        if (NoL > 0.0) {\n            float G = G_Smith(roughness, NoV, NoL);\n            float G_Vis = G * VoH / (NoH * NoV);\n            float Fc = pow(1.0 - VoH, 5.0);\n            A += (1.0 - Fc) * G_Vis;\n            B += Fc * G_Vis;\n        }\n    }\n    gl_FragColor = vec4(vec2(A, B) / fSampleNumber, 0.0, 1.0);\n}\n"}),i=new Pr({width:512,height:256,type:Vt.HALF_FLOAT,minFilter:Vt.NEAREST,magFilter:Vt.NEAREST,useMipmap:!1});return n.setUniform("normalDistribution",t),n.setUniform("viewportSize",[512,256]),n.attachOutput(i),n.render(e,r),r.dispose(e),i},Zi.generateNormalDistribution=function(e,t){for(var e=e||256,t=t||1024,r=new Pr({width:e,height:t,type:Vt.FLOAT,minFilter:Vt.NEAREST,magFilter:Vt.NEAREST,useMipmap:!1}),n=new Float32Array(t*e*4),i=0;i<t;i++){var a=i/t,o=(i<<16|i>>>16)>>>0;o=((1431655765&o)<<1|(2863311530&o)>>>1)>>>0,o=((858993459&o)<<2|(3435973836&o)>>>2)>>>0,o=((252645135&o)<<4|(4042322160&o)>>>4)>>>0,o=(((16711935&o)<<8|(4278255360&o)>>>8)>>>0)/4294967296;for(var s=0;s<e;s++){var u=s/e,l=u*u,c=2*Math.PI*a,h=Math.sqrt((1-o)/(1+(l*l-1)*o)),f=Math.sqrt(1-h*h),d=4*(i*e+s);n[d]=f*Math.cos(c),n[d+1]=f*Math.sin(c),n[d+2]=h,n[d+3]=1}}return r.pixels=n,r};var Ji=dr.extend({cubemap:null,castShadow:!1,_normalDistribution:null,_brdfLookup:null},{type:"AMBIENT_CUBEMAP_LIGHT",prefilter:function(e,t){this._brdfLookup||(this._normalDistribution=Zi.generateNormalDistribution(),this._brdfLookup=Zi.integrateBRDF(e,this._normalDistribution));var r=this.cubemap;if(!r.__prefiltered){var n=Zi.prefilterEnvironmentMap(e,r,{encodeRGBM:!0,width:t,height:t},this._normalDistribution,this._brdfLookup);this.cubemap=n.environmentMap,this.cubemap.__prefiltered=!0,r.dispose(e)}},uniformTemplates:{ambientCubemapLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}},ambientCubemapLightCubemap:{type:"t",value:function(e){return e.cubemap}},ambientCubemapLightBRDFLookup:{type:"t",value:function(e){return e._brdfLookup}}}}),$i=dr.extend({castShadow:!1,coefficients:[]},function(){this._coefficientsTmpArr=new at.Float32Array(27)},{type:"AMBIENT_SH_LIGHT",uniformTemplates:{ambientSHLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}},ambientSHLightCoefficients:{type:"3f",value:function(e){for(var t=e._coefficientsTmpArr,r=0;r<e.coefficients.length;r++)t[r]=e.coefficients[r];return t}}}}),ea=ot.vec3,ta={},ra=["px","nx","py","ny","pz","nz"],na={px:[2,1,0,-1,-1,1],nx:[2,1,0,1,-1,-1],py:[0,2,1,1,-1,-1],ny:[0,2,1,1,1,1],pz:[0,1,2,-1,-1,-1],nz:[0,1,2,1,-1,1]};ta.projectEnvironmentMap=function(e,t,r){r=r||{},r.lod=r.lod||0;var n,i=new _r,a=64;t instanceof Pr?n=new si({scene:i,environmentMap:t}):(a=t.image&&t.image.px?t.image.px.width:t.width,n=new Yi({scene:i,environmentMap:t}));var o=Math.ceil(a/Math.pow(2,r.lod)),s=Math.ceil(a/Math.pow(2,r.lod)),u=new Pr({width:o,height:s}),l=new ni;n.material.shader.define("fragment","RGBM_ENCODE"),r.decodeRGBM&&n.material.shader.define("fragment","RGBM_DECODE"),n.material.set("lod",r.lod);for(var c=new ai({texture:u}),h={},f=0;f<ra.length;f++){h[ra[f]]=new Uint8Array(o*s*4);var d=c.getCamera(ra[f]);d.fov=90,l.attach(u),l.bind(e),e.render(i,d),e.gl.readPixels(0,0,o,s,Vt.RGBA,Vt.UNSIGNED_BYTE,h[ra[f]]),l.unbind(e)}return n.dispose(e),l.dispose(e),u.dispose(e),_e(e,h,o,s)};var ia={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]},aa=new Vi(20),oa=null;jt.prototype.setTextureImage=function(e,t,r,n){if(this.shader){var i,a=this;return a.shader.disableTexture(e),Ne(t)||(i=sa.loadTexture(t,r,n,function(t){a.shader.enableTexture(e),r.refresh()}),a.set(e,i)),i}};var sa={},ua=mi.createBlank("rgba(255,255,255,0)").image;sa.firstNotNull=function(){for(var e=0,t=arguments.length;e<t;e++)if(null!=arguments[e])return arguments[e]},sa.loadTexture=function(e,t,r,n){"function"==typeof r&&(n=r,r={}),r=r||{};for(var i=Object.keys(r).sort(),a="",o=0;o<i.length;o++)a+=i[o]+"_"+r[i[o]]+"_";var s=t.__textureCache=t.__textureCache||new Vi(20);if(we(e)){var u=e.__textureid__,l=s.get(a+u);if(!l){l={texture:new Pr({image:e})};for(var o=0;o<i.length;o++)l.texture[i[o]]=r[i[o]];u=e.__textureid__||"__ecgl_image__"+l.texture.__GUID__,e.__textureid__=u,s.put(a+u,l),Re(l.texture),n&&n(l.texture)}return l.texture}var l=s.get(a+e);if(l)l.callbacks?l.callbacks.push(n):n&&n(l.texture);else if(e.match(/.hdr$|^data:application\/octet-stream/)){l={callbacks:[n]};var c=mi.loadTexture(e,{exposure:r.exposure,fileType:"hdr"},function(){c.dirty(),l.callbacks.forEach(function(e){e&&e(c)}),l.callbacks=null});l.texture=c,s.put(a+e,l)}else{for(var c=new Pr({image:new Image}),o=0;o<i.length;o++)c[i[o]]=r[i[o]];l={texture:c,callbacks:[n]};var h=c.image;h.onload=function(){c.image=h,Re(c),c.dirty(),l.callbacks.forEach(function(e){e&&e(c)}),l.callbacks=null},h.src=e,c.image=ua,s.put(a+e,l)}return l.texture},sa.createAmbientCubemap=function(e,t,r){e=e||{};var n,i,a=t.getRenderer(),o=e.texture,s=sa.firstNotNull(e.exposure,1);return 0!==e.diffuseIntensity&&(i=new $i({coefficients:[.844,.712,.691,-.037,.083,.167,.343,.288,.299,-.041,-.021,-.009,-.003,-.041,-.064,-.011,-.007,-.004,-.031,.034,.081,-.06,-.049,-.06,.046,.056,.05]})),0!==e.specularIntensity?(n=new Ji,n.cubemap=sa.loadTexture(o,t,{exposure:s},function(e){n.cubemap=e,e.flipY=!1,n.prefilter(a,32),i.coefficients=ta.projectEnvironmentMap(a,n.cubemap,{lod:1}),setTimeout(function(){r&&r()})})):setTimeout(function(){r&&r()}),{specular:n,diffuse:i}},sa.createBlankTexture=mi.createBlank,sa.isImage=we,sa.additiveBlend=function(e){e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)},sa.parseColor=function(e,t){return e instanceof Array?(t||(t=[]),t[0]=e[0],t[1]=e[1],t[2]=e[2],e.length>3?t[3]=e[3]:t[3]=1,t):(t=be(e||"#000",t)||[0,0,0,0],t[0]/=255,t[1]/=255,t[2]/=255,t)},sa.stringifyColor=function(e,t){return e=e.slice(),e[0]=Math.round(255*e[0]),e[1]=Math.round(255*e[1]),e[2]=Math.round(255*e[2]),"hex"===t?"#"+((1<<24)+(e[0]<<16)+(e[1]<<8)+e[2]).toString(16).slice(1):Ae(e,t)},sa.directionFromAlphaBeta=function(e,t){var r=e/180*Math.PI+Math.PI/2,n=-t/180*Math.PI+Math.PI/2,i=[],a=Math.sin(r);return i[0]=a*Math.cos(n),i[1]=-Math.cos(r),i[2]=a*Math.sin(n),i},sa.convertTextureToPowerOfTwo=Re;var la={type:"compositor",nodes:[{name:"source",type:"texture",outputs:{color:{}}},{name:"source_half",shader:"#source(qtek.compositor.downsample)",inputs:{texture:"source"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"bright",shader:"#source(qtek.compositor.bright)",inputs:{texture:"source_half"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{threshold:2,scale:4,textureSize:"expr([width * 1.0 / 2, height / 2])"}},{name:"bright_downsample_4",shader:"#source(qtek.compositor.downsample)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 2, height / 2] )"}},{name:"bright_downsample_8",shader:"#source(qtek.compositor.downsample)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 4, height / 4] )"}},{name:"bright_downsample_16",shader:"#source(qtek.compositor.downsample)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 8, height / 8] )"}},{name:"bright_downsample_32",shader:"#source(qtek.compositor.downsample)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 32)",height:"expr(height * 1.0 / 32)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 16, height / 16] )"}},{name:"bright_upsample_16_blur_h",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_32"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 32, height / 32] )"}},{name:"bright_upsample_16_blur_v",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_16_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 32, height * 1.0 / 32] )"}},{name:"bright_upsample_8_blur_h",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blur_v",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_8_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blend",shader:"#source(qtek.compositor.blend)",inputs:{texture1:"bright_upsample_8_blur_v",texture2:"bright_upsample_16_blur_v"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_4_blur_h",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_4_blur_v",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_4_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_4_blend",shader:"#source(qtek.compositor.blend)",inputs:{texture1:"bright_upsample_4_blur_v",texture2:"bright_upsample_8_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_2_blur_h",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_2_blur_v",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_2_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_2_blend",shader:"#source(qtek.compositor.blend)",inputs:{texture1:"bright_upsample_2_blur_v",texture2:"bright_upsample_4_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_full_blur_h",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bright_upsample_full_blur_v",shader:"#source(qtek.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_full_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bloom_composite",shader:"#source(qtek.compositor.blend)",inputs:{texture1:"bright_upsample_full_blur_v",texture2:"bright_upsample_2_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"coc",shader:"#source(ecgl.dof.coc)",outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{focalDist:50,focalRange:30}},{name:"dof_far_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"dof_near_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_NEARFIELD:null}},{name:"dof_coc_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"coc"},outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_COC:null}},{name:"dof_composite",shader:"#source(ecgl.dof.composite)",inputs:{original:"source",blurred:"dof_far_blur",nearfield:"dof_near_blur",coc:"coc",nearcoc:"dof_coc_blur"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}}},{name:"composite",shader:"#source(qtek.compositor.hdr.composite)",inputs:{texture:"source",bloom:"bloom_composite"},defines:{}},{name:"FXAA",shader:"#source(qtek.compositor.fxaa)",inputs:{texture:"composite"}}]};Ut.import(Nn),Ut.import(wn),Ut.import(Mn),Ut.import(Rn),Ut.import(Cn),Ut.import(Ln),Ut.import(Dn),Ut.import(Pn),Ut.import(Hi),Ut.import("@export ecgl.dof.coc\n\nuniform sampler2D depth;\n\nuniform float zNear: 0.1;\nuniform float zFar: 2000;\n\nuniform float focalDistance: 3;\nuniform float focalRange: 1;\nuniform float focalLength: 30;\nuniform float fstop: 2.8;\n\nvarying vec2 v_Texcoord;\n\n@import qtek.util.encode_float\n\nvoid main()\n{\n float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\n\n float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\n\n float aperture = focalLength / fstop;\n\n float coc;\n\n float uppper = focalDistance + focalRange;\n float lower = focalDistance - focalRange;\n if (dist <= uppper && dist >= lower) {\n coc = 0.5;\n }\n else {\n float focalAdjusted = dist > uppper ? uppper : lower;\n\n coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\n coc = clamp(coc, 0.0, 2.0) / 2.00001;\n\n if (dist < lower) {\n coc = -coc;\n }\n coc = coc * 0.5 + 0.5;\n }\n\n gl_FragColor = encodeFloat(coc);\n}\n@end\n\n\n@export ecgl.dof.composite\n\n#define DEBUG 0\n\nuniform sampler2D original;\nuniform sampler2D blurred;\nuniform sampler2D nearfield;\nuniform sampler2D coc;\nuniform sampler2D nearcoc;\nvarying vec2 v_Texcoord;\n\n@import qtek.util.rgbm\n@import qtek.util.float\n\nvoid main()\n{\n vec4 blurredColor = decodeHDR(texture2D(blurred, v_Texcoord));\n vec4 originalColor = decodeHDR(texture2D(original, v_Texcoord));\n\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\n\n fCoc = abs(fCoc * 2.0 - 1.0);\n\n float weight = smoothstep(0.0, 1.0, fCoc);\n \n#ifdef NEARFIELD_ENABLED\n vec4 nearfieldColor = decodeHDR(texture2D(nearfield, v_Texcoord));\n float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\n fNearCoc = abs(fNearCoc * 2.0 - 1.0);\n\n gl_FragColor = encodeHDR(\n mix(\n nearfieldColor, mix(originalColor, blurredColor, weight),\n pow(1.0 - fNearCoc, 4.0)\n )\n );\n#else\n gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\n#endif\n\n}\n\n@end\n\n\n\n@export ecgl.dof.diskBlur\n\n#define POISSON_KERNEL_SIZE 16;\n\nuniform sampler2D texture;\nuniform sampler2D coc;\nvarying vec2 v_Texcoord;\n\nuniform float blurRadius : 10.0;\nuniform vec2 textureSize : [512.0, 512.0];\n\nuniform vec2 poissonKernel[POISSON_KERNEL_SIZE];\n\nuniform float percent;\n\nfloat nrand(const in vec2 n) {\n return fract(sin(dot(n.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n@import qtek.util.rgbm\n@import qtek.util.float\n\n\nvoid main()\n{\n vec2 offset = blurRadius / textureSize;\n\n float rnd = 6.28318 * nrand(v_Texcoord + 0.07 * percent );\n float cosa = cos(rnd);\n float sina = sin(rnd);\n vec4 basis = vec4(cosa, -sina, sina, cosa);\n\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\n#endif\n\n#ifdef BLUR_COC\n float cocSum = 0.0;\n#else\n vec4 color = vec4(0.0);\n#endif\n\n\n float weightSum = 0.0;\n\n for (int i = 0; i < POISSON_KERNEL_SIZE; i++) {\n vec2 ofs = poissonKernel[i];\n\n ofs = vec2(dot(ofs, basis.xy), dot(ofs, basis.zw));\n\n vec2 uv = v_Texcoord + ofs * offset;\n vec4 texel = texture2D(texture, uv);\n\n float w = 1.0;\n#ifdef BLUR_COC\n float fCoc = decodeFloat(texel) * 2.0 - 1.0;\n cocSum += clamp(fCoc, -1.0, 0.0) * w;\n#else\n texel = decodeHDR(texel);\n #if !defined(BLUR_NEARFIELD)\n float fCoc = decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0;\n w *= abs(fCoc);\n #endif\n color += texel * w;\n#endif\n\n weightSum += w;\n }\n\n#ifdef BLUR_COC\n gl_FragColor = encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\n#else\n color /= weightSum;\n gl_FragColor = encodeHDR(color);\n#endif\n}\n\n@end"),
Ut.import("@export ecgl.edge\n\nuniform sampler2D texture;\n\nuniform sampler2D normalTexture;\nuniform sampler2D depthTexture;\n\nuniform mat4 projectionInv;\n\nuniform vec2 textureSize;\n\nuniform vec4 edgeColor: [0,0,0,0.8];\n\nvarying vec2 v_Texcoord;\n\nvec3 packColor(vec2 coord) {\n float z = texture2D(depthTexture, coord).r * 2.0 - 1.0;\n vec4 p = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\n vec4 p4 = projectionInv * p;\n\n return vec3(\n texture2D(normalTexture, coord).rg,\n -p4.z / p4.w / 5.0\n );\n}\n\nvoid main() {\n vec2 cc = v_Texcoord;\n vec3 center = packColor(cc);\n\n float size = clamp(1.0 - (center.z - 10.0) / 100.0, 0.0, 1.0) * 0.5;\n float dx = size / textureSize.x;\n float dy = size / textureSize.y;\n\n vec2 coord;\n vec3 topLeft = packColor(cc+vec2(-dx, -dy));\n vec3 top = packColor(cc+vec2(0.0, -dy));\n vec3 topRight = packColor(cc+vec2(dx, -dy));\n vec3 left = packColor(cc+vec2(-dx, 0.0));\n vec3 right = packColor(cc+vec2(dx, 0.0));\n vec3 bottomLeft = packColor(cc+vec2(-dx, dy));\n vec3 bottom = packColor(cc+vec2(0.0, dy));\n vec3 bottomRight = packColor(cc+vec2(dx, dy));\n\n vec3 v = -topLeft-2.0*top-topRight+bottomLeft+2.0*bottom+bottomRight;\n vec3 h = -bottomLeft-2.0*left-topLeft+bottomRight+2.0*right+topRight;\n\n float edge = sqrt(dot(h, h) + dot(v, v));\n\n edge = smoothstep(0.8, 1.0, edge);\n\n gl_FragColor = mix(texture2D(texture, v_Texcoord), vec4(edgeColor.rgb, 1.0), edgeColor.a * edge);\n}\n@end");var ca={color:{parameters:{width:function(e){return e.getWidth()},height:function(e){return e.getHeight()}}}},ha=["composite","FXAA"];Ce.prototype.resize=function(e,t,r){r=r||1,e*=r,t*=r;var n=this._sourceTexture,i=this._depthTexture;n.width=e,n.height=t,i.width=e,i.height=t,this._gBufferPass.resize(e,t)},Ce.prototype._ifRenderNormalPass=function(){return this._enableSSAO||this._enableEdge||this._enableSSR},Ce.prototype._getPrevNode=function(e){for(var t=ha.indexOf(e.name)-1,r=this._finalNodesChain[t];r&&!this._compositor.getNodeByName(r.name);)t-=1,r=this._finalNodesChain[t];return r},Ce.prototype._getNextNode=function(e){for(var t=ha.indexOf(e.name)+1,r=this._finalNodesChain[t];r&&!this._compositor.getNodeByName(r.name);)t+=1,r=this._finalNodesChain[t];return r},Ce.prototype._addChainNode=function(e){var t=this._getPrevNode(e),r=this._getNextNode(e);t&&(t.outputs=ca,e.inputs.texture=t.name,r?(e.outputs=ca,r.inputs.texture=e.name):e.outputs=null,this._compositor.addNode(e))},Ce.prototype._removeChainNode=function(e){var t=this._getPrevNode(e),r=this._getNextNode(e);t&&(r?(t.outputs=ca,r.inputs.texture=t.name):t.outputs=null,this._compositor.removeNode(e))},Ce.prototype.updateNormal=function(e,t,r,n){this._ifRenderNormalPass()&&this._gBufferPass.update(e,t,r)},Ce.prototype.updateSSAO=function(e,t,r,n){this._ssaoPass.update(e,r,n)},Ce.prototype.enableSSAO=function(){this._enableSSAO=!0},Ce.prototype.disableSSAO=function(){this._enableSSAO=!1},Ce.prototype.enableSSR=function(){this._enableSSR=!0},Ce.prototype.disableSSR=function(){this._enableSSR=!1},Ce.prototype.getSSAOTexture=function(e,t,r,n){return this._ssaoPass.getTargetTexture()},Ce.prototype.getSourceFrameBuffer=function(){return this._framebuffer},Ce.prototype.getSourceTexture=function(){return this._sourceTexture},Ce.prototype.disableFXAA=function(){this._removeChainNode(this._fxaaNode)},Ce.prototype.enableFXAA=function(){this._addChainNode(this._fxaaNode)},Ce.prototype.enableBloom=function(){this._compositeNode.inputs.bloom="bloom_composite",this._compositor.dirty()},Ce.prototype.disableBloom=function(){this._compositeNode.inputs.bloom=null,this._compositor.dirty()},Ce.prototype.enableDOF=function(){this._compositeNode.inputs.texture="dof_composite",this._compositor.dirty()},Ce.prototype.disableDOF=function(){this._compositeNode.inputs.texture="source",this._compositor.dirty()},Ce.prototype.enableColorCorrection=function(){this._compositeNode.shaderDefine("COLOR_CORRECTION"),this._enableColorCorrection=!0},Ce.prototype.disableColorCorrection=function(){this._compositeNode.shaderUndefine("COLOR_CORRECTION"),this._enableColorCorrection=!1},Ce.prototype.enableEdge=function(){this._enableEdge=!0},Ce.prototype.disableEdge=function(){this._enableEdge=!1},Ce.prototype.setBloomIntensity=function(e){null!=e&&this._compositeNode.setParameter("bloomIntensity",e)},Ce.prototype.setSSAOParameter=function(e,t){if(null!=t)switch(e){case"quality":var r={low:6,medium:12,high:32,ultra:62}[t]||12;this._ssaoPass.setParameter("kernelSize",r);break;case"radius":this._ssaoPass.setParameter(e,t),this._ssaoPass.setParameter("bias",t/50);break;case"intensity":this._ssaoPass.setParameter(e,t)}},Ce.prototype.setDOFParameter=function(e,t){if(null!=t)switch(e){case"focalDistance":case"focalRange":case"fstop":this._cocNode.setParameter(e,t);break;case"blurRadius":for(var r=0;r<this._dofBlurNodes.length;r++)this._dofBlurNodes[r].setParameter("blurRadius",t);break;case"quality":var n={low:4,medium:8,high:16,ultra:32}[t]||8;this._dofBlurKernelSize=n;for(var r=0;r<this._dofBlurNodes.length;r++)this._dofBlurNodes[r].shaderDefine("POISSON_KERNEL_SIZE",n);this._dofBlurKernel=new Float32Array(2*n)}},Ce.prototype.setSSRParameter=function(e,t){if(null!=t)switch(e){case"quality":var r={low:10,medium:20,high:40,ultra:80}[t]||20,n={low:32,medium:16,high:8,ultra:4}[t]||16;this._ssrPass.setParameter("maxIteration",r),this._ssrPass.setParameter("pixelStride",n);break;case"maxRoughness":this._ssrPass.setParameter("minGlossiness",Math.max(Math.min(1-t,1),0));break;default:__DEV__&&console.warn("Unkown SSR parameter "+e)}},Ce.prototype.setEdgeColor=function(e){},Ce.prototype.setExposure=function(e){null!=e&&this._compositeNode.setParameter("exposure",Math.pow(2,e))},Ce.prototype.setColorLookupTexture=function(e,t){this._compositeNode.pass.material.setTextureImage("lut",this._enableColorCorrection?e:"none",t,{minFilter:Vt.NEAREST,magFilter:Vt.NEAREST,flipY:!1})},Ce.prototype.setColorCorrection=function(e,t){this._compositeNode.setParameter(e,t)},Ce.prototype.composite=function(e,t,r,n){var i=this._sourceTexture,a=i;this._enableSSR&&(this._ssrPass.update(e,t,i,n),a=this._ssrPass.getTargetTexture()),this._sourceNode.texture=a,this._cocNode.setParameter("depth",this._depthTexture);for(var o=this._dofBlurKernel,s=this._dofBlurKernelSize,u=Math.floor(Ui.length/2/s),l=n%u,c=0;c<2*s;c++)o[c]=Ui[c+l*s*2];for(var c=0;c<this._dofBlurNodes.length;c++)this._dofBlurNodes[c].setParameter("percent",n/30),this._dofBlurNodes[c].setParameter("poissonKernel",o);this._cocNode.setParameter("zNear",t.near),this._cocNode.setParameter("zFar",t.far),this._compositor.render(e,r)},Ce.prototype.dispose=function(e){this._sourceTexture.dispose(e),this._depthTexture.dispose(e),this._framebuffer.dispose(e),this._compositor.dispose(e),this._gBufferPass.dispose(e),this._ssaoPass.dispose(e)},Le.prototype={constructor:Le,jitterProjection:function(e,t){var r=e.viewport,n=r.devicePixelRatio||e.getDevicePixelRatio(),i=r.width*n,a=r.height*n,o=this._haltonSequence[this._frame],s=new Et;s._array[12]=(2*o[0]-1)/i,s._array[13]=(2*o[1]-1)/a,Et.mul(t.projectionMatrix,s,t.projectionMatrix),Et.invert(t.invProjectionMatrix,t.projectionMatrix)},resetFrame:function(){this._frame=0},getFrame:function(){return this._frame},getSourceFrameBuffer:function(){return this._sourceFb},resize:function(e,t){this._sourceTex.width===e&&this._sourceTex.height===t||(this._prevFrameTex.width=e,this._prevFrameTex.height=t,this._outputTex.width=e,this._outputTex.height=t,this._sourceTex.width=e,this._sourceTex.height=t,this._prevFrameTex.dirty(),this._outputTex.dirty(),this._sourceTex.dirty())},isFinished:function(){return this._frame>=this._haltonSequence.length},render:function(e){var t=this._blendPass;0===this._frame?(t.setUniform("weight1",0),t.setUniform("weight2",1)):(t.setUniform("weight1",.9),t.setUniform("weight2",.1)),t.setUniform("texture1",this._prevFrameTex),t.setUniform("texture2",this._sourceTex),this._blendFb.attach(this._outputTex),this._blendFb.bind(e),t.render(e),this._blendFb.unbind(e),this._outputPass.setUniform("texture",this._outputTex),this._outputPass.render(e);var r=this._prevFrameTex;this._prevFrameTex=this._outputTex,this._outputTex=r,this._frame++},dispose:function(e){this._sourceFb.dispose(e),this._blendFb.dispose(e),this._prevFrameTex.dispose(e),this._outputTex.dispose(e),this._sourceTex.dispose(e),this._outputPass.dispose(e),this._blendPass.dispose(e)}},De.prototype.setProjection=function(e){var t=this.camera;t&&t.update(),"perspective"===e?this.camera instanceof rn||(this.camera=new rn,t&&this.camera.setLocalTransform(t.localTransform)):this.camera instanceof nn||(this.camera=new nn,t&&this.camera.setLocalTransform(t.localTransform)),this.camera.near=.1,this.camera.far=2e3},De.prototype.setViewport=function(e,t,r,n,i){this.camera instanceof rn&&(this.camera.aspect=r/n),i=i||1,this.viewport.x=e,this.viewport.y=t,this.viewport.width=r,this.viewport.height=n,this.viewport.devicePixelRatio=i,this._compositor.resize(r*i,n*i),this._temporalSS.resize(r*i,n*i)},De.prototype.containPoint=function(e,t){var r=this.viewport;return t=this.layer.renderer.getHeight()-t,e>=r.x&&t>=r.y&&e<=r.x+r.width&&t<=r.y+r.height};var fa=new Kt;De.prototype.castRay=function(e,t,r){var n=this.layer.renderer,i=n.viewport;return n.viewport=this.viewport,n.screenToNDC(e,t,fa),this.camera.castRay(fa,r),n.viewport=i,r},De.prototype.prepareRender=function(){this.scene.update(),this.camera.update(),this._frame=0,this._temporalSS.resetFrame()},De.prototype.render=function(e){this._doRender(e,this._frame),this._frame++},De.prototype.needsAccumulate=function(){return this.needsTemporalSS()||this._needsSortProgressively},De.prototype.needsTemporalSS=function(){var e=this._enableTemporalSS;return"auto"==e&&(e=this._enablePostEffect),e},De.prototype.hasDOF=function(){return this._enableDOF},De.prototype.isAccumulateFinished=function(){return this.needsTemporalSS()?this._temporalSS.isFinished():this._frame>30},De.prototype._doRender=function(e,t){var r=this.scene,n=this.camera,i=this.renderer;if(t=t||0,!e&&this._shadowMapPass&&(this._shadowMapPass.kernelPCF=this._pcfKernels[0],this._shadowMapPass.render(i,r,n,!0)),this._updateShadowPCFKernel(t),i.gl.clearColor(0,0,0,0),this._enablePostEffect&&(this.needsTemporalSS()&&this._temporalSS.jitterProjection(i,n),this._compositor.updateNormal(i,r,n,this._temporalSS.getFrame())),this._updateSSAO(i,r,n,this._temporalSS.getFrame()),this._enablePostEffect){var a=this._compositor.getSourceFrameBuffer();a.bind(i),i.gl.clear(i.gl.DEPTH_BUFFER_BIT|i.gl.COLOR_BUFFER_BIT),i.render(r,n,!0,this.preZ),this.afterRenderScene(i,r,n),a.unbind(i),this.needsTemporalSS()&&e?(this._compositor.composite(i,n,this._temporalSS.getSourceFrameBuffer(),this._temporalSS.getFrame()),i.setViewport(this.viewport),this._temporalSS.render(i)):(i.setViewport(this.viewport),this._compositor.composite(i,n,null,0))}else if(this.needsTemporalSS()&&e){var a=this._temporalSS.getSourceFrameBuffer();a.bind(i),i.saveClear(),i.clearBit=i.gl.DEPTH_BUFFER_BIT|i.gl.COLOR_BUFFER_BIT,i.render(r,n,!0,this.preZ),this.afterRenderScene(i,r,n),i.restoreClear(),a.unbind(i),i.setViewport(this.viewport),this._temporalSS.render(i)}else i.setViewport(this.viewport),i.render(r,n,!0,this.preZ),this.afterRenderScene(i,r,n);this.afterRenderAll(i,r,n)},De.prototype.afterRenderScene=function(e,t,r){},De.prototype.afterRenderAll=function(e,t,r){},De.prototype._updateSSAO=function(e,t,r,n){function i(e){for(var t=0;t<e.length;t++){var r=e[t];r.material.shader[a?"enableTexture":"disableTexture"]("ssaoMap"),a&&r.material.set("ssaoMap",o.getSSAOTexture())}}var a=this._enableSSAO&&this._enablePostEffect,o=this._compositor;a&&this._compositor.updateSSAO(e,t,r,this._temporalSS.getFrame()),i(t.opaqueQueue),i(t.transparentQueue)},De.prototype._updateShadowPCFKernel=function(e){function t(e){for(var t=0;t<e.length;t++)e[t].receiveShadow&&(e[t].material.set("pcfKernel",r),e[t].material.shader&&e[t].material.shader.define("fragment","PCF_KERNEL_SIZE",r.length/2))}var r=this._pcfKernels[e%this._pcfKernels.length];t(this.scene.opaqueQueue),t(this.scene.transparentQueue)},De.prototype.dispose=function(e){this._compositor.dispose(e),this._temporalSS.dispose(e),this._shadowMapPass&&this._shadowMapPass.dispose(e)},De.prototype.setPostEffect=function(e,t){var r=this._compositor;e=e||{},this._enablePostEffect=!!e.enable;var n=e.bloom||{},i=e.edge||{},a=e.depthOfField||{},o=e.screenSpaceAmbientOcclusion||{},s=e.screenSpaceReflection||{},u=e.FXAA||{},l=e.colorCorrection||{};n.enable?r.enableBloom():r.disableBloom(),a.enable?r.enableDOF():r.disableDOF(),s.enable?r.enableSSR():r.disableSSR(),l.enable?r.enableColorCorrection():r.disableColorCorrection(),i.enable?r.enableEdge():r.disableEdge(),u.enable?r.enableFXAA():r.disableFXAA(),this._enableDOF=a.enable,this._enableSSAO=o.enable,this._enableSSAO?r.enableSSAO():r.disableSSAO(),r.setBloomIntensity(n.intensity),r.setEdgeColor(i.color),r.setColorLookupTexture(l.lookupTexture,t),r.setExposure(l.exposure),["radius","quality","intensity"].forEach(function(e){r.setSSAOParameter(e,o[e])}),["quality","maxRoughness"].forEach(function(e){r.setSSRParameter(e,s[e])}),["quality","focalDistance","focalRange","blurRadius","fstop"].forEach(function(e){r.setDOFParameter(e,a[e])}),["brightness","contrast","saturation"].forEach(function(e){r.setColorCorrection(e,l[e])})},De.prototype.isDOFEnabled=function(){return this._enablePostEffect&&this._enableDOF},De.prototype.setDOFFocusOnPoint=function(e){if(this._enablePostEffect){if(e>this.camera.far||e<this.camera.near)return;return this._compositor.setDOFParameter("focalDistance",e),!0}},De.prototype.setTemporalSuperSampling=function(e){e=e||{},this._enableTemporalSS=e.enable},De.prototype.isLinearSpace=function(){return this._enablePostEffect},De.prototype.setRootNode=function(e){if(this.rootNode!==e){for(var t=this.rootNode.children(),r=0;r<t.length;r++)e.add(t[r]);e!==this.scene&&this.scene.add(e),this.rootNode=e}},De.prototype.add=function(e){this.rootNode.add(e)},De.prototype.remove=function(e){this.rootNode.remove(e)},De.prototype.removeAll=function(e){this.rootNode.removeAll(e)};var da=dr.extend({castShadow:!1},{type:"AMBIENT_LIGHT",uniformTemplates:{ambientLightColor:{type:"3f",value:function(e){var t=e.color,r=e.intensity;return[t[0]*r,t[1]*r,t[2]*r]}}}});Pe.prototype={constructor:Pe,setScene:function(e){this._scene=e,this._skybox&&this._skybox.attachScene(this._scene)},initLight:function(e){this._lightRoot=e,this.mainLight=new gi({shadowBias:.005}),this.secondaryLight=new gi({shadowBias:.005}),this.tertiaryLight=new gi({shadowBias:.005}),this.ambientLight=new da},dispose:function(e){this._lightRoot&&(this._lightRoot.remove(this.mainLight),this._lightRoot.remove(this.ambientLight)),this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._currentCubemapLights.specular&&(this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights.specular.cubemap.dispose(e)))},updateMainLight:function(e,t){this._updateDirectionalLight(this.mainLight,e,t)},updateSecondaryLight:function(e,t){this._updateDirectionalLight(this.secondaryLight,e,t)},updateTertiaryLight:function(e,t){this._updateDirectionalLight(this.tertiaryLight,e,t)},_updateDirectionalLight:function(e,t,r){t=t||{},null!=t.intensity&&(e.intensity=t.intensity,this._lightRoot[t.intensity?"add":"remove"](e)),null!=t.color&&(e.color=sa.parseColor(t.color).slice(0,3));var n=sa.firstNotNull(t.alpha,45),i=sa.firstNotNull(t.beta,45);e.position.setArray(sa.directionFromAlphaBeta(n,i)),e.lookAt(ut.ZERO);var a={low:512,medium:1024,high:2048,ultra:4096}[t.quality]||1024;e.castShadow=sa.firstNotNull(t.shadow,!0),e.shadowResolution=a},updateAmbientLight:function(e,t){e=e||{},null!=e.intensity&&(this.ambientLight.intensity=e.intensity,this._lightRoot[e.intensity?"add":"remove"](this.ambientLight)),null!=e.color&&(this.ambientLight.color=sa.parseColor(e.color).slice(0,3))},updateAmbientCubemapLight:function(e,t){e=e||{};var r=t.getRenderer(),n=e.texture,i=this;if(!this._currentCubemapLights||n!==this._currentCubemapLights.textureUrl)if(this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._currentCubemapLights.specular&&(this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights.specular.cubemap.dispose(r.gl))),n){var a=sa.createAmbientCubemap(e,t,function(){a.specular&&i._skybox instanceof Yi&&i._skybox.setEnvironmentMap(a.specular.cubemap),t.refresh()});a.diffuse&&this._lightRoot.add(a.diffuse),a.specular&&this._lightRoot.add(a.specular),this._currentCubemapLights=a,this._currentCubemapLights.textureUrl=n}else this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights=null);this._currentCubemapLights&&(null!=e.specularIntensity&&this._currentCubemapLights.specular&&(this._currentCubemapLights.specular.intensity=e.specularIntensity),null!=e.diffuseIntensity&&this._currentCubemapLights.diffuse&&(this._currentCubemapLights.diffuse.intensity=e.diffuseIntensity))},updateSkybox:function(e,t,r){var n=r.getRenderer(),i=this;if(e&&"none"!==e)if("auto"===e)if(this._currentCubemapLights){var a=function(){return i._skybox instanceof Yi||(i._skybox&&i._skybox.dispose(n),i._skybox=new Yi),i._skybox}();if(this._currentCubemapLights.specular){var o=this._currentCubemapLights.specular.cubemap;a.setEnvironmentMap(o)}this._scene&&a.attachScene(this._scene),a.material.set("lod",2)}else this._skybox&&this._skybox.detachScene();else{var s=function(){return i._skybox instanceof si||(i._skybox&&i._skybox.dispose(n),i._skybox=new si),i._skybox}(),u=sa.loadTexture(e,r,{flipY:!1},function(){r.refresh()});s.setEnvironmentMap(u),s.attachScene(this._scene)}else this._skybox&&this._skybox.detachScene(this._scene),this._skybox=null;if(this._skybox)if("auto"===e||e.match&&e.match(/.hdr$/))this._skybox.material.shader.undefine("fragment","SRGB_DECODE");else{var l=t?"define":"undefine";this._skybox.material.shader[l]("fragment","SRGB_DECODE")}}};var _a={devicePixelRatio:null,preZ:!1,picking:!1,shadow:!0,environment:"",ground:{show:!1},mainLight:{shadow:!0,shadowQuality:"medium",intensity:.8,color:"#fff",alpha:45,beta:45},secondaryLight:{shadow:!1,shadowQuality:"medium",intensity:0,color:"#fff",alpha:60,beta:-50},tertiaryLight:{shadow:!1,shadowQuality:"medium",intensity:0,color:"#fff",alpha:89,beta:0},ambientLight:{intensity:.3,color:"#fff"},ambientCubemapLight:{texture:"",exposure:1,diffuseIntensity:.5,specularIntensity:.5},postEffect:{enable:!1,bloom:{enable:!1,intensity:.1},depthOfField:{enable:!1,focalDistance:5,focalRange:1,blurRadius:5,fstop:2.8,quality:"medium"},screenSpaceAmbientOcculusion:{enable:!1,radius:.5,quality:"medium",intensity:1},screenSpaceReflection:{enable:!1,quality:"medium",maxRoughness:.8},colorCorrection:{enable:!0,exposure:0,brightness:0,contrast:1,saturation:1,lookupTexture:""},FXAA:{enable:!1}}},pa={"[object Function]":1,"[object RegExp]":1,"[object Date]":1,"[object Error]":1,"[object CanvasGradient]":1,"[object CanvasPattern]":1,"[object Image]":1,"[object Canvas]":1},ma={"[object Int8Array]":1,"[object Uint8Array]":1,"[object Uint8ClampedArray]":1,"[object Int16Array]":1,"[object Uint16Array]":1,"[object Int32Array]":1,"[object Uint32Array]":1,"[object Float32Array]":1,"[object Float64Array]":1},va=Object.prototype.toString,ga="__ec_primitive__",ya=ot.vec3,xa=function(){this._track=[]};xa.prototype={constructor:xa,recognize:function(e,t,r){return this._doTrack(e,t,r),this._recognize(e)},clear:function(){return this._track.length=0,this},_doTrack:function(e,t,r){var n=e.targetTouches;if(n){for(var i={points:[],touches:[],target:t,event:e},a=0,o=n.length;a<o;a++){var s=n[a];i.points.push([s.clientX,s.clientY]),i.touches.push(s)}this._track.push(i)}},_recognize:function(e){for(var t in Ta)if(Ta.hasOwnProperty(t)){var r=Ta[t](this._track,e);if(r)return r}}};var Ta={pinch:function(e,t){var r=e.length;if(r){var n=(e[r-1]||{}).points,i=(e[r-2]||{}).points||n;if(i&&i.length>1&&n&&n.length>1){var a=qe(n)/qe(i);!isFinite(a)&&(a=1),t.pinchScale=a;var o=We(n);return t.pinchX=o[0],t.pinchY=o[1],{type:"pinch",target:e[0].target,event:t}}}}},Ea=$e.extend(function(){return{animation:null,domElement:null,target:null,_center:new ut,minDistance:.1,maxDistance:1e3,minAlpha:-90,maxAlpha:90,minBeta:-1/0,maxBeta:1/0,autoRotateAfterStill:0,autoRotateDirection:"cw",autoRotateSpeed:60,_mode:"rotate",damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,_needsUpdate:!1,_rotating:!1,_phi:0,_theta:0,_mouseX:0,_mouseY:0,_rotateVelocity:new Kt,_panVelocity:new Kt,_distance:20,_zoomSpeed:0,_stillTimeout:0,_animators:[],_gestureMgr:new xa}},function(){this._mouseDownHandler=this._mouseDownHandler.bind(this),this._mouseWheelHandler=this._mouseWheelHandler.bind(this),this._mouseMoveHandler=this._mouseMoveHandler.bind(this),this._mouseUpHandler=this._mouseUpHandler.bind(this),this._pinchHandler=this._pinchHandler.bind(this),this.update=this.update.bind(this),this.init()},{init:function(){var e=this.domElement;e.addEventListener("touchstart",this._mouseDownHandler),e.addEventListener("mousedown",this._mouseDownHandler),e.addEventListener("mousewheel",this._mouseWheelHandler),this.animation&&this.animation.on("frame",this.update)},dispose:function(){var e=this.domElement;e.removeEventListener("touchstart",this._mouseDownHandler),e.removeEventListener("touchmove",this._mouseMoveHandler),e.removeEventListener("touchend",this._mouseUpHandler),e.removeEventListener("mousedown",this._mouseDownHandler),e.removeEventListener("mousemove",this._mouseMoveHandler),e.removeEventListener("mouseup",this._mouseUpHandler),e.removeEventListener("mousewheel",this._mouseWheelHandler),this.animation&&this.animation.off("frame",this.update),this.stopAllAnimation()},getDistance:function(){return this._distance},setDistance:function(e){this._distance=e,this._needsUpdate=!0},getAlpha:function(){return this._theta/Math.PI*180},getBeta:function(){return-this._phi/Math.PI*180},getCenter:function(){return this._center.toArray()},setAlpha:function(e){e=Math.max(Math.min(this.maxAlpha,e),this.minAlpha),this._theta=e/180*Math.PI,this._needsUpdate=!0},setBeta:function(e){e=Math.max(Math.min(this.maxBeta,e),this.minBeta),this._phi=-e/180*Math.PI,this._needsUpdate=!0},setCenter:function(e){this._center.setArray(e)},setOption:function(e){e=e||{},["autoRotate","autoRotateAfterStill","autoRotateDirection","autoRotateSpeed","damping","minDistance","maxDistance","minAlpha","maxAlpha","minBeta","maxBeta","rotateSensitivity","zoomSensitivity","panSensitivity"].forEach(function(t){null!=e[t]&&(this[t]=e[t])},this),null!=e.distance&&this.setDistance(e.distance),null!=e.alpha&&this.setAlpha(e.alpha),null!=e.beta&&this.setBeta(e.beta),e.center&&this.setCenter(e.center)},animateTo:function(e){var t=this,r={},n={},i=this.animation;if(i)return null!=e.distance&&(r.distance=this.getDistance(),n.distance=e.distance),null!=e.alpha&&(r.alpha=this.getAlpha(),n.alpha=e.alpha),null!=e.beta&&(r.beta=this.getBeta(),n.beta=e.beta),null!=e.center&&(r.center=this.getCenter(),n.center=e.center),this._addAnimator(i.animate(r).when(e.duration||1e3,n).during(function(){null!=r.alpha&&t.setAlpha(r.alpha),null!=r.beta&&t.setBeta(r.beta),null!=r.distance&&t.setDistance(r.distance),null!=r.center&&t.setCenter(r.center),t._needsUpdate=!0}).done(e.done)).start(e.easing||"linear")},stopAllAnimation:function(){for(var e=0;e<this._animators.length;e++)this._animators[e].stop();this._animators.length=0},_isAnimating:function(){return this._animators.length>0},update:function(e){if(e=e||16,this._rotating){var t=("cw"===this.autoRotateDirection?1:-1)*this.autoRotateSpeed/180*Math.PI;this._phi-=t*e/1e3,this._needsUpdate=!0}else this._rotateVelocity.len()>0&&(this._needsUpdate=!0);(Math.abs(this._zoomSpeed)>.01||this._panVelocity.len()>0)&&(this._needsUpdate=!0),this._needsUpdate&&(this._updateDistance(Math.min(e,50)),this._updatePan(Math.min(e,50)),this._updateRotate(Math.min(e,50)),this._updateTransform(),this.target.update(),this.trigger("update"),this._needsUpdate=!1)},_updateRotate:function(e){var t=this._rotateVelocity;this._phi=t.y*e/20+this._phi,this._theta=t.x*e/20+this._theta,this.setAlpha(this.getAlpha()),this.setBeta(this.getBeta()),this._vectorDamping(t,this.damping)},_updateDistance:function(e){this._setDistance(this._distance+this._zoomSpeed*e/20),this._zoomSpeed*=this.damping},_setDistance:function(e){this._distance=Math.max(Math.min(e,this.maxDistance),this.minDistance)},_updatePan:function(e){var t=this._panVelocity,r=this._distance,n=this.target,i=n.worldTransform.y,a=n.worldTransform.x;this._center.scaleAndAdd(a,-t.x*r/200).scaleAndAdd(i,-t.y*r/200),this._vectorDamping(t,0)},_updateTransform:function(){var e=this.target,t=new ut,r=this._theta+Math.PI/2,n=this._phi+Math.PI/2,i=Math.sin(r);t.x=i*Math.cos(n),t.y=-Math.cos(r),t.z=i*Math.sin(n),e.position.copy(this._center).scaleAndAdd(t,this._distance),e.rotation.identity().rotateY(-this._phi).rotateX(-this._theta)},_startCountingStill:function(){clearTimeout(this._stillTimeout);var e=this.autoRotateAfterStill,t=this;!isNaN(e)&&e>0&&(this._stillTimeout=setTimeout(function(){t._rotating=!0},1e3*e))},_vectorDamping:function(e,t){var r=e.len();r*=t,r<1e-4&&(r=0),e.normalize().scale(r)},decomposeTransform:function(){if(this.target){var e=new ut;e.eulerFromQuat(this.target.rotation.normalize(),"ZYX"),this._theta=-e.x,this._phi=-e.y,this.setBeta(this.getBeta()),this.setAlpha(this.getAlpha()),this._setDistance(this.target.position.dist(this._center))}},_mouseDownHandler:function(e){if(!this._isAnimating()){var t=e.clientX,r=e.clientY;if(e.targetTouches){var n=e.targetTouches[0];t=n.clientX,r=n.clientY,this._mode="rotate",this._processGesture(e,"start")}var i=this.domElement;i.addEventListener("touchmove",this._mouseMoveHandler),i.addEventListener("touchend",this._mouseUpHandler),i.addEventListener("mousemove",this._mouseMoveHandler),i.addEventListener("mouseup",this._mouseUpHandler),0===e.button?this._mode="rotate":1===e.button&&(this._mode="pan"),this._rotateVelocity.set(0,0),this._rotating=!1,this.autoRotate&&this._startCountingStill(),this._mouseX=t,this._mouseY=r}},_mouseMoveHandler:function(e){if(!this._isAnimating()){var t,r=e.clientX,n=e.clientY;if(e.targetTouches){var i=e.targetTouches[0];r=i.clientX,n=i.clientY,t=this._processGesture(e,"change")}var a=Ve(this.panSensitivity),o=Ve(this.rotateSensitivity);t||("rotate"===this._mode?(this._rotateVelocity.y=(r-this._mouseX)/this.domElement.clientHeight*2*o[0],this._rotateVelocity.x=(n-this._mouseY)/this.domElement.clientWidth*2*o[1]):"pan"===this._mode&&(this._panVelocity.x=(r-this._mouseX)/this.domElement.clientWidth*a[0]*400,this._panVelocity.y=(-n+this._mouseY)/this.domElement.clientHeight*a[1]*400)),this._mouseX=r,this._mouseY=n,e.preventDefault()}},_mouseWheelHandler:function(e){if(!this._isAnimating()){var t=e.wheelDelta||-e.detail;0!==t&&this._zoomHandler(e,t>0?-1:1)}},_pinchHandler:function(e){this._isAnimating()||this._zoomHandler(e,e.pinchScale>1?-.4:.4)},_zoomHandler:function(e,t){var r=Math.max(Math.min(this._distance-this.minDistance,this.maxDistance-this._distance));this._zoomSpeed=t*Math.max(r/40*this.zoomSensitivity,.2),this._rotating=!1,this.autoRotate&&"rotate"===this._mode&&this._startCountingStill(),e.preventDefault()},_mouseUpHandler:function(e){var t=this.domElement;t.removeEventListener("touchmove",this._mouseMoveHandler),t.removeEventListener("touchend",this._mouseUpHandler),t.removeEventListener("mousemove",this._mouseMoveHandler),t.removeEventListener("mouseup",this._mouseUpHandler),this._processGesture(e,"end")},_addAnimator:function(e){var t=this._animators;return t.push(e),e.done(function(){var r=t.indexOf(e);r>=0&&t.splice(r,1)}),e},_processGesture:function(e,t){var r=this._gestureMgr;"start"===t&&r.clear();var n=r.recognize(e,null,this.domElement);if("end"===t&&r.clear(),n){var i=n.type;e.gestureEvent=i,this._pinchHandler(n.event)}return n}});Object.defineProperty(Ea.prototype,"autoRotate",{get:function(){return this._autoRotate},set:function(e){this._autoRotate=e,this._rotating=e}}),Object.defineProperty(Ea.prototype,"target",{get:function(){return this._target},set:function(e){e&&e.target&&this.setCenter(e.target.toArray()),this._target=e,this.decomposeTransform()}});var ba=ot.vec4,Sa=function(e,t,r,n){e=e||0,t=t||0,r=r||0,n=n||0,this._array=ba.fromValues(e,t,r,n),this._dirty=!0};Sa.prototype={constructor:Sa,add:function(e){return ba.add(this._array,this._array,e._array),this._dirty=!0,this},set:function(e,t,r,n){return this._array[0]=e,this._array[1]=t,this._array[2]=r,this._array[3]=n,this._dirty=!0,this},setArray:function(e){return this._array[0]=e[0],this._array[1]=e[1],this._array[2]=e[2],this._array[3]=e[3],this._dirty=!0,this},clone:function(){return new Sa(this.x,this.y,this.z,this.w)},copy:function(e){return ba.copy(this._array,e._array),this._dirty=!0,this},dist:function(e){return ba.dist(this._array,e._array)},distance:function(e){return ba.distance(this._array,e._array)},div:function(e){return ba.div(this._array,this._array,e._array),this._dirty=!0,this},divide:function(e){return ba.divide(this._array,this._array,e._array),this._dirty=!0,this},dot:function(e){return ba.dot(this._array,e._array)},len:function(){return ba.len(this._array)},length:function(){return ba.length(this._array)},lerp:function(e,t,r){return ba.lerp(this._array,e._array,t._array,r),this._dirty=!0,this},min:function(e){return ba.min(this._array,this._array,e._array),this._dirty=!0,this},max:function(e){return ba.max(this._array,this._array,e._array),this._dirty=!0,this},mul:function(e){return ba.mul(this._array,this._array,e._array),this._dirty=!0,this},multiply:function(e){return ba.multiply(this._array,this._array,e._array),this._dirty=!0,this},negate:function(){return ba.negate(this._array,this._array),this._dirty=!0,this},normalize:function(){return ba.normalize(this._array,this._array),this._dirty=!0,this},random:function(e){return ba.random(this._array,e),this._dirty=!0,this},scale:function(e){return ba.scale(this._array,this._array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return ba.scaleAndAdd(this._array,this._array,e._array,t),this._dirty=!0,this},sqrDist:function(e){return ba.sqrDist(this._array,e._array)},squaredDistance:function(e){return ba.squaredDistance(this._array,e._array)},sqrLen:function(){return ba.sqrLen(this._array)},squaredLength:function(){return ba.squaredLength(this._array)},sub:function(e){return ba.sub(this._array,this._array,e._array),this._dirty=!0,this},subtract:function(e){return ba.subtract(this._array,this._array,e._array),this._dirty=!0,this},transformMat4:function(e){return ba.transformMat4(this._array,this._array,e._array),this._dirty=!0,this},transformQuat:function(e){return ba.transformQuat(this._array,this._array,e._array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this._array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this._array)}};var Aa=Object.defineProperty;if(Aa){var Na=Sa.prototype;Aa(Na,"x",{get:function(){return this._array[0]},set:function(e){this._array[0]=e,this._dirty=!0}}),Aa(Na,"y",{get:function(){return this._array[1]},set:function(e){this._array[1]=e,this._dirty=!0}}),Aa(Na,"z",{get:function(){return this._array[2]},set:function(e){this._array[2]=e,this._dirty=!0}}),Aa(Na,"w",{get:function(){return this._array[3]},set:function(e){this._array[3]=e,this._dirty=!0}})}Sa.add=function(e,t,r){return ba.add(e._array,t._array,r._array),e._dirty=!0,e},Sa.set=function(e,t,r,n,i){ba.set(e._array,t,r,n,i),e._dirty=!0},Sa.copy=function(e,t){return ba.copy(e._array,t._array),e._dirty=!0,e},Sa.dist=function(e,t){return ba.distance(e._array,t._array)},Sa.distance=Sa.dist,Sa.div=function(e,t,r){return ba.divide(e._array,t._array,r._array),e._dirty=!0,e},Sa.divide=Sa.div,
Sa.dot=function(e,t){return ba.dot(e._array,t._array)},Sa.len=function(e){return ba.length(e._array)},Sa.lerp=function(e,t,r,n){return ba.lerp(e._array,t._array,r._array,n),e._dirty=!0,e},Sa.min=function(e,t,r){return ba.min(e._array,t._array,r._array),e._dirty=!0,e},Sa.max=function(e,t,r){return ba.max(e._array,t._array,r._array),e._dirty=!0,e},Sa.mul=function(e,t,r){return ba.multiply(e._array,t._array,r._array),e._dirty=!0,e},Sa.multiply=Sa.mul,Sa.negate=function(e,t){return ba.negate(e._array,t._array),e._dirty=!0,e},Sa.normalize=function(e,t){return ba.normalize(e._array,t._array),e._dirty=!0,e},Sa.random=function(e,t){return ba.random(e._array,t),e._dirty=!0,e},Sa.scale=function(e,t,r){return ba.scale(e._array,t._array,r),e._dirty=!0,e},Sa.scaleAndAdd=function(e,t,r,n){return ba.scaleAndAdd(e._array,t._array,r._array,n),e._dirty=!0,e},Sa.sqrDist=function(e,t){return ba.sqrDist(e._array,t._array)},Sa.squaredDistance=Sa.sqrDist,Sa.sqrLen=function(e){return ba.sqrLen(e._array)},Sa.squaredLength=Sa.sqrLen,Sa.sub=function(e,t,r){return ba.subtract(e._array,t._array,r._array),e._dirty=!0,e},Sa.subtract=Sa.sub,Sa.transformMat4=function(e,t,r){return ba.transformMat4(e._array,t._array,r._array),e._dirty=!0,e},Sa.transformQuat=function(e,t,r){return ba.transformQuat(e._array,t._array,r._array),e._dirty=!0,e};var wa=$e.extend(function(){return{dom:null,renderer:null,camera:null,_boundingBox:new vt,_hotspotRoot:null,_hotspots:[]}},function(){if(!this.dom||!this.renderer||!this.camera)throw new Error("Tip manager needs `root`,  `camera`, `renderer`");var e=this._hotspotRoot=document.createElement("div");e.style.cssText="position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;",this.dom.appendChild(e)},{setBoundingBox:function(e,t){this._boundingBox.min.setArray(e),this._boundingBox.max.setArray(t)},add:function(e,t){if("string"==typeof t){var r=document.createElement("div");r.innerHTML=t,t=r}return t.classList.add("qmv-annotation"),t.style.position="absolute",this._hotspotRoot.appendChild(t),this._hotspots.push({position:e,dom:t}),t},remove:function(e){for(var t=-1,r=0;r<this._hotspots.length;r++)if(this._hotspots[r].dom===e){t=r;break}t>=0&&(this._hotspots.splice(t,1),this._hotspotRoot.removeChild(e))},update:function(){var e=new Sa,t=new vt;this._hotspots.forEach(function(r){var n=r.position;e.set(n[0],n[1],n[2],1),e.transformMat4(this.camera.viewMatrix),e.transformMat4(this.camera.projectionMatrix),e.scale(1/e.w);var i=.5*(e.x+1)*this.renderer.getWidth(),a=.5*(e.y+1)*this.renderer.getHeight();r.dom.style.left=i+"px",r.dom.style.top=this.renderer.getHeight()-a+"px",t.copy(this._boundingBox),t.applyTransform(this.camera.viewMatrix),r.dom.style.opacity=1,r.onupdate&&r.onupdate(i,a)},this)}});Ut.import("@export qmv.ground.vertex\n@import qtek.lambert.vertex\n@end\n\n\n@export qmv.ground.fragment\n\nvarying vec2 v_Texcoord;\nvarying vec3 v_Normal;\nvarying vec3 v_WorldPosition;\n\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\nuniform float gridSize: 5;\nuniform float gridSize2: 1;\nuniform vec4 gridColor: [0, 0, 0, 1];\nuniform vec4 gridColor2: [0.3, 0.3, 0.3, 1];\n\nuniform float glossiness: 0.7;\n\n#ifdef SSAOMAP_ENABLED\nuniform sampler2D ssaoMap;\nuniform vec4 viewport : VIEWPORT;\n#endif\n\n#ifdef AMBIENT_LIGHT_COUNT\n@import qtek.header.ambient_light\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n@import qtek.header.ambient_sh_light\n#endif\n#ifdef DIRECTIONAL_LIGHT_COUNT\n@import qtek.header.directional_light\n#endif\n\n@import qtek.plugin.compute_shadow_map\n\nvoid main()\n{\n gl_FragColor = color;\n\n float wx = v_WorldPosition.x;\n float wz = v_WorldPosition.z;\n float x0 = abs(fract(wx / gridSize - 0.5) - 0.5) / fwidth(wx) * gridSize / 2.0;\n float z0 = abs(fract(wz / gridSize - 0.5) - 0.5) / fwidth(wz) * gridSize / 2.0;\n\n float x1 = abs(fract(wx / gridSize2 - 0.5) - 0.5) / fwidth(wx) * gridSize2;\n float z1 = abs(fract(wz / gridSize2 - 0.5) - 0.5) / fwidth(wz) * gridSize2;\n\n float v0 = 1.0 - clamp(min(x0, z0), 0.0, 1.0);\n float v1 = 1.0 - clamp(min(x1, z1), 0.0, 1.0);\n if (v0 > 0.1) {\n gl_FragColor = mix(gl_FragColor, gridColor, v0);\n }\n else {\n gl_FragColor = mix(gl_FragColor, gridColor2, v1);\n }\n\n vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\n\n#ifdef AMBIENT_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\n {\n diffuseColor += ambientLightColor[_idx_];\n }\n#endif\n#ifdef AMBIENT_SH_LIGHT_COUNT\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\n {{\n diffuseColor += calcAmbientSHLight(_idx_, v_Normal) * ambientSHLightColor[_idx_];\n }}\n#endif\n\n#ifdef DIRECTIONAL_LIGHT_COUNT\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\n if(shadowEnabled)\n {\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\n }\n#endif\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\n {\n vec3 lightDirection = -directionalLightDirection[i];\n vec3 lightColor = directionalLightColor[i];\n\n float ndl = dot(v_Normal, normalize(lightDirection));\n\n float shadowContrib = 1.0;\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\n if( shadowEnabled )\n {\n shadowContrib = shadowContribsDir[i];\n }\n#endif\n\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0) * shadowContrib;\n }\n#endif\n\n#ifdef SSAOMAP_ENABLED\n diffuseColor *= texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r;\n#endif\n\n gl_FragColor.rgb *= diffuseColor;\n\n gl_FragColor.a *= 1.0 - clamp(length(v_WorldPosition.xz) / 30.0, 0.0, 1.0);\n\n}\n\n@end");var Ma=["diffuseMap","normalMap","emissiveMap","metalnessMap","roughnessMap","specularMap","glossinessMap"];je.prototype.init=function(e,t){t=t||{},this.root=e,this._animation=new Hn;var r=new nr({devicePixelRatio:t.devicePixelRatio||window.devicePixelRatio});e.appendChild(r.canvas),r.canvas.style.cssText="position:absolute;left:0;top:0",this._renderer=r,this._renderMain=new De(r,t.shadow,"perspective"),this._renderMain.afterRenderScene=function(e,t,r){this.trigger("renderscene",e,t,r)}.bind(this),this._renderMain.afterRenderAll=function(e,t,r){this.trigger("afterrender",e,t,r)}.bind(this),this._renderMain.preZ=t.preZ||!1;var n=this._cameraControl=new Ea({renderer:r,animation:this._animation,domElement:e});n.target=this._renderMain.camera,n.init(),this._hotspotManager=new wa({dom:e,renderer:r,camera:this._renderMain.camera}),this._skeletons=[],this._clips=[],this._takes=[],this._materialsMap={},this._sceneHelper=new Pe(this._renderMain.scene),this._sceneHelper.initLight(this._renderMain.scene),this.resize(),t.postEffect&&this.setPostEffect(t.postEffect),t.mainLight&&this.setMainLight(t.mainLight),t.secondaryLight&&this.setSecondaryLight(t.secondaryLight),t.tertiaryLight&&this.setTertiaryLight(t.tertiaryLight),t.ambientCubemapLight&&this.setAmbientCubemapLight(t.ambientCubemapLight),t.ambientLight&&this.setAmbientLight(t.ambientLight),t.environment&&this.setEnvironment(t.environment),this._createGround(),t.ground&&this.setGround(t.ground),this.setCameraControl({distance:20,minDisntance:2,maxDistance:100,center:[0,0,0]}),this._enablePicking=t.picking||!1,this._initHandlers(),n.on("update",function(){this.trigger("updatecamera",{center:n.getCenter(),alpha:n.getAlpha(),beta:n.getBeta(),distance:n.getDistance()}),this.refresh()},this),this.shaderLibrary=Wt.createLibrary()},je.prototype._createGround=function(){var e=new Ir({isGround:!0,material:new jt({shader:new Ut({vertex:Ut.source("qmv.ground.vertex"),fragment:Ut.source("qmv.ground.fragment")}),transparent:!0}),castShadow:!1,geometry:new Xn});e.material.set("color",[1,1,1,1]),e.scale.set(40,40,1),e.rotation.rotateX(-Math.PI/2),this._groundMesh=e,this._renderMain.scene.add(e)},je.prototype._addModel=function(e,t,r,n){this.removeModel(),this._renderMain.scene.add(e),this._skeletons=r.slice(),this._modelNode=e,this._setAnimationClips(n),t&&t.length&&(this._nodes=t);var i={};e.traverse(function(e){if(e.material){var t=e.material;i[t.name]=i[t.name]||[],i[t.name].push(t)}},this),this._materialsMap=i,this._updateMaterialsSRGB(),this._stopAccumulating()},je.prototype._removeAnimationClips=function(){this._clips.forEach(function(e){this._animation.removeClip(e)},this),this._clips=[],this._takes=[]},je.prototype._setAnimationClips=function(e){function t(){r.refresh()}var r=this;e.forEach(function(e){e.tracks.forEach(function(e){e.target||(e.target=this._nodes[e.targetNodeIndex])},this),e.onframe=t,this._animation.addClip(e),this._takes.push({name:e.name,range:[0,e.life],clip:e})},this),this._clips=e.slice()},je.prototype._initHandlers=function(){this._picking=new Yn({renderer:this._renderer,scene:this._renderMain.scene,camera:this._renderMain.camera}),this._clickHandler=this._clickHandler.bind(this),this._mouseDownHandler=this._mouseDownHandler.bind(this),this.root.addEventListener("mousedown",this._mouseDownHandler),this.root.addEventListener("click",this._clickHandler)},je.prototype._mouseDownHandler=function(e){this._startX=e.clientX,this._startY=e.clientY},je.prototype._clickHandler=function(e){if(this._enablePicking||this._renderMain.isDOFEnabled()){var t=e.clientX-this._startX,r=e.clientY-this._startY;if(!(Math.sqrt(t*t+r*r)>=40)){var n=this._picking.pick(e.clientX,e.clientY,!0);n&&!n.target.isGround?(this._renderMain.setDOFFocusOnPoint(n.distance),this.trigger("doffocus",n),this._selectResult=n,this.trigger("select",n),this.refresh()):(this._selectResult&&this.trigger("unselect",this._selectResult),this._selectResult=null)}}},je.prototype.enablePicking=function(){this._enablePicking=!0},je.prototype.disablePicking=function(){this._enablePicking=!1},je.prototype.setModelUpAxis=function(e){var t=this._modelNode;t&&(t.position.set(0,0,0),t.scale.set(1,1,1),t.rotation.identity(),"z"===e.toLowerCase()&&t.rotation.identity().rotateX(-Math.PI/2),this.autoFitModel())},je.prototype.setTextureFlipY=function(e){if(this._modelNode){for(var t in this._materialsMap)for(var r=0;r<this._materialsMap[t].length;r++)for(var n=this._materialsMap[t][r],i=0;i<Ma.length;i++){var a=n.get(Ma[i]);a&&(a.flipY=e,a.dirty())}this.refresh()}},je.prototype.resize=function(){var e=this._renderer;e.resize(this.root.clientWidth,this.root.clientHeight),this._renderMain.setViewport(0,0,e.getWidth(),e.getHeight(),e.getDevicePixelRatio()),this.refresh()},je.prototype.autoFitModel=function(e){if(e=e||10,this._modelNode){this.setPose(10),this._modelNode.update();var t=Ge(this._modelNode),r=new ut;r.copy(t.max).sub(t.min);var n=new ut;n.copy(t.max).add(t.min).scale(.5);var i=e/Math.max(r.x,r.y,r.z)||1;this._modelNode.scale.set(i,i,i),this._modelNode.position.copy(n).scale(-i),this._modelNode.update(),this._hotspotManager.setBoundingBox(t.min._array,t.max._array),this._modelNode.traverse(function(e){e.isSkinnedMesh()&&e.geometry.boundingBox.applyTransform(this._modelNode.worldTransform)},this),this._groundMesh.position.y=-r.y*i/2,this.refresh()}},je.prototype.loadModel=function(e,t){if(t=t||{},!e)throw new Error("URL of model is not provided");var r=t.shader||"standard",n=null;t.files&&(n=function(e){if(e.match(/^data:(.*?)base64,/))return e;var r=e.substr(e.lastIndexOf("/")+1);return t.files[r]?t.files[r]:r||""});var i={rootNode:new fr,shaderName:"qtek."+r,textureRootPath:t.textureRootPath,bufferRootPath:t.bufferRootPath,crossOrigin:"Anonymous",includeTexture:null==t.includeTexture||t.includeTexture,textureFlipY:t.textureFlipY,shaderLibrary:this.shaderLibrary};n&&(i.resolveTexturePath=i.resolveBinaryPath=n);var a=new kn(i);"string"==typeof e?a.load(e):a.parse(e,t.buffers),t.upAxis&&"z"===t.upAxis.toLowerCase()&&a.rootNode.rotation.rotateX(-Math.PI/2);var o=new Wn,s=0,u=0,l=0;return a.success(function(e){e.rootNode.traverse(function(e){l++,e.geometry&&(u+=e.geometry.triangleCount,s+=e.geometry.vertexCount)}),this._preprocessModel(e.rootNode,t),this._addModel(e.rootNode,e.nodes,e.skeletons,e.clips),this.autoFitModel();var r={triangleCount:u,vertexCount:s,nodeCount:l,meshCount:Object.keys(e.meshes).length,materialCount:Object.keys(e.materials).length,textureCount:Object.keys(e.textures).length};o.trigger("loadmodel",r);var n=[];Je.each(e.textures,function(e){e.isRenderable()||n.push(e)}),(new Vn).allSettled(n).success(function(){this._convertToPOT(),this._convertBumpToNormal(),o.trigger("ready"),this.refresh()},this),this.refresh()},this),a.error(function(){o.trigger("error")}),this._textureFlipY=t.textureFlipY,this._shaderName=r,o},je.prototype._convertBumpToNormal=function(){for(var e in this._materialsMap)for(var t=0;t<this._materialsMap[e].length;t++){var r=this._materialsMap[e][t],n=r.get("normalMap");if(n&&mi.isHeightImage(n.image)){var i=mi.heightToNormal(n.image);i.srcImage=n.image,n.image=i,n.dirty()}}},je.prototype._convertToPOT=function(){this._modelNode.traverse(function(e){if(e.material){for(var t=!1,r=!1,n=0;n<Ma.length;n++){var i=e.material.get(Ma[n]);if(i&&!i.isPowerOfTwo()){t=!0;break}}if(t)for(var a=e.geometry.attributes.texcoord0.value||[],n=0;n<a.length;n++){var o=a[n];if(o>1||o<0){r=!0;break}}if(r)for(var n=0;n<Ma.length;n++){var i=e.material.get(Ma[n]);i&&sa.convertTextureToPowerOfTwo(i)}}})},je.prototype.removeModel=function(){var e=this._modelNode;e&&(this._renderer.disposeNode(e),this._renderMain.scene.remove(e),this._modelNode=null,this.refresh()),this._removeAnimationClips(),this._materialsMap={},this._nodes=[],this._skeletons=[]},je.prototype.getScene=function(){return this._renderMain.scene},je.prototype.getModelRoot=function(){return this._modelNode},je.prototype._preprocessModel=function(e,t){var r=t.alphaCutoff,n=t.doubleSided,i=t.shader||"standard",a=this.shaderLibrary,o=[];e.traverse(function(e){e.skeleton&&o.push(e)}),o.forEach(function(e){var t=qn.splitByJoints(e,15,!0,a,"qtek."+i);t!==e&&t.eachChild(function(e){e.originalMeshName=t.name})},this),e.traverse(function(e){e.geometry&&(e.geometry.updateBoundingBox(),null!=n&&(e.culling=!n)),e.material&&(e.material.shader.define("fragment","DIFFUSEMAP_ALPHA_ALPHA"),e.material.shader.define("fragment","ALPHA_TEST"),null!=n&&e.material.shader[n?"define":"undefine"]("fragment","DOUBLE_SIDED"),e.material.shader.precision="mediump",null!=r&&e.material.set("alphaCutoff",r),e.material.transparent&&(e.castShadow=!1))})},je.prototype.loadAnimation=function(e){var t=new kn({rootNode:new fr,crossOrigin:"Anonymous"});return t.load(e),t.success(function(e){this._removeAnimationClips(),this._setAnimationClips(e.clips)},this),t},je.prototype.pauseAnimation=function(){this._clips.forEach(function(e){e.pause()})},je.prototype.stopAnimation=function(){this._clips.forEach(function(e){this._animation.removeClip(e)},this)},je.prototype.resumeAnimation=function(){this._clips.forEach(function(e){e.resume()})},je.prototype.setCameraControl=function(e){this._cameraControl.setOption(e),this.refresh()},je.prototype.setMainLight=function(e){this._sceneHelper.updateMainLight(e,this),this.refresh()},je.prototype.setSecondaryLight=function(e){this._sceneHelper.updateSecondaryLight(e,this),this.refresh()},je.prototype.setTertiaryLight=function(e){this._sceneHelper.updateTertiaryLight(e,this),this.refresh()},je.prototype.setAmbientLight=function(e){this._sceneHelper.updateAmbientLight(e,this),this.refresh()},je.prototype.setAmbientCubemapLight=function(e){this._sceneHelper.updateAmbientCubemapLight(e,this),this.refresh()},je.prototype.setEnvironment=function(e){this._sceneHelper.updateSkybox(e,this._renderMain.isLinearSpace(),this)},je.prototype.setMaterial=function(e,t){function r(e){return e&&"none"!==e}function n(e){if(e in t){var n=s.indexOf(e);if(r(t[e])){var i=sa.loadTexture(t[e],a,{flipY:o,anisotropic:8},function(t){if("normalMap"===e&&mi.isHeightImage(t.image)){var r=mi.heightToNormal(t.image);r.srcImage=t.image,t.image=r}a.refresh()});n<0&&s.push(e),u[e]=i}else n>=0&&s.splice(n,1),u[e]=null}}t=t||{};var i=this._materialsMap[e],a=this,o=this._textureFlipY;if(!i||!i.length)return void console.warn("Material %s not exits",e);var s=i[0].shader.getEnabledTextures(),u={};["diffuseMap","normalMap","parallaxOcclusionMap","emissiveMap"].forEach(function(e){n(e)},this),i[0].shader.isDefined("fragment","USE_METALNESS")?["metalnessMap","roughnessMap"].forEach(function(e){n(e)},this):["specularMap","glossinessMap"].forEach(function(e){n(e)},this),(u.normalMap||u.parallaxOcclusionMap)&&this._modelNode.traverse(function(t){t.material&&t.material.name===e&&(t.geometry.attributes.tangent.value||t.geometry.generateTangents())}),i.forEach(function(e){null!=t.transparent&&(e.transparent=!!t.transparent,e.depthMask=!t.transparent),["color","emission","specularColor"].forEach(function(r){null!=t[r]&&e.set(r,sa.parseColor(t[r]))}),["alpha","alphaCutoff","metalness","roughness","glossiness","emissionIntensity","uvRepeat","parallaxOcclusionScale"].forEach(function(r){null!=t[r]&&e.set(r,t[r])});for(var r in u)e.set(r,u[r]);e.attachShader(this.shaderLibrary.get("qtek."+(this._shaderName||"standard"),{fragmentDefines:e.shader.fragmentDefines,textures:s,vertexDefines:e.shader.vertexDefines,precision:e.shader.precision}),!0)},this),this.refresh()},je.prototype.getMaterial=function(e){function t(e){var t=n.get(e);if(!t||!t.isRenderable())return"";for(var r=t.image;r.srcImage;)r=r.srcImage;return r&&r.src||""}var r=this._materialsMap[e];if(!r)return void console.warn("Material %s not exits",e);var n=r[0],i={name:e};return["color","emission"].forEach(function(e){i[e]=sa.stringifyColor(n.get(e),"hex")}),["alpha","alphaCutoff","emissionIntensity","uvRepeat","parallaxOcclusionScale"].forEach(function(e){i[e]=n.get(e)}),["diffuseMap","normalMap","parallaxOcclusionMap","emissiveMap"].forEach(function(e){i[e]=t(e)}),n.shader.isDefined("fragment","USE_METALNESS")?(["metalness","roughness"].forEach(function(e){i[e]=n.get(e)}),["metalnessMap","roughnessMap"].forEach(function(e){i[e]=t(e)}),i.type="pbrMetallicRoughness"):(i.specularColor=sa.stringifyColor(n.get("specularColor"),"hex"),i.glossiness=n.get("glossiness"),["specularMap","glossinessMap"].forEach(function(e){i[e]=t(e)}),i.type="pbrSpecularGlossiness"),i},je.prototype.setGround=function(e){this._groundMesh.invisible=!e.show,this.refresh()},je.prototype.getMaterialsNames=function(){return Object.keys(this._materialsMap)},je.prototype.setPostEffect=function(e){this._renderMain.setPostEffect(e),this._updateMaterialsSRGB(),this.refresh()},je.prototype.start=function(){if(this._disposed)return void console.warn("Viewer already disposed");this._animation.start(),this._animation.on("frame",this._loop,this)},je.prototype.stop=function(){this._animation.stop(),this._animation.off("frame",this._loop)},je.prototype.addHotspot=function(e,t){return this._hotspotManager.add(e,t)},je.prototype.setPose=function(e){this._clips.forEach(function(t){t.setTime(e)}),this._skeletons.forEach(function(e){e.update()}),this.refresh()},je.prototype.getAnimationDuration=function(){var e=0;return this._clips.forEach(function(t){e=Math.max(t.life,e)}),e},je.prototype.refresh=function(){this._needsRefresh=!0},je.prototype.getRenderer=function(){return this._renderer},je.prototype._updateMaterialsSRGB=function(){var e=this._renderMain.isLinearSpace();for(var t in this._materialsMap)for(var r=this._materialsMap[t],n=0;n<r.length;n++)r[n].shader[e?"define":"undefine"]("fragment","SRGB_DECODE")},je.prototype._loop=function(e){this._disposed||this._needsRefresh&&(this._needsRefresh=!1,this._renderMain.prepareRender(),this._renderMain.render(),this._startAccumulating(),this._hotspotManager.update())};var Ra=1;je.prototype._stopAccumulating=function(){this._accumulatingId=0,clearTimeout(this._accumulatingTimeout)},je.prototype._startAccumulating=function(e){function t(i){if(r._accumulatingId&&i===r._accumulatingId&&!r._disposed){r._renderMain.isAccumulateFinished()&&n||(r._renderMain.render(!0),e?t(i):requestAnimationFrame(function(){t(i)}))}}var r=this;this._stopAccumulating();var n=r._renderMain.needsAccumulate();n&&(this._accumulatingId=Ra++,e?t(r._accumulatingId):this._accumulatingTimeout=setTimeout(function(){t(r._accumulatingId)},50))},je.prototype.dispose=function(){this._disposed=!0,this._renderer.disposeScene(this._renderMain.scene),this._renderMain.dispose(this._renderer),this._sceneHelper.dispose(this._renderer),this._renderer.dispose(),this._cameraControl.dispose(),this.root.removeEventListener("mousedown",this._mouseDownHandler),this.root.removeEventListener("click",this._clickHandler),this.root.innerHTML="",this.off("select"),this.off("doffocus"),this.off("unselect"),this.off("afterrender"),this.off("updatecamera"),this.stop()},Je.extend(je.prototype,Ke);var Ca={Viewer:je};e.Viewer=je,e.default=Ca,Object.defineProperty(e,"__esModule",{value:!0})});
